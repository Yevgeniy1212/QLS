&НаСервере
Функция ПолучитьПоследнююНастройкуОбменаКотораяЕщеНеПринята(ОбменДанными)

		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИзменениеНастроекОбмена.Ссылка,
		|	ИзменениеНастроекОбмена.Проведен
		|ПОМЕСТИТЬ Предварительная
		|ИЗ
		|	Документ.ИзменениеНастроекОбмена КАК ИзменениеНастроекОбмена
		|ГДЕ
		|	НЕ ИзменениеНастроекОбмена.ПометкаУдаления
		|	И ИзменениеНастроекОбмена.СсылкаНаОбменДанными = &ОбменДанными
		|	И НЕ ИзменениеНастроекОбмена.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	ИзменениеНастроекОбмена.Дата УБЫВ,
		|	ИзменениеНастроекОбмена.Номер УБЫВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Предварительная.Ссылка
		|ИЗ
		|	Предварительная КАК Предварительная
		|ГДЕ
		|	НЕ Предварительная.Проведен";

	Запрос.УстановитьПараметр("ОбменДанными", ОбменДанными);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;

	Возврат Неопределено;


КонецФункции // ПолучитьПоследнююНастройкуОбменаКотораяЕщеНеПринята()

&НаСервере
Функция ПолучитьДанныеОНастройкахОбмена(ОбменДанными)
    ДанныеОНастройках = новый Структура("ТекущийДокументНастроек,НовыйДокументНастроек,ТекущиеНастройки,НовыеНастройки",,,"","");
	
	Если ЗначениеЗаполнено(ОбменДанными) Тогда
		ДанныеОНастройках.ТекущийДокументНастроек = ОбменДанными.ПоследнийДокументИзмененияНастройкиОбмена;
		ДанныеОНастройках.ТекущиеНастройки = ОбменДанными.НастройкиОбмена;
	Иначе
		ДанныеОНастройках.ТекущийДокументНастроек = Константы.ПоследнийДокументИзмененияОбщихНастроекОбменов.Получить();
		ДанныеОНастройках.ТекущиеНастройки = Константы.ОбщиеНастройкиОбменов.Получить();
	КонецЕсли;
	
	ДокументНастроек = ПолучитьПоследнююНастройкуОбменаКотораяЕщеНеПринята(ОбменДанными);
	
	Если ЗначениеЗаполнено(ДокументНастроек) Тогда
		ДанныеОНастройках.НовыйДокументНастроек = ДокументНастроек;
		ДанныеОНастройках.НовыеНастройки = ДокументНастроек.НастройкиОбмена;
	КонецЕсли;
	
	Возврат ДанныеОНастройках;

КонецФункции // ПолучитьДанныеОНастройкахОбмена(ОбменДанными,ТекстНовойНастройки)()

&НаКлиенте
Процедура ПрименитьНовыеНастройкиОбмена(Команда)
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеОНастройках = ПолучитьДанныеОНастройкахОбмена(Элементы.Список.ТекущаяСтрока);
	ПараметрыФормы = Новый Структура("ОбменДанными,ДанныеОНастройках",Элементы.Список.ТекущаяСтрока,ДанныеОНастройках);
	ОткрытьФорму("Справочник.НетиповыеОбменыДанными.Форма.ФормаСравненияИПримененияНовыхНастроекОбмена", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура ПрименитьНовыеОбщиеНастройки(Команда)
	НовыеНастройкиОбмена = "";
	ПустойОбменДанными = ПредопределенноеЗначение("Справочник.НетиповыеОбменыДанными.ПустаяСсылка");
	ТекущиеОбщиеНастройки = "";
	ДанныеОНастройках = ПолучитьДанныеОНастройкахОбмена(ПустойОбменДанными);
	ПараметрыФормы = Новый Структура("ОбменДанными,ДанныеОНастройках",ПустойОбменДанными,ДанныеОНастройках);
	ОткрытьФорму("Справочник.НетиповыеОбменыДанными.Форма.ФормаСравненияИПримененияНовыхНастроекОбмена", ПараметрыФормы);
КонецПроцедуры
