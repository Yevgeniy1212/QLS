#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	КлючевыеРеквизиты = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("ИнспектируемыйЭлемент");
	ОбщегоНазначенияQLS.ПроверитьНаличиеДублейСтрокТЧ(ЭтотОбъект, "ИнспектируемыеЭлементы", КлючевыеРеквизиты, Отказ); 
	
	КлючевыеРеквизиты = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("Дефект");
	ОбщегоНазначенияQLS.ПроверитьНаличиеДублейСтрокТЧ(ЭтотОбъект, "Дефекты", КлючевыеРеквизиты, Отказ);
		
	Если ЗначениеЗаполнено(Идентификатор) Тогда
		ПроверитьВалидностьИдентификатора(Отказ);		
	КонецЕсли;        
	
	Если Не ВсеИнспектируемыеЭлементы Тогда
		ПроверяемыеРеквизиты.Добавить("ИнспектируемыеЭлементы");
	КонецЕсли; 
	
	Если Не ВсеДефекты Тогда
		ПроверяемыеРеквизиты.Добавить("Дефекты");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый() Тогда
		СсылкаНового = Справочники.ПулыИнспектируемыхЭлементов.ПолучитьСсылку(Новый УникальныйИдентификатор);		
		УстановитьСсылкуНового(СсылкаНового);	
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Идентификатор) Тогда
		Идентификатор = XMLСтрока(?(ЭтоНовый(), ПолучитьСсылкуНового(), Ссылка));
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьУникальностьИдентификатора(Отказ);
			
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьВалидностьИдентификатора(Отказ)
	
	Если Не Справочники.ПулыИнспектируемыхЭлементов.ЭтоВалидныйИдентификатор(Идентификатор) Тогда
		Отказ = Истина;	
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Значение ""%1"" не является УИД или строковым идентификатором.
			|Строковый идентификатор не может начинаться с цифры и должен состоять из букв, цифр и символа ""_"".';
			|en = 'The value ""%1"" is not uuid or string identifier.
			|The string identifier cannot start with a digit and contains letters, digits, and ""_"".'"), Идентификатор);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Идентификатор");
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПроверитьУникальностьИдентификатора(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПулыИнспектируемыхЭлементов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПулыИнспектируемыхЭлементов КАК ПулыИнспектируемыхЭлементов
	|ГДЕ
	|	ПулыИнспектируемыхЭлементов.Идентификатор = &Идентификатор
	|	И ПулыИнспектируемыхЭлементов.Ссылка <> &Ссылка";
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	ТекстСообщения = СтрШаблон(НСтр("ru = 'Элемент с идентификатор ""%1"" уже есть в справочнике.';
		|en = 'The element with identifier ""%1"" already exists in the catalog.'"), Идентификатор);
	ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Идентификатор");
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли



