#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	НастроитьФорму();
КонецПроцедуры     

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Заказы") Тогда
		ПроверитьЗаказНаСервере(ВыбранноеЗначение);			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗаказ(Команда)
	
	ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе, РежимВыбора, МножественныйВыбор", 
	Истина, // ЗакрыватьПриВыборе 
	Истина, // РежимВыбора 
	Ложь); // МножественныйВыбор   
	
	ОткрытьФорму("Справочник.Заказы.ФормаВыбора", 
	ПараметрыФормы, 
	ЭтаФорма,
	,
	,
	,
	, 
	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборТочкиРегистрации(Команда)
	
	ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе, РежимВыбора, МножественныйВыбор", 
	Ложь, // ЗакрыватьПриВыборе 
	Истина, // РежимВыбора 
	Истина); // МножественныйВыбор   
	
	ОткрытьФорму("Справочник.ТочкиРегистрации.ФормаВыбора", 
	ПараметрыФормы, 
	Элементы.ТочкиРегистрации,
	,
	,
	,
	, 
	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);      
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборТочкиПроверкиКачества(Команда)
	
	ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе, РежимВыбора, МножественныйВыбор", 
	Ложь, // ЗакрыватьПриВыборе 
	Истина, // РежимВыбора 
	Истина); // МножественныйВыбор   
	
	ОткрытьФорму("Справочник.ТочкиПроверкиКачества.ФормаВыбора", 
	ПараметрыФормы, 
	Элементы.ТочкиПроверкиКачества,
	,
	,
	,
	, 
	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);  
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборДефекты(Команда)
	
	ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе, РежимВыбора, МножественныйВыбор", 
	Ложь, // ЗакрыватьПриВыборе 
	Истина, // РежимВыбора 
	Истина); // МножественныйВыбор   
	
	ОткрытьФорму("Справочник.Дефекты.ФормаВыбора", 
	ПараметрыФормы, 
	Элементы.Дефекты,
	,
	,
	,
	, 
	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборИнспектируемыеЭлементы(Команда)
	
	ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе, РежимВыбора, МножественныйВыбор", 
	Ложь, // ЗакрыватьПриВыборе 
	Истина, // РежимВыбора 
	Истина); // МножественныйВыбор   
	
	ОткрытьФорму("Справочник.ИнспектируемыеЭлементы.ФормаВыбора", 
	ПараметрыФормы, 
	Элементы.ИнспектируемыеЭлементы,
	,
	,
	,
	, 
	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);   

КонецПроцедуры

&НаКлиенте
Процедура ПодборКампании(Команда)
	
	ПараметрыФормы = Новый Структура("ЗакрыватьПриВыборе, РежимВыбора, МножественныйВыбор", 
	Ложь, // ЗакрыватьПриВыборе 
	Истина, // РежимВыбора 
	Истина); // МножественныйВыбор   
	
	ОткрытьФорму("Справочник.Кампании.ФормаВыбора", 
	ПараметрыФормы, 
	Элементы.Кампании,
	,
	,
	,
	, 
	РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);   
	
КонецПроцедуры  

&НаКлиенте
Процедура ИнспектируемыеЭлементыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Для Каждого Значение Из ВыбранноеЗначение Цикл 
			Отбор = Новый Структура("ИнспектируемыйЭлемент", Значение);
			НайденныеСтроки = Объект.ИнспектируемыеЭлементы.НайтиСтроки(Отбор);
			Если НайденныеСтроки.Количество() = 0 Тогда
				НоваяСтрока = Объект.ИнспектируемыеЭлементы.Добавить();
				НоваяСтрока.ИнспектируемыйЭлемент = Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;   
	
КонецПроцедуры

&НаКлиенте
Процедура ДефектыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Для Каждого Значение Из ВыбранноеЗначение Цикл 
			Отбор = Новый Структура("Дефект", Значение);
			НайденныеСтроки = Объект.Дефекты.НайтиСтроки(Отбор);
			Если НайденныеСтроки.Количество() = 0 Тогда
				НоваяСтрока = Объект.Дефекты.Добавить();
				НоваяСтрока.Дефект = Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КампанииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Для Каждого Значение Из ВыбранноеЗначение Цикл 
			Отбор = Новый Структура("Кампания", Значение);
			НайденныеСтроки = Объект.Кампании.НайтиСтроки(Отбор);
			Если НайденныеСтроки.Количество() = 0 Тогда
				НоваяСтрока = Объект.Кампании.Добавить();
				НоваяСтрока.Кампания = Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;  
	
КонецПроцедуры

&НаКлиенте
Процедура ТочкиПроверкиКачестваОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Для Каждого Значение Из ВыбранноеЗначение Цикл 
			Отбор = Новый Структура("ТочкаПроверкиКачества", Значение);
			НайденныеСтроки = Объект.ТочкиПроверкиКачества.НайтиСтроки(Отбор);
			Если НайденныеСтроки.Количество() = 0 Тогда
				НоваяСтрока = Объект.ТочкиПроверкиКачества.Добавить();
				НоваяСтрока.ТочкаПроверкиКачества = Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТочкиРегистрацииОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Для Каждого Значение Из ВыбранноеЗначение Цикл 
			Отбор = Новый Структура("ТочкаРегистрации", Значение);
			НайденныеСтроки = Объект.ТочкиРегистрации.НайтиСтроки(Отбор);
			Если НайденныеСтроки.Количество() = 0 Тогда
				НоваяСтрока = Объект.ТочкиРегистрации.Добавить();
				НоваяСтрока.ТочкаРегистрации = Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВсеИнспектируемыеЭлементыПриИзменении(Элемент)
	НастроитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура ВсеДефектыПриИзменении(Элемент)
	НастроитьФорму();
КонецПроцедуры

&НаКлиенте
Процедура ВсеКампанииПриИзменении(Элемент)
	НастроитьФорму();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере     
Процедура НастроитьФорму() 
	
	Элементы.Дефекты.Доступность 					= Не Объект.ВсеДефекты;
	Элементы.ИнспектируемыеЭлементы.Доступность 	= Не Объект.ВсеИнспектируемыеЭлементы;
	Элементы.Кампании.Доступность 					= Не Объект.ВсеКампании;
	
КонецПроцедуры

&НаСервере     
Процедура ПроверитьЗаказНаСервере(Заказ)
	СообщениеОКонтроле = "";
	Ответ = Справочники.ПулыДанныхДляКонтроля.ВыполняетсяКонтроль(Заказ,Объект.Ссылка,СообщениеОКонтроле);
	ИтоговоеСообщение = "Проверка заказа "+Заказ+" "+?(Ответ,"выполнена","не выполнена:")+" "+СообщениеОКонтроле;
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ИтоговоеСообщение);
КонецПроцедуры

#КонецОбласти
