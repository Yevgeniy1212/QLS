#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция НайтиПоИдентификатору(Идентификатор) Экспорт
	
	Возврат Справочники.ПулыДанныхДляКонтроля.НайтиПоРеквизиту("Идентификатор", Идентификатор);
	
КонецФункции

Функция ВыполняетсяКонтроль(Заказ, Пул, ТекстСообщения = "") Экспорт      
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Пул.Ссылка КАК Ссылка,
	               |	Пул.ВсеКампании КАК ВсеКампании,
	               |	Пул.ВсеДефекты КАК ВсеДефекты,
	               |	Пул.ВсеИнспектируемыеЭлементы КАК ВсеИнспектируемыеЭлементы
	               |ПОМЕСТИТЬ ДанныеПула
	               |ИЗ
	               |	Справочник.ПулыДанныхДляКонтроля КАК Пул
	               |ГДЕ
	               |	Пул.Ссылка = &Пул
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КонсерныОстатки.Заказ КАК Заказ,
	               |	КонсерныОстатки.Консерн КАК Консерн,
	               |	КонсерныОстатки.КоличествоОстаток КАК КоличествоОстаток,
	               |	КонсерныОстатки.Консерн.ИнспектируемыйЭлемент КАК ИнспектируемыйЭлемент,
	               |	КонсерныОстатки.Консерн.Дефект КАК Дефект
	               |ИЗ
	               |	РегистрНакопления.Консерны.Остатки(, Заказ = &Заказ) КАК КонсерныОстатки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеПула КАК ДанныеПула
	               |		ПО (ИСТИНА)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПулыДанныхДляКонтроля.ИнспектируемыеЭлементы КАК ИнспектируемыеЭлементы
	               |		ПО (ИнспектируемыеЭлементы.Ссылка = ДанныеПула.Ссылка)
	               |			И КонсерныОстатки.Консерн.ИнспектируемыйЭлемент = ИнспектируемыеЭлементы.ИнспектируемыйЭлемент
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПулыДанныхДляКонтроля.Дефекты КАК Дефекты
	               |		ПО (Дефекты.Ссылка = ДанныеПула.Ссылка)
	               |			И КонсерныОстатки.Консерн.Дефект = Дефекты.Дефект
	               |ГДЕ
	               |	(ДанныеПула.ВсеИнспектируемыеЭлементы
	               |			ИЛИ НЕ ИнспектируемыеЭлементы.ИнспектируемыйЭлемент ЕСТЬ NULL)
	               |	И (ДанныеПула.ВсеДефекты
	               |			ИЛИ НЕ Дефекты.Дефект ЕСТЬ NULL)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КампанииОстатки.Заказ КАК Заказ,
	               |	КампанииОстатки.Кампания КАК Кампания
	               |ИЗ
	               |	РегистрНакопления.Кампании.Остатки(, Заказ = &Заказ) КАК КампанииОстатки
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеПула КАК ДанныеПула
	               |		ПО (ИСТИНА)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПулыДанныхДляКонтроля.Кампании КАК Кампании
	               |		ПО (Кампании.Ссылка = ДанныеПула.Ссылка)
	               |			И КампанииОстатки.Кампания = Кампании.Кампания
	               |ГДЕ
	               |	(ДанныеПула.ВсеКампании
	               |			ИЛИ НЕ Кампании.Кампания ЕСТЬ NULL)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	&Заказ КАК Заказ,
	               |	ТочкиПроверкиКачества.ТочкаПроверкиКачества КАК ТочкаПроверкиКачества
	               |ИЗ
	               |	Справочник.ПулыДанныхДляКонтроля.ТочкиПроверкиКачества КАК ТочкиПроверкиКачества
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеПула КАК ДанныеПула
	               |		ПО ТочкиПроверкиКачества.Ссылка = ДанныеПула.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФактРегистрацииЗаказаДляКонтроляПрохожденияОбязательныхТочек.СрезПоследних(, Заказ = &Заказ) КАК ФактРегистрацииЗаказаДляКонтроляПрохожденияОбязательныхТочекСрезПоследних
	               |		ПО ТочкиПроверкиКачества.ТочкаПроверкиКачества = ФактРегистрацииЗаказаДляКонтроляПрохожденияОбязательныхТочекСрезПоследних.ТочкаПроверкиКачества
	               |ГДЕ
	               |	ФактРегистрацииЗаказаДляКонтроляПрохожденияОбязательныхТочекСрезПоследних.ТочкаПроверкиКачества ЕСТЬ NULL
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	&Заказ КАК Заказ,
	               |	ТочкиРегистрации.ТочкаРегистрации КАК ТочкаРегистрации
	               |ИЗ
	               |	Справочник.ПулыДанныхДляКонтроля.ТочкиРегистрации КАК ТочкиРегистрации
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеПула КАК ДанныеПула
	               |		ПО ТочкиРегистрации.Ссылка = ДанныеПула.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ДвижениеЗаказов.Обороты(, , , Заказ = &Заказ) КАК ДвижениеЗаказовОбороты
	               |		ПО ТочкиРегистрации.ТочкаРегистрации = ДвижениеЗаказовОбороты.ТочкаРегистрации
	               |			И (ДвижениеЗаказовОбороты.КоличествоПриход > 0)
	               |ГДЕ
	               |	ДвижениеЗаказовОбороты.ТочкаРегистрации ЕСТЬ NULL";

	Запрос.УстановитьПараметр("Заказ",Заказ);
	Запрос.УстановитьПараметр("Пул",Пул);
	
	Результат = Запрос.ВыполнитьПакет();   
	
	МассивСтрокСообщений = Новый Массив;
	
	//Дефекты
	МассивСтрокДефектов = Новый Массив;
	Выборка = Результат[1].Выбрать();
	Пока Выборка.Следующий() Цикл    
		СтрокаДефекта = "'" + СокрЛП(Выборка.ИнспектируемыйЭлемент) + " ("+СокрЛП(Выборка.Дефект)+")"+ "'";
		МассивСтрокДефектов.Добавить(СтрокаДефекта);	
	КонецЦикла;   
	Если МассивСтрокДефектов.Количество()>0 Тогда
		МассивСтрокСообщений.Добавить("открытые дефекты: "+СтрСоединить(МассивСтрокДефектов,","+Символы.ПС));
	КонецЕсли;
	
	//Кампании
	МассивСтрокКампаний = Новый Массив;
	Выборка = Результат[2].Выбрать();
	Пока Выборка.Следующий() Цикл    
		СтрокаКампании = "'" + СокрЛП(Выборка.Кампания) + "'";
		МассивСтрокКампаний.Добавить(СтрокаКампании);	
	КонецЦикла;  
	Если МассивСтрокКампаний.Количество()>0 Тогда
		МассивСтрокСообщений.Добавить("открытые кампании: "+СтрСоединить(МассивСтрокКампаний,","+Символы.ПС));
	КонецЕсли;  
	
	//Обязательные точки ПроверкиКачества     
	МассивТочекПроверкиКачества = Новый Массив;	
	Выборка = Результат[3].Выбрать();
	Пока Выборка.Следующий() Цикл    
		СтрокаТочкаПроверкиКачества = "'" + СокрЛП(Выборка.ТочкаПроверкиКачества) + "'";
		МассивТочекПроверкиКачества.Добавить(СтрокаТочкаПроверкиКачества);	
	КонецЦикла;  
	Если МассивТочекПроверкиКачества.Количество()>0 Тогда
		МассивСтрокСообщений.Добавить("не пройдены обязательные точки проверки качества: "+СтрСоединить(МассивТочекПроверкиКачества,","+Символы.ПС));
	КонецЕсли;	

	//Обязательные точки Регистрации     
	МассивТочекРегистрации = Новый Массив;	
	Выборка = Результат[4].Выбрать();
	Пока Выборка.Следующий() Цикл    
		СтрокаТочкиРегистрации = "'" + СокрЛП(Выборка.ТочкаРегистрации) + "'";
		МассивТочекРегистрации.Добавить(СтрокаТочкиРегистрации);	
	КонецЦикла;  
	Если МассивТочекРегистрации.Количество()>0 Тогда
		МассивСтрокСообщений.Добавить("не пройдены обязательные точки регистрации: "+СтрСоединить(МассивТочекРегистрации,","+Символы.ПС));
	КонецЕсли; 	              
	
	//Итоговое сообщение:
	ТекстСообщения = СтрСоединить(МассивСтрокСообщений,";"+Символы.ПС); 
	
	Возврат (МассивСтрокСообщений.Количество()=0);

	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ЭтоВалидныйИдентификатор(Идентификатор) Экспорт
	
	Возврат СтроковыеФункцииКлиентСервер.ЭтоУникальныйИдентификатор(Идентификатор)
		Или ОбщегоНазначенияQLS.ЭтоСтроковыйИдентификатор(Идентификатор);
		
КонецФункции

#КонецОбласти

#КонецЕсли         
