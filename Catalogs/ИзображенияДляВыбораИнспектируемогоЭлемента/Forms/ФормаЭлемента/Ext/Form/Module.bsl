
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	АдресХранилища = ПолучитьНавигационнуюСсылку(Объект.Изображение,"ФайлХранилище");	
	
	НовЭлементОтбора = ИнспектируемыеЭлементыНаИзображении.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Изображение"); 
	НовЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	НовЭлементОтбора.Использование = Истина;
	НовЭлементОтбора.ПравоеЗначение = Объект.Ссылка;
	
	ВебСсылкаНастройкиРасположенияОбластейНаИзображении = ПолучитьURL(Объект.Ссылка);
	
	УправлениеВидимостью();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Не Объект.Ссылка.Пустая()
		И Не ПараметрыЗаписи.Свойство("ОчисткаПодтверждена")
		И НеобходимаОчисткаЗаписейПоИзображению() Тогда
		Отказ = Истина;
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВопросаОбОчистке", ЭтотОбъект);
		ТекстВопроса = "Т.к. были изменения в настройках формирования областей, все текущие области будут удалены. Продолжить?";
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	 //Создать элемент справочника "ОборудованиеПрисоединенныеФайлы"
	 Если Не НаименованиеУникально() Тогда
	 	Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Наименование должно быть уникально';en='Name should be unique'"));
		Возврат;
	 КонецЕсли; 
	
	Если КартинкаИзменена Тогда
		
		//Старую картинку удаляем
		Если ЗначениеЗаполнено(Объект.Изображение) Тогда
			Изображение = Объект.Изображение.ПолучитьОбъект();
			Если Изображение <> Неопределено Тогда
				УстановитьПривилегированныйРежим(Истина);
				Изображение.Удалить();
				УстановитьПривилегированныйРежим(Ложь);
			КонецЕсли;
			ТекущийОбъект.Изображение = Неопределено;
		КонецЕсли;
		
		//Новую картинку загружаем
		Если ЗначениеЗаполнено(АдресХранилища) Тогда
			Попытка
				ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресХранилища);
			Исключение
				Возврат;
			КонецПопытки;			
			Изображение = Справочники.ИзображенияПрисоединенныеФайлы.СоздатьЭлемент();
			Изображение.Автор = Пользователи.АвторизованныйПользователь();
			Изображение.ДатаСоздания = ТекущаяДата();
			Изображение.Наименование = Объект.Наименование + "_" + АдресХранилища;
			Изображение.ТипХраненияФайла = Перечисления.ТипыХраненияФайлов.ВИнформационнойБазе;
			Изображение.ФайлХранилище = Новый ХранилищеЗначения(ДвоичныеДанные); 
			Изображение.Записать();
			ТекущийОбъект.Изображение = Изображение.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
	
	УправлениеВидимостью();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИзображениеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВременныйАдресХранилища = АдресХранилища;	
	ВыбранноеИмяФайла = "";
	АдресХранилища = "";
	//ФайлВыбран = ПоместитьФайл(АдресХранилища,, ВыбранноеИмяФайла,,УникальныйИдентификатор);
	ДопПараметры = Новый Структура("ВременныйАдресХранилища", ВременныйАдресХранилища);
	ОбработкаОкончанияПомещения = Новый ОписаниеОповещения("ОбработатьВыборФайла", ЭтотОбъект, ДопПараметры);
	НачатьПомещениеФайла(ОбработкаОкончанияПомещения, АдресХранилища, ВыбранноеИмяФайла, Истина, УникальныйИдентификатор);
	
	//СтандартнаяОбработка = Ложь;
	//ВременныйАдресХранилища = АдресХранилища;	
	//АдресХранилища = "";
	//ВыбранноеИмяФайла = "";
	//
	//ФайлВыбран = ПоместитьФайл(АдресХранилища,, ВыбранноеИмяФайла,,УникальныйИдентификатор);
	//Если ФайлВыбран Тогда
	//	КартинкаИзменена = Истина;
	//Иначе
	//	АдресХранилища = ВременныйАдресХранилища;	
	//КонецЕсли; 

	//УправлениеВидимостью();

		
КонецПроцедуры

&НаКлиенте
Процедура ВебСсылкаНастройкиРасположенияОбластейНаИзображенииНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗапуститьПриложение(ВебСсылкаНастройкиРасположенияОбластейНаИзображении);	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьСеткуПриИзменении(Элемент)
	
	Элементы.КоличествоКолонок.Видимость = Объект.ИспользоватьСетку;
	Элементы.КоличествоСтрок.Видимость = Объект.ИспользоватьСетку;
	Объект.КоличествоКолонок = ?(Объект.ИспользоватьСетку, 1, 0);
	Объект.КоличествоСтрок = ?(Объект.ИспользоватьСетку, 1, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ФормулаПрименимостиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Объект.ФормулаПрименимости <> ВыбранноеЗначение Тогда
		Объект.ФормулаПрименимости = ВыбранноеЗначение;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормы

&НаКлиенте
Процедура ИнспектируемыеЭлементыНаИзображенииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Изображение", Объект.Ссылка);
	ОткрытьФорму("РегистрСведений.ВариантыИспользованияИнспектируемыхЭлементовНаИзображениях.Форма.ФормаЗаписи", ПараметрыФормы);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОчиститьФото(Команда)
	
	АдресХранилища = "";
	КартинкаИзменена = Истина;
	
	УправлениеВидимостью();
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОбласти(Команда)
	
	#Если НЕ ВебКлиент Тогда
		Если ОбщегоНазначенияКлиент.ЭтоLinuxКлиент() Тогда
			ПоказатьПредупреждение(, "Запуск в клиенте Linux невозможен. Используйте браузер");
			Возврат;
		КонецЕсли;
	#КонецЕсли
	
	Если Объект.Ссылка.Пустая() Или Модифицированность Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("НастроитьОбластиПослеВопроса", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, "Перед настройкой необходимо записать элемент. Записать?", РежимДиалогаВопрос.ДаНет);
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Изображение) Тогда
		ПоказатьПредупреждение(, "Не выбран файл изображения");
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Изображение", Объект.Ссылка);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияФормыОбластей", ЭтотОбъект);
	ОткрытьФорму("Справочник.ИзображенияДляВыбораИнспектируемогоЭлемента.Форма.ФормаОбластейИзображения",
		ПараметрыФормы,,,,,
		ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура РедактироватьФормулуПрименимости(Команда)
	
	ПараметрыОткрытия = Новый Структура("ЗакрыватьПриВыборе, ФормулаПрименимости", Истина, Объект.ФормулаПрименимости);
	
	ОткрытьФорму("Справочник.ИнспектируемыеЭлементы.Форма.ФормаРедактораФормулыПрименимости", ПараметрыОткрытия, Элементы.ФормулаПрименимости, УникальныйИдентификатор, , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьURL(Ссылка)
	
	URL = "";	
	НетиповойОбмен = Справочники.НетиповыеОбменыДанными.НайтиПоРеквизиту("ИмяОбработкиОбмена", "WEB_WORKSTATION_PAINTER");
	
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		URL = "Элемент справочника не записан";
	ИначеЕсли Не ЗначениеЗаполнено(НетиповойОбмен) Тогда
		URL = "URL не задан в обмене WEB WORKSTATION: PAINTER";
	Иначе
		URL = НетиповойОбмен.ИмяФайлаВыгрузки+"&image="+Ссылка.УникальныйИдентификатор();
	КонецЕсли;
	
	Возврат URL;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьВыборФайла(ФайлВыбран, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	//АдресХранилища = "";

	Если ФайлВыбран Тогда
		КартинкаИзменена = Истина;
		АдресХранилища = Адрес;
	Иначе
		АдресХранилища = ДополнительныеПараметры.ВременныйАдресХранилища;	
	КонецЕсли; 

	УправлениеВидимостью();

КонецПроцедуры // ОбработатьВыборФайла()

&НаСервере
Функция НаименованиеУникально()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИзображенияДляВыбораИнспектируемогоЭлемента.Ссылка
		|ИЗ
		|	Справочник.ИзображенияДляВыбораИнспектируемогоЭлемента КАК ИзображенияДляВыбораИнспектируемогоЭлемента
		|ГДЕ
		|	ИзображенияДляВыбораИнспектируемогоЭлемента.Ссылка <> &Ссылка
		|	И ИзображенияДляВыбораИнспектируемогоЭлемента.Наименование = &Наименование";

	Запрос.УстановитьПараметр("Наименование", Объект.Наименование);
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);

	Возврат Запрос.Выполнить().Пустой();

КонецФункции

&НаСервере
Процедура УправлениеВидимостью()
	Элементы.КоличествоКолонок.Видимость = Объект.ИспользоватьСетку;
	Элементы.КоличествоСтрок.Видимость = Объект.ИспользоватьСетку;
КонецПроцедуры

&НаКлиенте
Процедура НастроитьОбластиПослеВопроса(Результат, ДопПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если Записать() Тогда
		Если Не ЗначениеЗаполнено(Объект.Изображение) Тогда
			ПоказатьПредупреждение(, "Не выбран файл изображения");
			Возврат;
		КонецЕсли;
		ПараметрыФормы = Новый Структура("Изображение", Объект.Ссылка);
		ОткрытьФорму("Справочник.ИзображенияДляВыбораИнспектируемогоЭлемента.Форма.ФормаОбластейИзображения", ПараметрыФормы);
    КонецЕсли;
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначенияРеквизитовОбъекта(СсылкаНаОбъект, Реквизиты)
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СсылкаНаОбъект, Реквизиты);
КонецФункции

&НаКлиенте
Процедура ПослеВопросаОбОчистке(Результат, ДопПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Записать(Новый Структура("ОчисткаПодтверждена", Истина));
	Элементы.ИнспектируемыеЭлементыНаИзображении.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияФормыОбластей(Результат, ДопПараметры) Экспорт
	Элементы.ИнспектируемыеЭлементыНаИзображении.Обновить();
КонецПроцедуры

&НаСервере
Функция НеобходимаОчисткаЗаписейПоИзображению()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ВариантыИспользованияИнспектируемыхЭлементовНаИзображениях.ВариантИспользованияИнспектируемогоЭлементаНаИзображении КАК ВариантИспользованияИнспектируемогоЭлементаНаИзображении
		|ИЗ
		|	РегистрСведений.ВариантыИспользованияИнспектируемыхЭлементовНаИзображениях КАК ВариантыИспользованияИнспектируемыхЭлементовНаИзображениях
		|ГДЕ
		|	ВариантыИспользованияИнспектируемыхЭлементовНаИзображениях.Изображение = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИзображенияДляВыбораИнспектируемогоЭлемента.ИспользоватьСетку КАК ИспользоватьСетку,
		|	ИзображенияДляВыбораИнспектируемогоЭлемента.КоличествоКолонок КАК КоличествоКолонок,
		|	ИзображенияДляВыбораИнспектируемогоЭлемента.КоличествоСтрок КАК КоличествоСтрок
		|ИЗ
		|	Справочник.ИзображенияДляВыбораИнспектируемогоЭлемента КАК ИзображенияДляВыбораИнспектируемогоЭлемента
		|ГДЕ
		|	ИзображенияДляВыбораИнспектируемогоЭлемента.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Если РезультатыЗапроса[0].Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Выборка = РезультатыЗапроса[1].Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.ИспользоватьСетку <> Объект.ИспользоватьСетку
			Или Выборка.КоличествоКолонок <> Объект.КоличествоКолонок
			Или Выборка.КоличествоСтрок <> Объект.КоличествоСтрок Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти
