
&НаКлиенте
Перем ДокументБраузера;

&НаКлиенте
Перем ОкноБраузера;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Изображение", Изображение);
	ИспользоватьСетку = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Изображение, "ИспользоватьСетку");
	
	ЗаполнитьВариантыИспользования();
	СформироватьДокументHTML();
	
	Элементы.ФормаДобавитьОбласть.Видимость 		= Не ИспользоватьСетку;
	Элементы.ФормаУдалитьОбласть.Видимость 			= Не ИспользоватьСетку;
	Элементы.ФормаДеактивироватьОбласть.Видимость 	= ИспользоватьСетку;
	Элементы.ПозицияC.ТолькоПросмотр 				= ИспользоватьСетку;
	
	Если ИспользоватьСетку Тогда
		НовыйПараметр = Новый ПараметрВыбора("Отбор.ЗадаватьПозициюC", Истина);
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(НовыйПараметр);
		НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
		Элементы.ВариантИспользования.ПараметрыВыбора = НовыеПараметры;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Оповещение = Новый ОписаниеОповещения("ЗаписатьИЗакрытьЗавершение", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДокументHTMLДокументСформирован(Элемент)
	
	// Сохранение элементов document и window в переменные модуля формы,
    // для последующего быстрого доступа к элементам и функциям.
    ДокументБраузера = Элемент.Документ;
    ОкноБраузера = ДокументБраузера.parentWindow; // IE
    Если ОкноБраузера = Неопределено Тогда
        ОкноБраузера = ДокументБраузера.defaultView; // Прочие браузеры
    КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
		
	ДанныеДокументаHTML = ПрочитатьJSONНаСервере(ОкноБраузера.dataJSON);
	ВыбранныеОбласти = ДанныеДокументаHTML.Получить("selected");
	id = "";
	
	Если ВыбранныеОбласти.Количество() > 0 Тогда
		
		Для каждого ВыбраннаяОбласть Из ВыбранныеОбласти Цикл
			
			ИдентификаторОбласти = ВыбраннаяОбласть.Получить("id");
			id = id + ?(ПустаяСтрока(id), "", "; ") + ИдентификаторОбласти;
				
			СтрокиВариантаИспользования = ВариантыИспользования.НайтиСтроки(Новый Структура("id", ИдентификаторОбласти));
			ОписаниеРасположения = ЗаписатьJSONНаСервере(ВыбраннаяОбласть.Получить("points"));
			Элементы.ГруппаПравая.ТолькоПросмотр = Ложь;
				
			Если СтрокиВариантаИспользования.Количество() > 0 Тогда
				
				ИнспектируемыйЭлемент = СтрокиВариантаИспользования[0].ИнспектируемыйЭлемент;
				ВариантИспользования = СтрокиВариантаИспользования[0].ВариантИспользованияИнспектируемогоЭлементаНаИзображении;
				ПозицияA = СтрокиВариантаИспользования[0].ЗначениеВариантаПозицийA;
				ПозицияB = СтрокиВариантаИспользования[0].ЗначениеВариантаПозицийB;
				ПозицияC = СтрокиВариантаИспользования[0].ЗначениеВариантаПозицийC;
				ЭтоВложенноеИзображение = СтрокиВариантаИспользования[0].ЭтоВложенноеИзображение;
				ВложенноеИзображение = СтрокиВариантаИспользования[0].ВложенноеИзображение;
				СтрокиВариантаИспользования[0].ОписаниеРасположенияНаИзображении = ОписаниеРасположения;
				
			Иначе
				
				ИнспектируемыйЭлемент = ПредопределенноеЗначение("Справочник.ИнспектируемыеЭлементы.ПустаяСсылка");
				ВариантИспользования = ПредопределенноеЗначение("Справочник.ВариантыИспользованияИнспектируемыхЭлементов.ПустаяСсылка");
				ПозицияA = ПредопределенноеЗначение("Справочник.ВариантыПозицииA.ПустаяСсылка");
				ПозицияB = ПредопределенноеЗначение("Справочник.ВариантыПозицииB.ПустаяСсылка");
				ЭтоВложенноеИзображение = Ложь;
				ВложенноеИзображение = ПредопределенноеЗначение("Справочник.ИзображенияДляВыбораИнспектируемогоЭлемента.ПустаяСсылка");
				НоваяСтрока = ВариантыИспользования.Добавить();
				НоваяСтрока.id = ИдентификаторОбласти;
				НоваяСтрока.ОписаниеРасположенияНаИзображении = ОписаниеРасположения;
				
				Если ИспользоватьСетку Тогда
					ПозицияC = ПолучитьПозициюC(ВыбраннаяОбласть.Получить("cell"));
					НоваяСтрока.ЗначениеВариантаПозицийC = ПозицияC;
				Иначе
					ПозицияC = ПредопределенноеЗначение("Справочник.ВариантыПозицииC.ПустаяСсылка");
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	Иначе
		
		ИнспектируемыйЭлемент = ПредопределенноеЗначение("Справочник.ИнспектируемыеЭлементы.ПустаяСсылка");
		ВариантИспользования = ПредопределенноеЗначение("Справочник.ВариантыИспользованияИнспектируемыхЭлементов.ПустаяСсылка");
		ПозицияA = ПредопределенноеЗначение("Справочник.ВариантыПозицииA.ПустаяСсылка");
		ПозицияB = ПредопределенноеЗначение("Справочник.ВариантыПозицииB.ПустаяСсылка");
		ПозицияC = ПредопределенноеЗначение("Справочник.ВариантыПозицииC.ПустаяСсылка");
		ОписаниеРасположения = "";
		Элементы.ГруппаПравая.ТолькоПросмотр = Истина;
		
	КонецЕсли;
	
	Элементы.ВложенноеИзображение.Видимость 		= ЭтоВложенноеИзображение;
	Элементы.ИнспектируемыйЭлемент.Видимость 		= Не ЭтоВложенноеИзображение;
	Элементы.ВариантИспользования.Видимость 		= Не ЭтоВложенноеИзображение;
	Элементы.ПозицияA.Видимость 					= Не ЭтоВложенноеИзображение;
	Элементы.ПозицияB.Видимость 					= Не ЭтоВложенноеИзображение;
	Элементы.ПозицияC.Видимость 					= Не ЭтоВложенноеИзображение;
	
КонецПроцедуры

&НаКлиенте
Процедура ИнспектируемыйЭлементПриИзменении(Элемент)
	
	МассивИдентификаторов = СтрРазделить(id, "; ");
	
	Для каждого ИдентификаторОбласти Из МассивИдентификаторов Цикл
		Если ИспользоватьСетку Тогда
			ОкноБраузера.deactivateArea(ИдентификаторОбласти);
		КонецЕсли;
		СтрокиВариантаИспользования = ВариантыИспользования.НайтиСтроки(Новый Структура("id", ИдентификаторОбласти));
		Если СтрокиВариантаИспользования.Количество() > 0 Тогда
			СтрокиВариантаИспользования[0].ИнспектируемыйЭлемент = ИнспектируемыйЭлемент;
			СтрокиВариантаИспользования[0].ВариантИспользованияИнспектируемогоЭлементаНаИзображении = ВариантИспользования;
			СтрокиВариантаИспользования[0].ОписаниеРасположенияНаИзображении = ОписаниеРасположения;
		КонецЕсли;
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантИспользованияПриИзменении(Элемент)
		
	МассивИдентификаторов = СтрРазделить(id, "; ");
	
	Для каждого ИдентификаторОбласти Из МассивИдентификаторов Цикл
		Если ИспользоватьСетку Тогда
			Если ЗначениеЗаполнено(ВариантИспользования) Тогда
				ОкноБраузера.activateArea(ИдентификаторОбласти);
			Иначе
				ОкноБраузера.deactivateArea(ИдентификаторОбласти);
			КонецЕсли;
		КонецЕсли;
		СтрокиВариантаИспользования = ВариантыИспользования.НайтиСтроки(Новый Структура("id", ИдентификаторОбласти));
		Если СтрокиВариантаИспользования.Количество() > 0 Тогда
			СтрокиВариантаИспользования[0].ИнспектируемыйЭлемент = ИнспектируемыйЭлемент;
			СтрокиВариантаИспользования[0].ВариантИспользованияИнспектируемогоЭлементаНаИзображении = ВариантИспользования;
			СтрокиВариантаИспользования[0].ОписаниеРасположенияНаИзображении = ОписаниеРасположения;
		КонецЕсли;
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПозицияAПриИзменении(Элемент)
	
	МассивИдентификаторов = СтрРазделить(id, "; ");
	
	Для каждого ИдентификаторОбласти Из МассивИдентификаторов Цикл
		СтрокиВариантаИспользования = ВариантыИспользования.НайтиСтроки(Новый Структура("id", ИдентификаторОбласти));
		Если СтрокиВариантаИспользования.Количество() > 0 Тогда	
			СтрокиВариантаИспользования[0].ЗначениеВариантаПозицийA = ПозицияA;
			СтрокиВариантаИспользования[0].ОписаниеРасположенияНаИзображении = ОписаниеРасположения;
		КонецЕсли;
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПозицияBПриИзменении(Элемент)
	
	МассивИдентификаторов = СтрРазделить(id, "; ");
	
	Для каждого ИдентификаторОбласти Из МассивИдентификаторов Цикл
		СтрокиВариантаИспользования = ВариантыИспользования.НайтиСтроки(Новый Структура("id", ИдентификаторОбласти));
		Если СтрокиВариантаИспользования.Количество() > 0 Тогда	
			СтрокиВариантаИспользования[0].ЗначениеВариантаПозицийB = ПозицияB;
			СтрокиВариантаИспользования[0].ОписаниеРасположенияНаИзображении = ОписаниеРасположения;
		КонецЕсли;
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПозицияCПриИзменении(Элемент)
	
	МассивИдентификаторов = СтрРазделить(id, "; ");
	
	Для каждого ИдентификаторОбласти Из МассивИдентификаторов Цикл
		СтрокиВариантаИспользования = ВариантыИспользования.НайтиСтроки(Новый Структура("id", ИдентификаторОбласти));
		Если СтрокиВариантаИспользования.Количество() > 0 Тогда	
			СтрокиВариантаИспользования[0].ЗначениеВариантаПозицийC = ПозицияC;
			СтрокиВариантаИспользования[0].ОписаниеРасположенияНаИзображении = ОписаниеРасположения;
		КонецЕсли;
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтоВложенноеИзображениеПриИзменении(Элемент)
	
	Элементы.ВложенноеИзображение.Видимость 		= ЭтоВложенноеИзображение;
	Элементы.ИнспектируемыйЭлемент.Видимость 		= Не ЭтоВложенноеИзображение;
	Элементы.ВариантИспользования.Видимость 		= Не ЭтоВложенноеИзображение;
	Элементы.ПозицияA.Видимость 					= Не ЭтоВложенноеИзображение;
	Элементы.ПозицияB.Видимость 					= Не ЭтоВложенноеИзображение;
	Элементы.ПозицияC.Видимость 					= Не ЭтоВложенноеИзображение;
	
	ВложенноеИзображение = ПредопределенноеЗначение("Справочник.ИзображенияДляВыбораИнспектируемогоЭлемента.ПустаяСсылка");
	ИнспектируемыйЭлемент = ПредопределенноеЗначение("Справочник.ИнспектируемыеЭлементы.ПустаяСсылка");
	ВариантИспользования = ПредопределенноеЗначение("Справочник.ВариантыИспользованияИнспектируемыхЭлементов.ПустаяСсылка");
	ПозицияA = ПредопределенноеЗначение("Справочник.ВариантыПозицииA.ПустаяСсылка");
	ПозицияB = ПредопределенноеЗначение("Справочник.ВариантыПозицииB.ПустаяСсылка");
	ПозицияC = ПредопределенноеЗначение("Справочник.ВариантыПозицииC.ПустаяСсылка");
	
	МассивИдентификаторов = СтрРазделить(id, "; ");
	Для каждого ИдентификаторОбласти Из МассивИдентификаторов Цикл
		Если ИспользоватьСетку Тогда
			ОкноБраузера.deactivateArea(ИдентификаторОбласти);
		КонецЕсли;
		СтрокиВариантаИспользования = ВариантыИспользования.НайтиСтроки(Новый Структура("id", ИдентификаторОбласти));
		Если СтрокиВариантаИспользования.Количество() > 0 Тогда
			СтрокиВариантаИспользования[0].ИнспектируемыйЭлемент = ИнспектируемыйЭлемент;
			СтрокиВариантаИспользования[0].ВариантИспользованияИнспектируемогоЭлементаНаИзображении = ВариантИспользования;
			СтрокиВариантаИспользования[0].ЗначениеВариантаПозицийA = ПозицияA;
			СтрокиВариантаИспользования[0].ЗначениеВариантаПозицийB = ПозицияB;
			СтрокиВариантаИспользования[0].ЗначениеВариантаПозицийC = ПозицияC;
			СтрокиВариантаИспользования[0].ЭтоВложенноеИзображение = ЭтоВложенноеИзображение;
			СтрокиВариантаИспользования[0].ВложенноеИзображение = ВложенноеИзображение;
			СтрокиВариантаИспользования[0].ОписаниеРасположенияНаИзображении = ОписаниеРасположения;
		КонецЕсли;
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенноеИзображениеПриИзменении(Элемент)
	
	МассивИдентификаторов = СтрРазделить(id, "; ");
	
	Для каждого ИдентификаторОбласти Из МассивИдентификаторов Цикл
		Если ИспользоватьСетку Тогда
			Если ЗначениеЗаполнено(ВложенноеИзображение) Тогда
				ОкноБраузера.activateArea(ИдентификаторОбласти);
			Иначе
				ОкноБраузера.deactivateArea(ИдентификаторОбласти);
			КонецЕсли;
		КонецЕсли;
		СтрокиВариантаИспользования = ВариантыИспользования.НайтиСтроки(Новый Структура("id", ИдентификаторОбласти));
		Если СтрокиВариантаИспользования.Количество() > 0 Тогда
			СтрокиВариантаИспользования[0].ВложенноеИзображение = ВложенноеИзображение;
			СтрокиВариантаИспользования[0].ОписаниеРасположенияНаИзображении = ОписаниеРасположения;
		КонецЕсли;
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьОбласть(Команда)
	ОкноБраузера.addElement();
КонецПроцедуры

&НаКлиенте
Процедура УдалитьОбласть(Команда)
	
	Если ЗначениеЗаполнено(id) Тогда
		ОкноБраузера.removeElement();
		ОчиститьДанныеОбласти();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДеактивироватьОбласть(Команда)
	
	Если ЗначениеЗаполнено(id) Тогда
		ОкноБраузера.deactivateArea(id);
		ОчиститьДанныеОбласти();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	СохранитьНаСервере(ОкноБраузера.dataJSON);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрыть(Команда)
	СохранитьНаСервере(ОкноБраузера.dataJSON);
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьВариантыИспользования()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВариантыИспользованияИнспектируемыхЭлементовНаИзображениях.ИдентификаторЭлемента КАК id,
		|	ВариантыИспользованияИнспектируемыхЭлементовНаИзображениях.ОписаниеРасположенияНаИзображении КАК ОписаниеРасположенияНаИзображении,
		|	ВариантыИспользованияИнспектируемыхЭлементовНаИзображениях.ИнспектируемыйЭлемент КАК ИнспектируемыйЭлемент,
		|	ВариантыИспользованияИнспектируемыхЭлементовНаИзображениях.ВариантИспользованияИнспектируемогоЭлементаНаИзображении КАК ВариантИспользованияИнспектируемогоЭлементаНаИзображении,
		|	ВариантыИспользованияИнспектируемыхЭлементовНаИзображениях.ЗначениеВариантаПозицийA КАК ЗначениеВариантаПозицийA,
		|	ВариантыИспользованияИнспектируемыхЭлементовНаИзображениях.ЗначениеВариантаПозицийB КАК ЗначениеВариантаПозицийB,
		|	ВариантыИспользованияИнспектируемыхЭлементовНаИзображениях.ЗначениеВариантаПозицийC КАК ЗначениеВариантаПозицийC,
		|	ВариантыИспользованияИнспектируемыхЭлементовНаИзображениях.ВложенноеИзображение КАК ВложенноеИзображение,
		|	ВариантыИспользованияИнспектируемыхЭлементовНаИзображениях.ВложенноеИзображение <> ЗНАЧЕНИЕ(Справочник.ИзображенияДляВыбораИнспектируемогоЭлемента.ПустаяСсылка) КАК ЭтоВложенноеИзображение
		|ИЗ
		|	РегистрСведений.ВариантыИспользованияИнспектируемыхЭлементовНаИзображениях КАК ВариантыИспользованияИнспектируемыхЭлементовНаИзображениях
		|ГДЕ
		|	ВариантыИспользованияИнспектируемыхЭлементовНаИзображениях.Изображение = &Изображение";
	
	Запрос.УстановитьПараметр("Изображение", Изображение);
	ВариантыИспользования.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДокументHTML()
		
	Если ИспользоватьСетку Тогда
		МакетHTML = Справочники.ИзображенияДляВыбораИнспектируемогоЭлемента.ПолучитьМакет("МакетСетки");
	Иначе
		МакетHTML = Справочники.ИзображенияДляВыбораИнспектируемогоЭлемента.ПолучитьМакет("МакетРисования");
	КонецЕсли;
	
	МакетKonva = Справочники.ИзображенияДляВыбораИнспектируемогоЭлемента.ПолучитьМакет("МакетKonva");
	
	Если ЗначениеЗаполнено(Изображение.Изображение.СжатоеИзображениеBase64) Тогда
		ИзображениеСодержимое = Изображение.Изображение.СжатоеИзображениеBase64;
	Иначе 
		ДвоичныеДанные = Изображение.Изображение.ФайлХранилище.Получить();
		ИзображениеСодержимое = "data:image/png;base64," + СтрЗаменить(Base64Строка(ДвоичныеДанные), Символ(13) + Символ(10), "");
	КонецЕсли;
	
	ВариантыИспользованияМассив = Новый Массив;
	Для каждого ТекСтрока Из ВариантыИспользования Цикл
		ВариантИспользованияСтруктура = Новый Структура;
		ВариантИспользованияСтруктура.Вставить("id", ТекСтрока.id);
		ВариантИспользованияСтруктура.Вставить("points", JSON.Прочитать_JSON(ТекСтрока.ОписаниеРасположенияНаИзображении));
		ВариантыИспользованияМассив.Добавить(ВариантИспользованияСтруктура);
	КонецЦикла;
	
	Результат = СтрЗаменить(МакетHTML.ПолучитьТекст(), "[ПараметрKonva]", МакетKonva.ПолучитьТекст());
	Результат = СтрЗаменить(Результат, "[ПараметрКартинка]", ИзображениеСодержимое);        
	Результат = СтрЗаменить(Результат, "[ПараметрОбласти]", JSON.Записать_JSON(ВариантыИспользованияМассив, Ложь));
	Результат = СтрЗаменить(Результат, "[ПараметрКоличествоКолонок]", Изображение.КоличествоКолонок);
	Результат = СтрЗаменить(Результат, "[ПараметрКоличествоСтрок]", Изображение.КоличествоСтрок);
	
	ДокументHTML = Результат;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНаСервере(ДанныеJSON)
	
	НаборЗаписей = РегистрыСведений.ВариантыИспользованияИнспектируемыхЭлементовНаИзображениях.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Изображение.Установить(Изображение);
	НаборЗаписей.Записать();
	
	Если Не ИспользоватьСетку Тогда
		ДанныеДокументаHTML = ПрочитатьJSONНаСервере(ДанныеJSON);
		Для каждого ОбластьКартинки Из ДанныеДокументаHTML.Получить("areas") Цикл
			ДанныеОбластиJSON = ОбластьКартинки.Получить("ref");
			СтрокиВариантаИспользования = ВариантыИспользования.НайтиСтроки(Новый Структура("id", ОбластьКартинки.Получить("id"))); 
			Для каждого ТекСтрока Из СтрокиВариантаИспользования Цикл
				ТекСтрока.ОписаниеРасположенияНаИзображении = ПолучитьОписаниеРасположения(ДанныеОбластиJSON);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Для каждого ТекСтрока Из ВариантыИспользования Цикл
		Если Не ЗначениеЗаполнено(ТекСтрока.ВариантИспользованияИнспектируемогоЭлементаНаИзображении)
			И Не ЗначениеЗаполнено(ТекСтрока.ВложенноеИзображение) Тогда
			Продолжить;
		КонецЕсли;
		МенеджерЗаписи = РегистрыСведений.ВариантыИспользованияИнспектируемыхЭлементовНаИзображениях.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Изображение = Изображение;
		МенеджерЗаписи.ИнспектируемыйЭлемент = ТекСтрока.ИнспектируемыйЭлемент;
		МенеджерЗаписи.ВариантИспользованияИнспектируемогоЭлементаНаИзображении = ТекСтрока.ВариантИспользованияИнспектируемогоЭлементаНаИзображении;
		МенеджерЗаписи.ИнспектируемыйЭлемент = ТекСтрока.ВариантИспользованияИнспектируемогоЭлементаНаИзображении.Владелец;
		МенеджерЗаписи.ЗначениеВариантаПозицийA = ТекСтрока.ЗначениеВариантаПозицийA;
		МенеджерЗаписи.ЗначениеВариантаПозицийB = ТекСтрока.ЗначениеВариантаПозицийB;
		МенеджерЗаписи.ЗначениеВариантаПозицийC = ТекСтрока.ЗначениеВариантаПозицийC;
		МенеджерЗаписи.ВложенноеИзображение = ТекСтрока.ВложенноеИзображение;
		МенеджерЗаписи.ОписаниеРасположенияНаИзображении = ТекСтрока.ОписаниеРасположенияНаИзображении;
		МенеджерЗаписи.ИдентификаторЭлемента = ТекСтрока.id;
		МенеджерЗаписи.Записать(Истина);
	КонецЦикла;
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрытьЗавершение(Результат = Неопределено, ДопПараметры = Неопределено) Экспорт
	СохранитьНаСервере(ОкноБраузера.dataJSON);
	Закрыть();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПрочитатьJSONНаСервере(Стр)
	Возврат JSON.Прочитать_JSON(Стр);
КонецФункции

&НаСервереБезКонтекста
Функция ЗаписатьJSONНаСервере(Данные)
	Возврат JSON.Записать_JSON(Данные, Ложь);
КонецФункции

&НаКлиенте
Процедура ОчиститьДанныеОбласти()
			
	Элементы.ГруппаПравая.ТолькоПросмотр = Истина;
	
	МассивИдентификаторов = СтрРазделить(id, "; ");
	
	Для каждого ИдентификаторОбласти Из МассивИдентификаторов Цикл
		СтрокиВариантаИспользования = ВариантыИспользования.НайтиСтроки(Новый Структура("id", ИдентификаторОбласти));
		Для каждого СтрокаВариантаИспользования Из СтрокиВариантаИспользования Цикл
			ВариантыИспользования.Удалить(СтрокаВариантаИспользования);
		КонецЦикла;
	КонецЦикла;
	
	id = "";
	ИнспектируемыйЭлемент = ПредопределенноеЗначение("Справочник.ИнспектируемыеЭлементы.ПустаяСсылка");
	ВариантИспользования = ПредопределенноеЗначение("Справочник.ВариантыИспользованияИнспектируемыхЭлементов.ПустаяСсылка");
	ПозицияA = ПредопределенноеЗначение("Справочник.ВариантыПозицииA.ПустаяСсылка");
	ПозицияB = ПредопределенноеЗначение("Справочник.ВариантыПозицииB.ПустаяСсылка");
	ПозицияC = ПредопределенноеЗначение("Справочник.ВариантыПозицииC.ПустаяСсылка");
	ОписаниеРасположения = "";
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПозициюC(Наименование)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВариантыПозицииC.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ВариантыПозицииC КАК ВариантыПозицииC
		|ГДЕ
		|	ВариантыПозицииC.Владелец = ЗНАЧЕНИЕ(Справочник.ГруппыВариантовПозицииС.Сетка)
		|	И ВариантыПозицииC.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", Наименование);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Справочники.ВариантыПозицииC.ПустаяСсылка();
	
КонецФункции

&НаСервере
Функция ПолучитьОписаниеРасположения(ДанныеОбластиJSON)
	
	МассивТочек = Новый Массив;
	
	АттрибутыОбласти = ПрочитатьJSONНаСервере(ДанныеОбластиJSON).Получить("attrs");
	x = АттрибутыОбласти.Получить("x");
	Если x = Неопределено Тогда
		x = 0;
	КонецЕсли;
	y = АттрибутыОбласти.Получить("y");
	Если y = Неопределено Тогда
		y = 0;
	КонецЕсли;
	
	МассивТочек = АттрибутыОбласти.Получить("points");
	Для ы = 0 По МассивТочек.Количество() - 1 Цикл
		МассивТочек[ы] = МассивТочек[ы] + ?(ы % 2 = 0, x, y);
	КонецЦикла;
	
	Возврат ЗаписатьJSONНаСервере(МассивТочек);
	
КонецФункции

#КонецОбласти
