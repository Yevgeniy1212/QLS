#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает заказы, к которым привязан переданный штрихкод
// 
// Параметры:
// 	ШтрихКод - Строка
// 	РабочееМесто - СправочникСсылка.РабочиеМестаОператоров
// Возвращаемое значение:
// 	ТаблицаЗначений - Описание:
// * Заказ - СправочникСсылка.Заказы -
// * VIN - Строка -
// * ОбъектПланирования - Строка -
// * ExteriorСolour - Строка -
// * Модификация - Строка -
Функция НайтиПоVINНомеру(ШтрихКод) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Заказы.Ссылка КАК Заказ,
	|	Заказы.VIN КАК VIN
	|ИЗ
	|	Справочник.Заказы КАК Заказы
	|ГДЕ
	|	НЕ Заказы.ПометкаУдаления
	|	И (Заказы.VIN = &ШтрихКод)";
	
	Запрос.УстановитьПараметр("ШтрихКод", ШтрихКод);
	
	Результат = Запрос.Выполнить();
	
	Заказ = Справочники.Заказы.ПустаяСсылка();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		Заказ = Выборка.Заказ;
	КонецЕсли; 
	
	Возврат Заказ;
	
КонецФункции

// Выполняет поиск заказа по идентификатору заказа и типу идентификатора заказа.
// Алгоритм поиска заказа следующий:
// Если ТипИдентификатораЗаказа не заполнен или равен "guid", считаем, что передан ГУИД и ищем по ссылке.
// Если ТипИдентификатораЗаказа равен "vin", ищем по реквизиту VIN.
// Если ТипИдентификатораЗаказа равен "code", ищем по реквизиту Код.
// Если ТипИдентификатораЗаказа равен "orderCode", ищем по дополнительным свойствам.
//
// Параметры:
//  ИдентификаторЗаказа - строка - идентификатор для поиска.
//  ТипИдентификатораЗаказа - строка - тип идентификатора заказа ("guid", "vin", "code", "orderCode").
//
Функция НайтиЗаказПоИдентификатору(ИдентификаторЗаказа, ТипИдентификатораЗаказа = Неопределено) Экспорт
	
	Заказ = Справочники.Заказы.ПустаяСсылка();
	
	
	Если НЕ ЗначениеЗаполнено(ТипИдентификатораЗаказа) ИЛИ ТипИдентификатораЗаказа = "guid" Тогда
		Если СтроковыеФункцииКлиентСервер.ЭтоУникальныйИдентификатор(ИдентификаторЗаказа) Тогда
			ЗаказСсылка = Справочники.Заказы.ПолучитьСсылку(Новый УникальныйИдентификатор(ИдентификаторЗаказа));
			
			Если ОбщегоНазначения.СсылкаСуществует(ЗаказСсылка) Тогда
				Заказ = ЗаказСсылка;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ИдентификаторЗаказа", ИдентификаторЗаказа);
		
		Если Лев(ТипИдентификатораЗаказа, 3) = "vin" Тогда
			// Если VIN содержит 17 символов, ищем по полному совпадению.
			// Если VIN содержит от 1 до 16 символов, ищем по подстроке справа.
			// Если VIN содержит больше 17 символов, считаем это ошибкой.
			
			КоличествоСимволовVIN = СтрДлина(ИдентификаторЗаказа);
			
			Если КоличествоСимволовVIN = 17 Тогда
				Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	Заказы.Ссылка КАК Заказ
					|ИЗ
					|	Справочник.Заказы КАК Заказы
					|ГДЕ
					|	НЕ Заказы.ПометкаУдаления
					|	И Заказы.VIN = &ИдентификаторЗаказа";
			ИначеЕсли 0 < КоличествоСимволовVIN И КоличествоСимволовVIN < 17 Тогда
				Запрос.УстановитьПараметр("НачалоПодстроки", 17 - КоличествоСимволовVIN + 1);
				Запрос.УстановитьПараметр("КоличествоСимволовVIN", КоличествоСимволовVIN);
				Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	Заказы.Ссылка КАК Заказ
					|ИЗ
					|	Справочник.Заказы КАК Заказы
					|ГДЕ
					|	НЕ Заказы.ПометкаУдаления
					|	И ПОДСТРОКА(Заказы.VIN, &НачалоПодстроки, &КоличествоСимволовVIN) = &ИдентификаторЗаказа";
			Иначе
				Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	ЗНАЧЕНИЕ(Справочник.Заказы.ПустаяСсылка) КАК Заказ";
			КонецЕсли;
		ИначеЕсли ТипИдентификатораЗаказа = "code" Тогда
			Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	Заказы.Ссылка КАК Заказ
				|ИЗ
				|	Справочник.Заказы КАК Заказы
				|ГДЕ
				|	НЕ Заказы.ПометкаУдаления
				|	И Заказы.Код = &ИдентификаторЗаказа";
		ИначеЕсли ТипИдентификатораЗаказа = "orderCode" Тогда
			Запрос.УстановитьПараметр("ИмяРеквизитаКод", "Код");
			Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ЗначениеСвойствЗаказа.Ссылка КАК Ссылка
				|ПОМЕСТИТЬ ЗначениеСвойствЗаказа
				|ИЗ
				|	Справочник.ЗначениеСвойствЗаказа КАК ЗначениеСвойствЗаказа
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ДополнительныеРеквизитыЗаказа КАК ДополнительныеРеквизитыЗаказа
				|		ПО ЗначениеСвойствЗаказа.Владелец = ДополнительныеРеквизитыЗаказа.Ссылка
				|ГДЕ
				|	ДополнительныеРеквизитыЗаказа.Наименование = &ИмяРеквизитаКод
				|	И ЗначениеСвойствЗаказа.Наименование = &ИдентификаторЗаказа
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ДополнительныеСвойстваЗаказа.Заказ КАК Заказ
				|ИЗ
				|	ЗначениеСвойствЗаказа КАК ЗначениеСвойствЗаказа
				|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДополнительныеСвойстваЗаказа КАК ДополнительныеСвойстваЗаказа
				|		ПО ЗначениеСвойствЗаказа.Ссылка = ДополнительныеСвойстваЗаказа.Значение";
		Иначе
			Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	ЗНАЧЕНИЕ(Справочник.Заказы.ПустаяСсылка) КАК Заказ";
		КонецЕсли;
		
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Количество() = 1 Тогда
			Выборка.Следующий();
			Заказ = Выборка.Заказ;
		КонецЕсли;
	КонецЕсли;
	
	
	Возврат Заказ;
	
КонецФункции

#КонецОбласти

#КонецЕсли