#Область НеКоманды
Процедура ЗаполнитьЦеныПоРаботе()
	Если не ЗначениеЗаполнено(ЭтаФорма.Объект.Габарит) Тогда
		Сообщить("Габарит не заполнен");
		Возврат
	КонецЕсли;
	Если ЭтаФорма.Объект.Работы.Количество()=0 Тогда
		Возврат
	КонецЕсли;
	Запрос = новый запрос("ВЫБРАТЬ
	                      |	SAP_СуммыРемонта.Работа КАК Работа,
	                      |	SAP_СуммыРемонта.Габарит КАК Габарит,
	                      |	SAP_СуммыРемонта.ОтветственныйЗаДефект КАК ОтветственныйЗаДефект,
	                      |	SAP_СуммыРемонта.Трудоемкость КАК Трудоемкость,
	                      |	SAP_СуммыРемонта.Материалы КАК Материалы,
	                      |	SAP_СуммыРемонта.SAP_Итого КАК SAP_Итого
	                      |ИЗ
	                      |	РегистрСведений.SAP_СуммыРемонта КАК SAP_СуммыРемонта
	                      |ГДЕ
	                      | SAP_СуммыРемонта.Габарит = &Габарит
	                      |	И SAP_СуммыРемонта.ОтветственныйЗаДефект = &ОтветственныйЗаДефект");
	Запрос.УстановитьПараметр("Габарит",ЭтаФорма.Объект.Габарит);
	Запрос.УстановитьПараметр("ОтветственныйЗаДефект",ЭтаФорма.Объект.Виновник);
	
	ДанныеПоЦенам = Запрос.Выполнить().Выгрузить();
	Для каждого СтрокаТЧ Из ЭтаФорма.Объект.Работы Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.Работа) Тогда
			Продолжить;
		КонецЕсли;
		Отбор = новый Структура("Работа",СтрокаТЧ.Работа);
		НайденныеСтроки = ДанныеПоЦенам.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() Тогда
			ЗаполнитьЗначенияСвойств(СтрокаТЧ,НайденныеСтроки[0]);
		Иначе 
			Сообщить(
			"для работы: "+СтрокаТЧ.Работа
			+" По Габариту: "+ЭтаФорма.Объект.Габарит
			+" и виновнику: "+ЭтаФорма.Объект.Виновник
			+" не найдкны цены. Строка: " + СтрокаТЧ.НомерСтроки);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры
#КонецОбласти

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	запрос=новый запрос("ВЫБРАТЬ
	                    |	SAP_Ограничения.Реквизит КАК Реквизит,
	                    |	SAP_Ограничения.Доступ КАК Доступ
	                    |ИЗ
	                    |	РегистрСведений.SAP_Ограничения КАК SAP_Ограничения
	                    |ГДЕ
	                    |	SAP_Ограничения.Пользователь = &Пользователь
	                    |	И SAP_Ограничения.Метаданные = &Метаданные");
	запрос.УстановитьПараметр("Метаданные","АктДефектации");
	запрос.УстановитьПараметр("Пользователь",Пользователи.ТекущийПользователь());
	Выборка = запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Доступ = Перечисления.SAP_УровниДоступа.Редактирование Тогда
			Элементы[Выборка.Реквизит].ТолькоПросмотр = ЛОЖЬ;
		КонецЕсли;
		КонецЦикла;
		//Иватов	
		НовыйЗапрос = Новый Запрос;
		НовыйЗапрос.Текст = "ВЫБРАТЬ
			         |	ДвижениеЗаказовОстатки.ТочкаРегистрации КАК ТочкаРегистрации
			         |ИЗ
			         |	РегистрНакопления.ДвижениеЗаказов.Остатки КАК ДвижениеЗаказовОстатки
			         |ГДЕ
			         |	ДвижениеЗаказовОстатки.Заказ = &Заказ";
		      НовыйЗапрос.УстановитьПараметр("Заказ",ЭтотОбъект.Объект.Заказ);
	РезультатЗапроса = НовыйЗапрос.Выполнить().Выбрать();
	ТочкаРегистрации = Неопределено;
	Пока РезультатЗапроса.Следующий() Цикл
   	 	последняяточка = РезультатЗапроса.ТочкаРегистрации;
    	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура РаботыРаботаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	//РаботыРаботаНачалоВыбораНаСервере();
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ЗначениеЗаполнено(ЭтаФорма.Объект.Габарит) Тогда
		ВызватьИсключение "Габарит не выбран";
	КонецЕсли;
	ПараметрыОткрытия = новый Структура;
	ПараметрыОткрытия.Вставить("Габарит",ЭтаФорма.Объект.Габарит);
	ДанныеВыбора = ОткрытьФорму("Справочник.SAP_Работы.ФормаВыбора",ПараметрыОткрытия,Элемент);
КонецПроцедуры

&НаКлиенте
Процедура РаботыПриИзменении(Элемент)
	ЗаполнитьЦеныПоРаботе();
КонецПроцедуры
