
&НаСервере
Процедура УстановитьВидимость()
	
	Элементы.Разделитель.Видимость = (ВариантЗагрузки = 1);
	Элементы.ОчищатьТабличнуюЧасть.Видимость = ПоказыватьФлагОчищать;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьКолонкиВТабличноеПоле(Колонки, ШиринаКолонок = Неопределено)
	
	Если Колонки = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	Н = 0;
	Для Каждого Колонка Из Колонки Цикл
		Н = Н + 1;
		Область = ТаблицаДанных.Область("R1C" + Н + ":R1C" + Н);
		Область.Текст = Колонка.Значение;
		Область.Защита = Истина;
		
		Если НЕ ШиринаКолонок = Неопределено Тогда 
			Если ШиринаКолонок.Свойство(Колонка.Ключ) Тогда
				Область.ШиринаКолонки = ШиринаКолонок[Колонка.Ключ];
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьТабличноеПоле(Колонки, ШиринаКолонок)
	
	ТаблицаДанных.Очистить();
	ДобавитьКолонкиВТабличноеПоле(Колонки, ШиринаКолонок);
	
	КонечнаяСтрокаВыгрузка = ТаблицаДанных.ВысотаТаблицы;
	
КонецПроцедуры

&НаСервере
Функция СоздатьОписаниеТаблицыДляПередачи()
	
	Если НЕ ТипЗнч(Колонки) = Тип("Структура") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Таблица = Новый ТаблицаЗначений;
	Для Каждого Колонка Из Колонки Цикл
		ОписаниеТипаСтрока = Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(0));
		Таблица.Колонки.Добавить(Колонка.Ключ, ОписаниеТипаСтрока);
	КонецЦикла;
	
	Возврат Таблица;
КонецФункции

&НаСервере
Функция ПодготовитьДанныеДляПередачи()
	
	Таб = СоздатьОписаниеТаблицыДляПередачи();
	Если Таб = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	КоличествоКолонок = Колонки.Количество();
	Для Н = НачальнаяСтрокаВыгрузка По КонечнаяСтрокаВыгрузка Цикл
		
		НоваяСтрока = Таб.Добавить();
		Для К = 1 По КоличествоКолонок Цикл
			Область = ТаблицаДанных.Область("R" + Формат(Н, "ЧГ=") + "C" + К + ":R" + Формат(Н, "ЧГ=") + "C" + К);
			НоваяСтрока[К-1] = Область.Текст;
		КонецЦикла;	
	КонецЦикла;
	
	Структура = Новый Структура("ТаблицаДанных, ОчищатьТаблицу", Таб, ОчищатьТабличнуюЧасть);
	АдресХранилища = ПоместитьВоВременноеХранилище(Структура);
	
	Возврат АдресХранилища;
КонецФункции

&НаКлиенте
Функция ПолучитьФильтрВыбораФайлаНаКлиенте(Маска = "Excel (*.xls)|*.xls|Excel (*.xlsx)|*.xlsx")
	
	Фильтр = Маска;
	
	Если Фильтр = "txt" Тогда
		Фильтр = НСтр("ru='Текстовый (*.txt)|*.txt';en='Text (*.txt)|*.txt'");
	Иначе
		Фильтр = Маска;
	КонецЕсли;
	
	Возврат Фильтр;
КонецФункции

&НаСервере
Функция ПолучитьФильтрВыбораФайлаНаСервере(Маска = "Excel (*.xls)|*.xls|Excel (*.xlsx)|*.xlsx")
	
	Фильтр = Маска;
	
	Если Фильтр = "txt" Тогда
		Фильтр = НСтр("ru='Текстовый (*.txt)|*.txt';en='Text (*.txt)|*.txt'");
	Иначе
		Фильтр = Маска;
	КонецЕсли;
	
	Возврат Фильтр;
КонецФункции

&НаКлиенте
Процедура УстановитьФильтрВыбораФайла()
	
	Если ВариантЗагрузки = 1 Тогда
		Фильтр = ПолучитьФильтрВыбораФайлаНаКлиенте("txt");
	Иначе	
		Фильтр = ПолучитьФильтрВыбораФайлаНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтаФорма.Заголовок = НСтр("ru='Загрузка из внешнего файла';en='Downloading from external file'");
	Если Параметры.Свойство("Заголовок") Тогда
		ЭтаФорма.Заголовок = Параметры.Заголовок;
	КонецЕсли;	
	
	Если Параметры.Свойство("Колонки") Тогда
		Колонки = Параметры.Колонки;
		Если ТипЗнч(Колонки) = Тип("Структура") Тогда
			Колонки = Параметры.Колонки;
			Если Параметры.Свойство("ШиринаКолонок") Тогда
				ШиринаКолонок = Параметры.ШиринаКолонок;
			КонецЕсли;	
			ПодготовитьТабличноеПоле(Колонки, ШиринаКолонок);
		Иначе
			Сообщить(НСтр("ru='Параметр <Колонки> должен быть структурой.';en='Parameter <Columns> should be a structure.'"));
		КонецЕсли;	
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("Фильтр", Фильтр) Тогда
		Фильтр = ПолучитьФильтрВыбораФайлаНаСервере();
	КонецЕсли;	
	
	Если НЕ Параметры.Свойство("ИмяСобытия", ИмяСобытия) Тогда
		ИмяСобытия = "ПереданыДанныеИзФормыЗагрузки";
	КонецЕсли;	
	
	Параметры.Свойство("Каталог", Каталог);
	
	Вариант = 0;
	Если Параметры.Свойство("ВариантЗагрузки", Вариант) Тогда
		Если ТипЗнч(Вариант) = Тип("Число") Тогда
			ВариантЗагрузки = Вариант;
		Иначе
			Сообщить(НСтр("ru='Вариант загрузки должен быть задан числом.';en='Variant of downloading should be specified as an integer.'"));
		КонецЕсли;	
	КонецЕсли;	
	
	Параметры.Свойство("Разделитель", Разделитель);
	
	НачальнаяСтрокаЗагрузка = 2;
	НачальнаяСтрокаВыгрузка = 2;
	
	ОчищатьТабличнуюЧасть = Истина;
	
	ПоказыватьФлагОчищать = Истина;
	
	Если Параметры.Свойство("ПоказыватьФлагОчищать") Тогда
		ПоказыватьФлагОчищать = Параметры.ПоказыватьФлагОчищать;
	КонецЕсли;	
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Функция ПрочитатьExel(ИмяФайла, ТаблицаВывода)
	
 	Эксель = Новый COMОбъект("Excel.Application");
	Попытка
		Книга = Эксель.WorkBooks.Open(ИмяФайла);
	Исключение
		Сообщить(НСтр("ru='Ошибка при открытии файла для загрузки (';en='Error on opening of file for uploading ('") + ОписаниеОшибки() + ")");
		Возврат Ложь;
	КонецПопытки;	
	
	Лист = Книга.WorkSheets(1);   
    ВсегоКолонок = Лист.Cells(1,1).SpecialCells(11).Column;
   	ВсегоСтрок = Лист.Cells(1,1).SpecialCells(11).Row;
	
	Для СчСтр = НачальнаяСтрокаЗагрузка По ВсегоСтрок Цикл
		Для СчКол = 1 По ВсегоКолонок Цикл
			Область = ТаблицаВывода.Область("R" + Формат(СчСтр, "ЧГ=") + "C" + СчКол + ":R" + Формат(СчСтр, "ЧГ=") + "C" + СчКол);
			//Область.Текст = Лист.Cells(СчСтр, СчКол).Value;
			Область.Текст = Лист.Cells(СчСтр, СчКол).Text;
		КонецЦикла;
		
		ОбработкаПрерыванияПользователя();
	КонецЦикла;
	
	Книга.Close();
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция ПрочитатьТекст(ИмяФайла, ТаблицаВывода)
	
	Если ПустаяСтрока(Разделитель) Тогда
		Сообщить(НСтр("ru='Не задан разделитель';en='Separator is not specified'"));
		Возврат Ложь;
	КонецЕсли;
	
 	Текст = Новый ТекстовыйДокумент;
	Попытка
		Текст.Прочитать(ИмяФайла);
	Исключение
		Сообщить(НСтр("ru='Ошибка при открытии файла для загрузки (';en='Error of opening of file for downloading ('") + ОписаниеОшибки() + ")");
		Возврат Ложь;
	КонецПопытки;	
	
   	ВсегоСтрок = Текст.КоличествоСтрок();
	
	Для СчСтр = НачальнаяСтрокаЗагрузка По ВсегоСтрок Цикл
		СтрокаТекста = СтрЗаменить(Текст.ПолучитьСтроку(СчСтр), Разделитель, Символы.ПС);
		ВсегоКолонок = СтрЧислоСтрок(СтрокаТекста);
		Для СчКол = 1 По ВсегоКолонок Цикл
			Область = ТаблицаВывода.Область("R" + Формат(СчСтр, "ЧГ=") + "C" + СчКол + ":R" + Формат(СчСтр, "ЧГ=") + "C" + СчКол);
			Область.Текст = СтрПолучитьСтроку(СтрокаТекста, СчКол);
		КонецЦикла;
		
		ОбработкаПрерыванияПользователя();
	КонецЦикла;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ПрочитатьФайл(ИмяФайла)
	
	Если ВариантЗагрузки = 0 Тогда
		ПрочитатьExel(ИмяФайла, ТаблицаДанных);
	ИначеЕсли ВариантЗагрузки = 1 Тогда
		ПрочитатьТекст(ИмяФайла, ТаблицаДанных);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайл(Команда)
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.ПолноеИмяФайла = ИмяФайла;
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = НСтр("ru='Выберите файл';en='Choose a file'");
	ДиалогОткрытияФайла.Фильтр = Фильтр;
	ДиалогОткрытияФайла.Каталог = Каталог;
	
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		ИмяФайла = ДиалогОткрытияФайла.ПолноеИмяФайла;
	Иначе
		Возврат;
	КонецЕсли;
	
	ПрочитатьФайл(ИмяФайла);

	КонечнаяСтрокаВыгрузка = ТаблицаДанных.ВысотаТаблицы;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередатьДанные(Команда)
	
	АдресХранилища = ПодготовитьДанныеДляПередачи();
	
	Владелец = ЭтаФорма.ВладелецФормы;
	
	// если закрывается в обработчиках оповещения
	Если Открыта()Тогда
		Закрыть();
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(АдресХранилища) Тогда
		Оповестить(ИмяСобытия, АдресХранилища, Владелец);
	КонецЕсли;	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройки(Команда)
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ГруппаСтраницаНастройки;
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьНастройки(Команда)
	
	УстановитьФильтрВыбораФайла();
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ГруппаСтраницаОсновная;
	
КонецПроцедуры

&НаКлиенте
Процедура ВычислитьКоличествоСтрок(Команда)
	КонечнаяСтрокаВыгрузка = ТаблицаДанных.ВысотаТаблицы;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТаблицу(Команда)
	ПодготовитьТабличноеПоле(Колонки, ШиринаКолонок);
КонецПроцедуры

&НаКлиенте
Процедура ВариантЗагрузкиПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДанныхПриИзменении(Элемент)
	КонечнаяСтрокаВыгрузка = ТаблицаДанных.ВысотаТаблицы;
КонецПроцедуры

