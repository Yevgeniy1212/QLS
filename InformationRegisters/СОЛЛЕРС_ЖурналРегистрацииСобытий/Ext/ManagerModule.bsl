Функция УбратьНедопустимыеСимволы(знач ИсходнаяСтрока)Экспорт

	массивНедопустимыхСимволов = новый Массив;
	Для КодСимвола = 0 По 31 Цикл
		Если КодСимвола = 13 Тогда
			Продолжить;
		КонецЕсли; 
		Если КодСимвола = 9 Тогда
			Продолжить;
		КонецЕсли; 
		Если КодСимвола = 10 Тогда
			Продолжить;
		КонецЕсли; 
		массивНедопустимыхСимволов.Добавить(Символ(КодСимвола));
	КонецЦикла; 

	Для каждого НедопустимыйСимвол Из массивНедопустимыхСимволов Цикл
		ИсходнаяСтрока = СтрЗаменить(ИсходнаяСтрока,НедопустимыйСимвол,"[Символ c кодом "+КодСимвола(НедопустимыйСимвол)+"]");
	КонецЦикла; 
	
	Возврат ИсходнаяСтрока;
КонецФункции // УбратьНедопустимыеСимволы(ТекстСообщения)()
 
// "ЗафиксироватьИнформационноеСообщение" - запись в журнал событий, параметры следующие:

// Событие - эл. справочника "СОЛЛЕРС_КлассификаторСобытий"

// УровеньСобытия - перечисление "Соллерс_УровниСобытия"

// ТекстСообщения - собственно текст

// ФорматСообщения - перечисление "ТипыТекстовЭлектронныхПисем"

// Получатели - строка, необязательный , здесь можно указать получателей рассылки, которая будет произведена по данному событию,
//				разрешенный формат описания:  имя пользователя 1 <адресПользователя1@домен>, имя пользователя 2 <адресПользователя2@домен>, ...

// СписокФайлов - список значений, необязательный. В этом параметре можно указать перечень файлов, которые необходимо вложить в письмо рассылки.
// значением списка может быть либо ссылка на справочник "Файлы", либо строка, в которой будет полный путь к файлу на диске. 
// Если значением списка является строка, то в представление элемента списка нужно указать имя файла. 
// Если у элемента списка установлена пометка, то если это...
// 		строкас путем к файлу - файл после отправки будет удален
//		ссылка на элемент справочника "файлы" - элемент справочника будет помечен на удаление после отправки письма


Процедура ЗафиксироватьИнформационноеСообщение(Событие,УровеньСобытия,ТекстСообщения,ФорматСообщения = Неопределено, Получатели = "",ЕстьВложения = Ложь,ЗаголовокПисьма="", ПорядковыйНомерСообщения = Неопределено) Экспорт
	
	ТекстСообщения = УбратьНедопустимыеСимволы(ТекстСообщения);
		Идентификатор = Новый УникальныйИдентификатор;
		ПорядковыйНомерСообщения = Прав(Формат(ТекущаяУниверсальнаяДатаВМиллисекундах(),"ЧГ=0"),4) + Идентификатор;
	
		РегистрСв = РегистрыСведений.СОЛЛЕРС_ЖурналРегистрацииСобытий.СоздатьМенеджерЗаписи();
		РегистрСв.Период = ТекущаяДата();
		РегистрСв.Событие = Событие;
		РегистрСв.УровеньСобытия = УровеньСобытия;
		РегистрСв.ПорядковыйНомерСообщения = ПорядковыйНомерСообщения;
		РегистрСв.ТекстСообщения = ТекстСообщения;
		Если ФорматСообщения <> Неопределено тогда
			РегистрСв.ФорматСообщения = ФорматСообщения;
		Иначе
			РегистрСв.ФорматСообщения = Перечисления.ТипыТекстовЭлектронныхПисем.ПростойТекст;
		КонецЕсли;
		РегистрСв.Получатели = Получатели;
		РегистрСв.ЗаголовокПисьма = ЗаголовокПисьма;
		РегистрСв.НомерСеанса = НомерСеансаИнформационнойБазы();
		РегистрСв.ЕстьВложения = ЕстьВложения;
		РегистрСв.Записать(Ложь);
		
	
КонецПроцедуры

Процедура ЗафиксироватьИнформационноеСообщениеПоТиповомуОбмену(УзелОбмена,УровеньСобытияСистемногоЖурнала, ДействиеПриОбмене, ТекстСообщения) Экспорт
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
    Если ЗначениеЗаполнено(УзелОбмена) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	НастройкиТранспортаОбмена.НастройкаПодключения.СобытиеЖурналаРегистрации КАК Событие
			|ИЗ
			|	РегистрСведений.НастройкиТранспортаОбмена КАК НастройкиТранспортаОбмена
			|ГДЕ
			|	НастройкиТранспортаОбмена.Узел = &УзелОбмена";

		Запрос.УстановитьПараметр("УзелОбмена", УзелОбмена);

		Результат = Запрос.Выполнить();

		Если Результат.Пустой() Тогда
			Событие = Справочники.СОЛЛЕРС_КлассификаторСобытий.ГлобальнаяОшибкаИнформационнойБазы;
			ТекстСообщения = "Узел обмена """+УзелОбмена+""": "+ ТекстСообщения;
			ЗафиксироватьИнформационноеСообщение(Событие,Перечисления.СОЛЛЕРС_УровниСобытия.Ошибка,"Для узла """+УзелОбмена+""" не указано соответствие событию журнала регистрации.");
		Иначе
			ВремТЗ = Результат.Выгрузить();
			Событие = ВремТЗ[0].Событие;
		КонецЕсли; 
	Иначе
		Событие = Справочники.СОЛЛЕРС_КлассификаторСобытий.ГлобальнаяОшибкаИнформационнойБазы;
		ТекстСообщения = "Узел обмена """+УзелОбмена+""": "+ ТекстСообщения;
		ЗафиксироватьИнформационноеСообщение(Событие,Перечисления.СОЛЛЕРС_УровниСобытия.Ошибка,"Для события, идущего следом за этим, не удалось определить узел обмена.");
	КонецЕсли; 
	
	
	Если Найти(ВРЕГ(ТекстСообщения),"ОШИБКА")>0 Тогда
	
		УровеньСобытия = Перечисления.СОЛЛЕРС_УровниСобытия.Ошибка;
	
	ИначеЕсли УровеньСобытияСистемногоЖурнала = УровеньЖурналаРегистрации.Информация ИЛИ
		УровеньСобытияСистемногоЖурнала = УровеньЖурналаРегистрации.Примечание Тогда
	
		УровеньСобытия = Перечисления.СОЛЛЕРС_УровниСобытия.Информация;
		
	ИначеЕсли УровеньСобытияСистемногоЖурнала = УровеньЖурналаРегистрации.Предупреждение Тогда 
	    УровеньСобытия = Перечисления.СОЛЛЕРС_УровниСобытия.Предупреждение;
	Иначе
	    УровеньСобытия = Перечисления.СОЛЛЕРС_УровниСобытия.Ошибка;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(ДействиеПриОбмене) и ЗначениеЗаполнено(УзелОбмена) Тогда
		Если ДействиеПриОбмене = Перечисления.ДействияПриОбмене.ВыгрузкаДанных Тогда
			ТекстСообщения = ТекстСообщения +" (№ последнего успешно отправленного пакета - "+УзелОбмена.НомерОтправленного+" )";
		ИначеЕсли ДействиеПриОбмене = Перечисления.ДействияПриОбмене.ЗагрузкаДанных Тогда
			ТекстСообщения = ТекстСообщения +" (№ последнего успешно принятого пакета - "+УзелОбмена.НомерПринятого+" )";
		КонецЕсли; 
	КонецЕсли; 
	
	ЗафиксироватьИнформационноеСообщение(Событие,УровеньСобытия,ТекстСообщения)
КонецПроцедуры

//Возвращает строку с получателями письма в формате
//адресПользователя1@домен; адресПользователя2@домен>;...

//Параметры:
//Событие - ссылка на классификатор событий

// Уровень события - перечисление "СОЛЛЕРС_УровниСобытия" - дополнительный фильтр  по уровню события, 
//	если не заполнен, то учитываются получатели для всех уровней события
Функция ОпределитьПолучателейСообщения(Событие,УровеньСобытия=Неопределено,СообщениеОбОшибке) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкаОповещенияПоЖурналуСобытий.Получатель,
		|	НастройкаОповещенияПоЖурналуСобытий.АдресЭлектроннойПочты_НомерМобильногоТелефона
		|ИЗ
		|	РегистрСведений.НастройкаОповещенияПоЖурналуСобытий КАК НастройкаОповещенияПоЖурналуСобытий
		|ГДЕ
		|	НастройкаОповещенияПоЖурналуСобытий.Событие = &Событие
		|	И (НастройкаОповещенияПоЖурналуСобытий.ОтправлятьИнформацию
		|				И &УровеньИнформация
		|			ИЛИ НастройкаОповещенияПоЖурналуСобытий.ОтправлятьПредупреждения
		|				И &УровеньПредупреждения
		|			ИЛИ НастройкаОповещенияПоЖурналуСобытий.ОтправлятьОшибки
		|				И &УровеньОшибки)
		|	И НЕ НастройкаОповещенияПоЖурналуСобытий.ИсключитьИзРассылки";

	Запрос.УстановитьПараметр("Событие", Событие);
	Запрос.УстановитьПараметр("УровеньИнформация", 		УровеньСобытия = ПредопределенноеЗначение("Перечисление.Соллерс_УровниСобытия.Информация") 		или Не ЗначениеЗаполнено(УровеньСобытия));
	Запрос.УстановитьПараметр("УровеньПредупреждения", 	УровеньСобытия = ПредопределенноеЗначение("Перечисление.Соллерс_УровниСобытия.Предупреждение") 	или Не ЗначениеЗаполнено(УровеньСобытия));
	Запрос.УстановитьПараметр("УровеньОшибки", 			УровеньСобытия = ПредопределенноеЗначение("Перечисление.Соллерс_УровниСобытия.Ошибка") 			или Не ЗначениеЗаполнено(УровеньСобытия));

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	СтрокаПолучателей = "";
	//ПользователиБезПочты = новый массив;
	МассивПолучателей = новый Массив;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		АдресПочты = СокрЛП(ВыборкаДетальныеЗаписи.АдресЭлектроннойПочты_НомерМобильногоТелефона);
		//Если Не ЗначениеЗаполнено(АдресПочты) Тогда
		//	ПользователиБезПочты.Добавить(ВыборкаДетальныеЗаписи.Получатель);
		//КонецЕсли; 
		СтрокаПолучателей = СтрокаПолучателей+АдресПочты+?(Найти(";,",Прав(АдресПочты,1))=0,"; ","");
		//МассивПолучателей.Добавить(ВыборкаДетальныеЗаписи.АдресЭлектроннойПочты_НомерМобильногоТелефона);
	КонецЦикла;

	//Если ПользователиБезПочты.Количество()>0 Тогда
	//
	//	СообщениеОбОшибке = ""+СообщениеОбОшибке + ?(ПустаяСтрока(СообщениеОбОшибке),"",символы.ПС)+"У нижеперечисленных пользователей не указан основной адрес электронной почты:";
	//	Для каждого ПользовательБезПочты Из ПользователиБезПочты Цикл
	//		СообщениеОбОшибке = СообщениеОбОшибке+символы.ПС+ПользовательБезПочты;
	//	КонецЦикла; 
	//КонецЕсли; 
	
	Если Не ПустаяСтрока(СообщениеОбОшибке) Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	Возврат СтрокаПолучателей;
КонецФункции // ОпределитьПолучателейПисьма()
