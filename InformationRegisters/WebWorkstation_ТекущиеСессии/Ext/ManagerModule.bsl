
Функция ПоследняяСессия(НастройкаОбмена, ТипЗапроса="", userSessionGuid, userLogin, userPassword, ТекстСообщения, Пользователь = Неопределено) Экспорт
	
	//Объявляем некоторые переменные
	ТекущаяДата = ТекущаяДата();
	ВремяЖизниНеактивнойСессии = НастройкаОбмена.ВремяЖизниНеактивнойСессии;
	Если ВремяЖизниНеактивнойСессии = 0 Тогда
		ВремяЖизниНеактивнойСессии = 15*60; //Как в виндовых терминалах
	КонецЕсли;
		
	//Если логин и пароль введены, то проходим аутенификацию и находим пользователя по CDSID в справочнике
	Если ЗначениеЗаполнено(userLogin) И ЗначениеЗаполнено(userPassword) Тогда
		Если НастройкаОбмена.СпособАвторизацииНаЭтомВебИнтерфейсе = Перечисления.ВидыАвторизацииПользователейНаWebWorkstation.ВыводитьОкноАвторизацииПользователяПоДаннымДоменнойУчетнойЗаписи Тогда
			Если ПройтиАутентификацию(userLogin, userPassword) Тогда
				Пользователь = Пользователи.НайтиПоИмени(userLogin);
				Если Не ЗначениеЗаполнено(Пользователь) Тогда
					ТекстСообщения = НСтр("ru='Пользователь ';en='The user '")+userLogin+ НСтр("ru=' отсутствует в QLS.';en='"" is absent in QLS.'");
				КонецЕсли;
			Иначе
				ТекстСообщения = НСтр("ru='Введён неверный логин или пароль.';en='Invalid login of password was entered.'");
			КонецЕсли;
		ИначеЕсли НастройкаОбмена.СпособАвторизацииНаЭтомВебИнтерфейсе = Перечисления.ВидыАвторизацииПользователейНаWebWorkstation.ВыводитьОкноАвторизацииПользователяПоДаннымСправочникаОператоры Тогда
			Оператор = ПроверитьПользователяВнутреннаяАвторизация(Пользователь, userLogin, userPassword);
			Если ЗначениеЗаполнено(Оператор) Тогда
				ПараметрыСеанса.АвторизованныйПользовательBS3иQFS = Оператор;
			Иначе
				Пользователь = Неопределено;
				ТекстСообщения = НСтр("ru='Введён неверный логин или пароль, либо оператор ""';en='Invalid login of password was entered, or the operator ""'")+userLogin+НСтр("ru='"" отсутствует в QLS.';en='"" is absent in QLS.'");
			КонецЕсли;
		ИначеЕсли НастройкаОбмена.СпособАвторизацииНаЭтомВебИнтерфейсе = Перечисления.ВидыАвторизацииПользователейНаWebWorkstation.ИспользоватьТекущегоПользователяWindows Тогда
			Оператор = ПроверитьПользователяВнутреннаяАвторизация(Пользователь, userLogin, userPassword);
			Если ЗначениеЗаполнено(Оператор) Тогда
				ПараметрыСеанса.АвторизованныйПользовательBS3иQFS = Оператор;
			Иначе
				Пользователь = Неопределено;
				ТекстСообщения = НСтр("ru='Введён неверный логин или пароль, либо оператор ""';en='Invalid login of password was entered, or the operator ""'")+userLogin+НСтр("ru='"" отсутствует в QLS.';en='"" is absent in QLS.'");
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(userSessionGuid) Тогда
		//Или просто пытаемся получить данные сессии о текущем пользователе
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	WebWorkstation_ТекущиеСессии.Пользователь КАК Пользователь,
			|	WebWorkstation_ТекущиеСессии.ДатаПоследнейАктивности КАК ДатаПоследнейАктивности,
			|	WebWorkstation_ТекущиеСессии.GUID КАК GUID
			|ИЗ
			|	РегистрСведений.WebWorkstation_ТекущиеСессии КАК WebWorkstation_ТекущиеСессии
			|ГДЕ
			|	WebWorkstation_ТекущиеСессии.GUID = &userSessionGuid";
			
		Запрос.УстановитьПараметр("userSessionGuid", userSessionGuid);	
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			//Теперь проверяем, устраивает ли нас прошлая авторизация и не опоздали ли мы
			СессияДействительнаДо = ВыборкаДетальныеЗаписи.ДатаПоследнейАктивности + ВремяЖизниНеактивнойСессии;
			Если СессияДействительнаДо >= ТекущаяДата Тогда
				Пользователь = ВыборкаДетальныеЗаписи.Пользователь;
				ПараметрыСеанса.АвторизованныйПользовательBS3иQFS = ВыборкаДетальныеЗаписи.Оператор;
			ИначеЕсли ВремяЖизниНеактивнойСессии = 0 Тогда
				Пользователь = ВыборкаДетальныеЗаписи.Пользователь;
				ПараметрыСеанса.АвторизованныйПользовательBS3иQFS = ВыборкаДетальныеЗаписи.Оператор;
			Иначе
				ТекстСообщения = НСтр("ru='Время пользовательской сессии истекло. Пожалуйста, авторизуйтесь повторно.';en='Time of user session expired. Please, authorize once again.'");
			КонецЕсли;		
		КонецЦикла;
		Если РезультатЗапроса.Пустой() Тогда
			//ТекстСообщения = "Пользовательская сессия не найдена. Пожалуйста, авторизуйтесь повторно.";
			ТекстСообщения = НСтр("ru='Для входа в систему необходимо ввести логин и пароль.';en='You should enter login and password to enter the system.'");
		КонецЕсли;
	Иначе
		ТекстСообщения = НСтр("ru='Для входа в систему необходимо ввести логин и пароль.';en='You should enter login and password to enter the system.'");
	КонецЕсли;
	
	//Проверяем, не кнопку ли "Выход" мы нажали
	Если ЗначениеЗаполнено(Пользователь) И НРег(ТипЗапроса) = "exit" Тогда
		УдалитьТекущуюПользовательскуюСессию(userSessionGuid, Пользователь);
		Если НастройкаОбмена.СпособАвторизацииНаЭтомВебИнтерфейсе <> Перечисления.ВидыАвторизацииПользователейНаWebWorkstation.ИспользоватьТекущегоПользователяWindows Тогда
			Пользователь = Справочники.Пользователи.ПустаяСсылка();	
		КонецЕсли;
	КонецЕсли;		
		
	//Обновляем данные о сессии, либо удаляем её полностью
	Если ЗначениеЗаполнено(Пользователь) Тогда
		УдалитьВсеНеактуальныеЗаписиРегистраДляПользователя(Пользователь, ВремяЖизниНеактивнойСессии);			
		НачалоСессии(userSessionGuid, Пользователь, ТекущаяДата);
	КонецЕсли;
	
	Возврат Пользователь;
	
КонецФункции

&НаСервере
Функция ПроверитьПользователяВнутреннаяАвторизация(Пользователь, Логин, Пароль)	
	
	Оператор = Справочники.Операторы.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	АвторизацияОператоров.Пользователь,
		|	АвторизацияОператоров.Логин
		|ИЗ
		|	РегистрСведений.АвторизацияОператоров КАК АвторизацияОператоров
		|ГДЕ
		|	АвторизацияОператоров.Пользователь = &Пользователь
		|	И АвторизацияОператоров.Логин.Наименование = &Логин
		|	И АвторизацияОператоров.Логин.Пароль = &Пароль";

	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.УстановитьПараметр("Логин", Логин);
	Запрос.УстановитьПараметр("Пароль", Пароль);	
	ДанныеАвторизации = Запрос.Выполнить().Выбрать(); 
	
	//Пользователю сопоставлен логин, а значит будем требовать ввода логина и пароля	
	Пока ДанныеАвторизации.Следующий() Цикл	
		Оператор = ДанныеАвторизации.Логин;
	КонецЦикла;	
	
	Возврат Оператор;
КонецФункции

Функция НачалоСессии(userSessionGuid, Пользователь, ТекущаяДата) 
	МенеджерЗаписи = РегистрыСведений.WebWorkstation_ТекущиеСессии.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Пользователь = Пользователь;
	МенеджерЗаписи.GUID = userSessionGuid;
	МенеджерЗаписи.ДатаПоследнейАктивности = ТекущаяДата;
	МенеджерЗаписи.Записать(Истина);
КонецФункции

//Для того, чтобы наша база не росла как на дрожжах
Функция УдалитьВсеНеактуальныеЗаписиРегистраДляПользователя(Пользователь, ВремяЖизниНеактивнойСессии)
	
	СессияАктуальнаСЭтогоВремени = ТекущаяДата() - ВремяЖизниНеактивнойСессии;
	
	НаборЗаписей = РегистрыСведений.WebWorkstation_ТекущиеСессии.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Пользователь.Установить(Пользователь); 
	НаборЗаписей.Прочитать();
	
	НомерЗаписи = 0; 
	КоличествоЗаписей = НаборЗаписей.Количество();
	
	Пока НомерЗаписи < КоличествоЗаписей Цикл
		Запись = НаборЗаписей[НомерЗаписи];
		Если Запись.ДатаПоследнейАктивности < СессияАктуальнаСЭтогоВремени Тогда 
			НаборЗаписей.Удалить(Запись);
			КоличествоЗаписей = КоличествоЗаписей - 1;
		Иначе
			НомерЗаписи = НомерЗаписи + 1;
		КонецЕсли;	
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
КонецФункции

//Удаляем текущую активную пользовательскую сессию
Функция УдалитьТекущуюПользовательскуюСессию(userSessionGuid, Пользователь)
	
	НаборЗаписей = РегистрыСведений.WebWorkstation_ТекущиеСессии.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Пользователь.Установить(Пользователь); 
	НаборЗаписей.Отбор.GUID.Установить(userSessionGuid);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать();
	
КонецФункции
	

										//** Аутентификация пользователя **//
																			
Функция ПройтиАутентификацию(ИмяПользователя, Пароль)
	
	Событие = Справочники.СОЛЛЕРС_КлассификаторСобытий.АутентификацияПользователяWebWorkstation;
	АутентификацияПутьПодключенияКаталога = Константы.WebWorkstation_АутентификацияПутьПодключенияКаталога.Получить();
	Если ПустаяСтрока(АутентификацияПутьПодключенияКаталога) Тогда
		ОбновитьАутентификацияПутьПодключенияКаталога(АутентификацияПутьПодключенияКаталога, Событие);
	КонецЕсли; 

	Если ПустаяСтрока(АутентификацияПутьПодключенияКаталога) Тогда
		АутентификацияПутьПодключенияКаталога = "RootDSE";
	КонецЕсли; 
	
	// Шаг 1: пытаемся создать компоненту LDAP, в случае неудачи пишем в ЖР как ошибку 
	Попытка 
		LDAP = ПолучитьCOMОбъект("LDAP:");
	Исключение 
		                     
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ОписаниеОшибки = НСтр("ru='Не удалось подключить COM объект LDAP.';en='Failed to attach COM object of LDAP'")
						+ Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
						
		РегистрыСведений.СОЛЛЕРС_ЖурналРегистрацииСобытий.ЗафиксироватьИнформационноеСообщение(Событие, Перечисления.СОЛЛЕРС_УровниСобытия.Ошибка, НСтр("ru='Авторизация. Пользователь: ';en='Authorization. User: '")+ИмяПользователя+НСтр("ru='. Ошибка выполнения:';en='. Runtime error:'")+Символы.ПС+ОписаниеОшибки);
		Возврат Ложь;
		
	КонецПопытки;
	
	// Шаг 2: Создание компоненты прошло удачно, проверяем имя пользователя и пароль.  
	ПутьКОбъектуКаталога = "LDAP://" + АутентификацияПутьПодключенияКаталога;
	Попытка 
		//https://msdn.microsoft.com/en-us/library/aa772247(v=vs.85).aspx
		//ADS_SECURE_AUTHENTICATION 	= 1
		//ADS_FAST_BIND              = 0x20
		//ADS_SERVER_BIND            = 0x200
		LDAP.OpenDSObject(ПутьКОбъектуКаталога, ИмяПользователя, Пароль, 545);
	Исключение 
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		РасшифровкаКодаВозвратаLDAP = РасшифровкаКодаВозвратаLDAP(ИнформацияОбОшибке.Причина.Описание);
		ОписаниеОшибки = НСтр("ru='Не отработала проверка подлинности LDAP';en='LDAP authentication did not work'")
						+ ?(ЗначениеЗаполнено(РасшифровкаКодаВозвратаLDAP), Символы.ПС + РасшифровкаКодаВозвратаLDAP, "")
						+ Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
						
		РегистрыСведений.СОЛЛЕРС_ЖурналРегистрацииСобытий.ЗафиксироватьИнформационноеСообщение(Событие, Перечисления.СОЛЛЕРС_УровниСобытия.Ошибка, НСтр("ru='Авторизация. Пользователь: ';en='Authorization. User: '")+ИмяПользователя+НСтр("ru='. Ошибка аутентификации:';en='. Authentication error:'")+Символы.ПС+ОписаниеОшибки);

		Возврат Ложь;
		
	КонецПопытки;
	
	РегистрыСведений.СОЛЛЕРС_ЖурналРегистрацииСобытий.ЗафиксироватьИнформационноеСообщение(Событие, Перечисления.СОЛЛЕРС_УровниСобытия.Информация, НСтр("ru='Авторизация. Пользователь: ';en='Authorization. User: '")+ИмяПользователя+НСтр("ru='. Пользователь прошел проверку подлинности';en='. User passed authorization'"));
	
	Возврат Истина; 

КонецФункции

Функция РасшифровкаКодаВозвратаLDAP(ОписаниеОшибки)
	РасшифровкаКодаВозвратаLDAP = "";
	ОписаниеОшибкиНРЕГ = НРег(ОписаниеОшибки);	
	
	//https://msdn.microsoft.com/en-us/library/aa746528(v=vs.85).aspx
	//ОшибкиLDAP.Вставить("0","Operation succeeded.") //Не является ошибкой
	Если Найти(ОписаниеОшибкиНРЕГ,"0x80070005") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "User has insufficient access rights.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80070008") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "System is out of memory.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x8007001f") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Unknown error.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x800700ea") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Partial results and referrals received.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x800700ea") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "More results are to be returned.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x800704c7") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "User canceled the operation.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x800704c9") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Cannot establish the connection.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x8007052e") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Supplied credential is not valid.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x800705b4") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Search timed out.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80071392") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Object already exists.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x8007200a") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Requested attribute does not exist.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x8007200b") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Syntax is not valid.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x8007200c") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Type not defined.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x8007200d") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Attribute exists or the value has been assigned.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x8007200e") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Server is busy.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x8007200f") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Server is not available.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072014") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Object class violation.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072015") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Operation is not allowed on a non- leaf object.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072016") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Operation is not allowed on an RDN.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072017") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Cannot modify object class.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072020") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Operation error occurred.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072021") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Protocol error occurred.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072022") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Exceeded time limit.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072023") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Exceeded size limit.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072024") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Exceeded administration limit on the server.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072025") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Compare yielded FALSE.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072026") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Compare yielded TRUE.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072027") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "The authentication method is not supported.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072028") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Strong authentication is required.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072029") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Authentication is inappropriate.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x8007202a") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Unknown authentication error occurred.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x8007202b") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Cannot resolve referral.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x8007202c") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Critical extension is unavailable.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x8007202d") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Confidentiality is required.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x8007202e") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "There was an inappropriate matching.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x8007202f") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "There was a constrain violation.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072030") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Object does not exist.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072031") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Alias is not valid.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072032") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Distinguished name has syntax that is not valid.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072033") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "The object is a leaf.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072034") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Cannot dereference the alias.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072035") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Server cannot perform operation.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072036") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Loop was detected.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072037") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "There was a naming violation.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072038") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Results set is too large.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072039") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Multiple directory service agents are affected.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x8007203a") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Cannot contact the LDAP server.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x8007203b") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Local error occurred.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x8007203c") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Encoding error occurred.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x8007203d") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Decoding error occurred.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x8007203e") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "The search filter is bad.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x8007203f") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "A bad parameter was passed to a function.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072040") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Feature not supported.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072041") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Results are not returned.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072042") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Control was not found.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072043") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Client loop was detected.";
		
	ИначеЕсли Найти(ОписаниеОшибкиНРЕГ,"0x80072044") <> 0 Тогда
		РасшифровкаКодаВозвратаLDAP = "Exceeded referral limit.";
		
	КонецЕсли;
	
	Возврат РасшифровкаКодаВозвратаLDAP;
	
КонецФункции

Процедура ОбновитьАутентификацияПутьПодключенияКаталога(АутентификацияПутьПодключенияКаталога, Событие)
	
	Попытка 
		oRootDSE = ПолучитьCOMОбъект("LDAP://RootDSE");
		АутентификацияПутьПодключенияКаталога = oRootDSE.Get("dnsHostName");
	Исключение 
		
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		РасшифровкаКодаВозвратаLDAP = РасшифровкаКодаВозвратаLDAP(ИнформацияОбОшибке.Причина.Описание);
		ОписаниеОшибки = НСтр("ru='Не удалось получить имя сервера каталога LDAP://RootDSE.';en='Failed to receive name of of server of the directory LDAP://RootDSE.'")
						+ ?(ЗначениеЗаполнено(РасшифровкаКодаВозвратаLDAP), Символы.ПС + РасшифровкаКодаВозвратаLDAP, "")
						+ Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
						
		РегистрыСведений.СОЛЛЕРС_ЖурналРегистрацииСобытий.ЗафиксироватьИнформационноеСообщение(Событие, Перечисления.СОЛЛЕРС_УровниСобытия.Ошибка, НСтр("ru='Авторизация. Ошибка выполнения:';en='Authorization. Execution error:'")+Символы.ПС+ОписаниеОшибки);
		
		Возврат;
		
	КонецПопытки;
	
	Константы.WebWorkstation_АутентификацияПутьПодключенияКаталога.Установить(АутентификацияПутьПодключенияКаталога);
	
КонецПроцедуры
