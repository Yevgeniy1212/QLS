
#Область ПрограммныйИнтерфейс

// Проверяет наличие записи в регистре сведений "ДополнительныеСвойстваЗаказа".
// Свойство и его значение определяется по наименованию.
//
// Параметры:
//  Заказ - СправочникСсылка.Заказы - проверяемый заказ.
//  ИмяСвойства - Строка - наименование дополнительного свойства.
//  ИмяЗначения - Строка - наименование значения дополнительного свойства.
//
// Возвращаемое значение:
//  Булево - результат проверки.
//
Функция СвойствоЗаказаРавно(Знач Заказ, Знач ИмяСвойства, Знач ИмяЗначения) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Заказ", Заказ);
	Запрос.УстановитьПараметр("ИмяЗначения", ИмяЗначения);
	Запрос.УстановитьПараметр("ИмяСвойства", ИмяСвойства);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДополнительныеСвойстваЗаказа.Заказ КАК Заказ,
		|	ДополнительныеСвойстваЗаказа.Свойство КАК Свойство,
		|	ДополнительныеСвойстваЗаказа.Значение КАК Значение
		|ИЗ
		|	РегистрСведений.ДополнительныеСвойстваЗаказа КАК ДополнительныеСвойстваЗаказа
		|ГДЕ
		|	ДополнительныеСвойстваЗаказа.Заказ = &Заказ
		|	И ДополнительныеСвойстваЗаказа.Свойство.Наименование = &ИмяСвойства
		|	И ДополнительныеСвойстваЗаказа.Значение.Наименование = &ИмяЗначения";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

#КонецОбласти


#Область ОбработчикиСобытий



#КонецОбласти


#Область СлужебныйПрограммныйИнтерфейс

//Обработать текст сообщения на двух языках и вывести сообщение на текущем языке
Функция ОбработатьТекстСообщения(Русский, English) Экспорт 	
	Русский = СтрЗаменить(Русский, "'", """");
	English = СтрЗаменить(English, "'", """");
	Возврат НСтрMES("ru='"+Русский+"';en='"+English+"'");	
КонецФункции

Функция ЕстьКонсерны(Заказ,НаименованиеИнспектируемогоЭлемента=Неопределено,НаименованиеДефекта=Неопределено) Экспорт
	ТекстСообщенияДетализация = "";
	ИнспектируемыйЭлемент = "";
	Дефект = "";
	
	Если ЗначениеЗаполнено(НаименованиеИнспектируемогоЭлемента) Тогда
		ИнспектируемыйЭлемент = Справочники.ИнспектируемыеЭлементы.НайтиПоНаименованию(НаименованиеИнспектируемогоЭлемента,Истина);
		Если ИнспектируемыйЭлемент = Справочники.ИнспектируемыеЭлементы.ПустаяСсылка() Тогда
			ВызватьИсключение НСтр("ru='Инспектируемый элемент с таким наименованием  ""';en='Inspected element with such name ""'")+НаименованиеИнспектируемогоЭлемента+НСтр("ru='"" не найден.';en='"" was not found'"); 		
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(НаименованиеДефекта) Тогда
		Дефект = Справочники.Дефекты.НайтиПоНаименованию(НаименованиеДефекта,Истина);
		Если Дефект = Справочники.Дефекты.ПустаяСсылка() Тогда
			ВызватьИсключение НСтр("ru='Дефект с таким наименованием  ""';en='Defect with such name ""'")+НаименованиеДефекта+НСтр("ru='"" не найден.';en='"" was not found'"); 		
		КонецЕсли;
	КонецЕсли;
	
	Возврат QNS.КонтрольНаличияОткрытыхКонсернов(Заказ, ТекстСообщенияДетализация,,ИнспектируемыйЭлемент,Дефект);
КонецФункции

Функция ЕстьКампании(Заказ) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КампанииОстатки.Заказ,
		|	КампанииОстатки.Кампания,
		|	КампанииОстатки.КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.Кампании.Остатки(, Заказ = &Заказ) КАК КампанииОстатки";
	
	Запрос.УстановитьПараметр("Заказ", Заказ);
	
	РезультатЗапроса = Запрос.Выполнить();	
	Возврат Не РезультатЗапроса.Пустой();
КонецФункции

Функция ЕстьVBOM(Заказ, КодыНоменклатур) экспорт
	Возврат ФункцииДляПользовательскихФормулПовтИсп.ЕстьVBOM_Повт(Заказ, КодыНоменклатур);
КонецФункции

Функция ЕстьНекомплект(Заказ, НоменклатураИмя = Неопределено) экспорт
	Возврат ФункцииДляПользовательскихФормулПовтИсп.ЕстьНекомплект_Повт(Заказ, НоменклатураИмя);
КонецФункции

#КонецОбласти


#Область СлужебныеПроцедурыИФункции


#КонецОбласти
