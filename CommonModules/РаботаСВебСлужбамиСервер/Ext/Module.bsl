#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Работа с HTTP сервисами 
 
Функция ОбработатьЗапрос(HTTPЗапрос, ИмяПеременной = "data", ДополнительныеПараметры) Экспорт
	
	ЗапросСтрокой = ЗапросСтрокой(HTTPЗапрос);
			
	ПараметрыЗапросаКлиента = РаскодироватьJSON(ЗапросСтрокой, ИмяПеременной);
	
	//(!)Временно.
	//Механизм регистрации обсуждается
	ЗарегистрироватьВЖурналеHTTPЗапрос(HTTPЗапрос, ЗапросСтрокой, ДополнительныеПараметры);
	//(!)Временно.

	Возврат ПараметрыЗапросаКлиента;
	
КонецФункции

Функция ПолучитьCookie(HTTPЗапрос, Имя) Экспорт
	
	Перем Cookie, Значение;
		
	Cookie = HTTPЗапрос.Заголовки.Получить("Cookie");	
	Cookie = СокрЛП(Cookie);
		
	Если (Не ЗначениеЗаполнено(Cookie)) Тогда 
		Возврат Значение; 	
	КонецЕсли;
		
	СимволРазделительCookie = ";";
	МассивСтрокИмяЗначение = СтрРазделить(Cookie, СимволРазделительCookie);
	
	СимволДвойныеКавычки = Символ(34); // (")
	СимволЗнакаРавенства = "=";
	Для Каждого СтрокаИмяЗначение Из МассивСтрокИмяЗначение Цикл 
		ПозицияПервогоЗнакаРавенства = СтрНайти(СтрокаИмяЗначение, СимволЗнакаРавенства);
		Если (Имя = СокрЛП(Лев(СтрокаИмяЗначение, ПозицияПервогоЗнакаРавенства - 1))) Тогда 
			Значение = СокрЛП(Сред(СтрокаИмяЗначение, ПозицияПервогоЗнакаРавенства + 1));
			Если Лев(Значение, 1) = СимволДвойныеКавычки 
					И Прав(Значение, 1) = СимволДвойныеКавычки Тогда	
				Значение = Сред(Значение, 2, СтрДлина(Значение) - 2);	
			КонецЕсли;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Значение;
	
КонецФункции

Функция ПодготовитьОтвет(ПараметрыОтветаКлиенту, ДополнительныеПараметры) Экспорт
	
	HTTPОтвет = Новый HTTPСервисОтвет(200);
	HTTPОтвет.Заголовки.Вставить("Content-Type","application/json; charset=utf-8");
	ОтветСтрокой = ЗакодироватьJSON(ПараметрыОтветаКлиенту); 
	HTTPОтвет.УстановитьТелоИзСтроки(ОтветСтрокой);  // устанавливает тело ответа из строки	 
		
	//(!)Временно.
	//Механизм регистрации обсуждается
	//???ЗарегистрироватьВЖурналеHTTPОтвет(HTTPОтвет, ОтветСтрокой, ДополнительныеПараметры);
	//(!)Временно.

	Возврат HTTPОтвет;
	
КонецФункции

Процедура УстановитьCookie(HTTPОтвет, Имя, Значение, Путь = "/") Экспорт 
	
	Перем Cookie;
	
	Cookie = Имя + "=" + Значение;
		
	Если ЗначениеЗаполнено(Путь) Тогда
		// По умолчанию Path=/, т.е. Cookie действует на весь сайт.
		// В терминах 1С это означает, что  Cookie действует на всю публикацию. 
		// Если Path не указан, тогда Cookie действует только в пределах HTTP сервиса.
		Cookie = Cookie + "; Path=" + СокрЛП(Путь);
	КонецЕсли;
	
	//Текущая версия пока поддерживает только опцию Path 
	//В будущем, тут можно будет дописать заполнение других опций.
	//Например, expires, domain  и т.д.
	
	HTTPОтвет.Заголовки.Вставить("Set-Cookie", Cookie);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Работа с журналом регистрации
Функция ЗапросСтрокой(HTTPЗапрос) Экспорт

	ТипКонтентаСтрокой = СокрЛП(HTTPЗапрос.Заголовки.Получить("Content-Type"));
	КодировкаЗапросаСтрокой = ПолучитьКодировкуКонтента(ТипКонтентаСтрокой);
	
	Если ЗначениеЗаполнено(КодировкаЗапросаСтрокой) Тогда 
		ЗапросСтрокой = HTTPЗапрос.ПолучитьТелоКакСтроку(КодировкаЗапросаСтрокой);
	Иначе
		ЗапросСтрокой = HTTPЗапрос.ПолучитьТелоКакСтроку();
	КонецЕсли;
	
	ЗапросСтрокой = РаскодироватьКонтентЗапроса(ЗапросСтрокой, ТипКонтентаСтрокой);	

	Возврат ЗапросСтрокой;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий



#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// Кодирование/декодирование контента (тела запроса/ответа)

Функция РаскодироватьКонтентЗапроса(КонтентСтрокой, ТипКонтентаСтрокой = "") Экспорт
	
	ДекодированныйКонтент = КонтентСтрокой;
			
	Если (СтрНайти(ДекодированныйКонтент, "%") > 0) Тогда 
		
		//Тело запроса кодируется application/x-www-form-urlencoded;   
		//Символ пробела заменяется на "+", а не на "%20" (в отличие от URL-encoding);
		//1С не умеет раскодировать такой тип контента, поэтому пытаем конвертировать в URL-encoding;
		//
		//RFC 3986(URL-encoding):https://tools.ietf.org/html/rfc3986 
		//RFC 1738(Uniform Resource Locators (URL)):http://www.ietf.org/rfc/rfc1738.txt
		
		Если (СтрНайти(ДекодированныйКонтент, "+") > 0) Тогда 
			ДекодированныйКонтент = СтрЗаменить(ДекодированныйКонтент, "+", "%20");
		КонецЕсли;
		ДекодированныйКонтент = РаскодироватьСтроку(ДекодированныйКонтент, СпособКодированияСтроки.URLВКодировкеURL);
		
	Иначе
		
		//
			
	КонецЕсли;

	
	Возврат ДекодированныйКонтент;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Работа с JSON

//Формирует структуру по строке JSON
Функция РаскодироватьJSON(Знач СтрокаJSON, ИмяЭлементаJSON = "") Экспорт
	
	Перем ПараметрыЗапросаКлиента;
	
	Если ПустаяСтрока(СтрокаJSON) Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(ИмяЭлементаJSON) Тогда
		ЭлементыJSON = СтроковыеФункцииКлиентСервер.ПолучитьПараметрыИзСтроки(СтрокаJSON);
		Если ЭлементыJSON.Свойство(ИмяЭлементаJSON) Тогда
			СтрокаJSON = ЭлементыJSON[ИмяЭлементаJSON];
		Иначе
			//считаем JSON строкой всю строку	
		КонецЕсли; 
	КонецЕсли;
		
	Если ПустаяСтрока(СтрокаJSON) Тогда
		Возврат Неопределено;
	КонецЕсли; 
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
	ПараметрыЗапросаКлиента = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	ЧтениеJSON = Неопределено;

	Возврат ПараметрыЗапросаКлиента;
	
КонецФункции

//Формирует строку JSON по структуре
Функция ЗакодироватьJSON(СтруктураПараметры, ИмяЭлементаJSON = "") Экспорт 
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(, Символы.Таб));
	ЗаписатьJSON(ЗаписьJSON, СтруктураПараметры,, "ПреобразоватьВJSON", РаботаСВебСлужбамиСервер);
	СтрокаJSON = ЗаписьJSON.Закрыть();
	ЗаписьJSON = Неопределено;
	
	Если ЗначениеЗаполнено(ИмяЭлементаJSON) Тогда 
	 	СтрокаJSON = ИмяЭлементаJSON + "=" + СтрокаJSON; 	
	КонецЕсли;
	
	Возврат СтрокаJSON;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СкрытьЗначениеВТекстеЗапроса(ЗапросСтрокой, ИмяЗначенияВКавычках = """pass""")
	
	ПозицияКлюча = СтрНайти(ЗапросСтрокой, ИмяЗначенияВКавычках);
	Если ПозицияКлюча = 0 Тогда
		Возврат ЗапросСтрокой;
	КонецЕсли; 
	
	ПозицияКлюча = ПозицияКлюча + СтрДлина(ИмяЗначенияВКавычках);
	ПозицияНачалаЗначение = СтрНайти(ЗапросСтрокой, """",, ПозицияКлюча,1);
	ПозицияОкончанияЗначение = СтрНайти(ЗапросСтрокой, """",, ПозицияКлюча,2);
	
	ДоЗначения = Лев(ЗапросСтрокой, Макс(ПозицияКлюча,ПозицияНачалаЗначение));
	Если ПозицияОкончанияЗначение <> 0 Тогда
		ПослеЗначения = Сред(ЗапросСтрокой, ПозицияОкончанияЗначение);
	Иначе
		ПозицияОкончанияЗапроса = СтрНайти(ЗапросСтрокой, "}",, ПозицияКлюча,1);
		ПослеЗначения = Сред(ЗапросСтрокой, ПозицияОкончанияЗапроса);
	КонецЕсли; 
	
	Возврат ДоЗначения + "******" + ПослеЗначения;
	
КонецФункции

Функция ПолучитьКодировкуКонтента(ТипКонтентаСтрокой)
	
	КодировкаСтрокой = "";
	
	Если ЗначениеЗаполнено(ТипКонтентаСтрокой) Тогда 
		СтруктураПараметрыКонтента = СтроковыеФункцииКлиентСерверQLS.ПолучитьПараметрыИзСтроки(СокрЛП(ТипКонтентаСтрокой));
		СтруктураПараметрыКонтента.Свойство("charset", КодировкаСтрокой);
		КодировкаСтрокой = СокрЛП(КодировкаСтрокой);
	КонецЕсли;
	
	Возврат КодировкаСтрокой;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Работа с журналом регистрации

Процедура ЗарегистрироватьВЖурналеHTTPЗапрос(HTTPЗапрос, ТелоЗапрос, ДополнительныеПараметры)
	
	Перем Комментарий, СобытиеЖурнала;
	
	ДополнительныеПараметры.Свойство("СобытиеЖурнала", СобытиеЖурнала);
	Если ЗначениеЗаполнено(СобытиеЖурнала) Тогда 
		СобытиеЖурнала = СобытиеЖурнала + НСтр("ru='.HTTP запрос';en='.HTTP requset'",ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());	
	Иначе
		СобытиеЖурнала = НСтр("ru='HTTP запрос';en='HTTP requset'",ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка());
	КонецЕсли;
	
	Комментарий = СокрЛП(ТелоЗапрос);
	
	Если ДополнительныеПараметры.Свойство("СкрытьЗначениеВЖурнале") Тогда
		Комментарий = СкрытьЗначениеВТекстеЗапроса(Комментарий, ДополнительныеПараметры.СкрытьЗначениеВЖурнале)		
	КонецЕсли;
	
	Cookie_wms_sid = ПолучитьCookie(HTTPЗапрос, "wms_sid");
	Комментарий = Комментарий + Символы.ПС + "wms_sid(cookie):" + Cookie_wms_sid; 
	
	ЗаписьЖурналаРегистрации(СобытиеЖурнала, УровеньЖурналаРегистрации.Примечание, ДополнительныеПараметры.МетаОбъектДляРегистрации
		, ДополнительныеПараметры.ДанныеДляРегистрации, Комментарий);
		
КонецПроцедуры


#КонецОбласти