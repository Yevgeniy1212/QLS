#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// JSON

Функция ЗначениеВСтрокуJSON(Значение, Знач Параметры = Неопределено) Экспорт
	Если ЭтоЗначениеXDTO(Значение) Тогда
		Возврат ЗначениеXDTOВСтрокуJSON(Значение, Параметры);	
	КонецЕсли;
	
	Параметры = ? (Параметры = Неопределено, Новый Структура, Параметры);
	ПараметрыЗаписиJSON = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ПараметрыЗаписиJSON", Новый ПараметрыЗаписиJSON(, Символы.Таб));		
	НастройкиСериализации = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "НастройкиСериализации", Неопределено); 
	ПараметрыПреобразованияВJSON = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ПараметрыПреобразованияВJSON", Неопределено);
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписиJSON);
	ЗаписатьJSON(ЗаписьJSON, Значение, НастройкиСериализации, "ПреобразоватьЗначениеВJSON", СериализацияСервер, ПараметрыПреобразованияВJSON);
	СтрокаJSON = ЗаписьJSON.Закрыть();
	
	Возврат СтрокаJSON;
КонецФункции

Функция СтрокаJSONВЗначение(СтрокаJSON, Знач Параметры = Неопределено) Экспорт
	Перем Значение;
	
	Параметры = ? (Параметры = Неопределено, Новый Структура, Параметры);
	ПрочитатьВСоответствие = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ПрочитатьВСоответствие", Ложь);
	ПараметрыВосстановленияИзJSON = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ПараметрыВосстановленияИзJSON", Неопределено);
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
	Если ПараметрыВосстановленияИзJSON = Неопределено Тогда
		Значение = ПрочитатьJSON(ЧтениеJSON, ПрочитатьВСоответствие);
	 Иначе
		Значение = ПрочитатьJSON(ЧтениеJSON, ПрочитатьВСоответствие,,, "ВосстановитьЗначениеИзJSON", СериализацияСервер, ПараметрыВосстановленияИзJSON);
	КонецЕсли;
		
	Возврат Значение;
КонецФункции

Функция ЗначениеXDTOВСтрокуJSON(ЗначениеXDTO, Параметры = Неопределено) Экспорт
	Значение = ЗначениеXDTOВЗначение(ЗначениеXDTO);
	Возврат ЗначениеВСтрокуJSON(Значение, Параметры);
КонецФункции

Функция СтрокаJSONВЗначениеXDTO(Знач СтрокаJSON, ТипXDTO, Знач Параметры = Неопределено) Экспорт
	Перем ЗначениеXDTO;
	
	Параметры = ? (Параметры = Неопределено, Новый Структура, Параметры);
	УдалитьПустыеМассивы = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "УдалитьПустыеМассивы", Ложь);
	ПараметрыВосстановленияИзJSON = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "ПараметрыВосстановленияИзJSON", Неопределено);

	// Решение проблемы сериализации пустых массивов в СписокXDTO
	// http://forum.infostart.ru/forum9/topic226379/message2300288/#message2300288
	Если УдалитьПустыеМассивы Тогда
		Значение = СтрокаJSONВЗначение(СтрокаJSON, Новый Структура("ПрочитатьВСоответствие", Истина));	
		Если ТипЗнч(Значение["#value"]) = Тип("Массив") И Значение["#value"].Количество() = 0 Тогда
			ЗначениеXDTO = ФабрикаXDTO.Создать(ТипXDTO);
			Возврат ЗначениеXDTO; 
		КонецЕсли;	
		УдалитьПустыеМассивы(Значение);
		СтрокаJSON = ЗначениеВСтрокуJSON(Значение);
	КонецЕсли;
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(СтрокаJSON);	
	Если ПараметрыВосстановленияИзJSON = Неопределено Тогда
		ЗначениеXDTO = ФабрикаXDTO.ПрочитатьJSON(ЧтениеJSON, ТипXDTO);
	Иначе
		ЗначениеXDTO = ФабрикаXDTO.ПрочитатьJSON(ЧтениеJSON, ТипXDTO, "ВосстановитьЗначениеXDTOИзJSON", СериализацияСервер, ПараметрыВосстановленияИзJSON);
	КонецЕсли;
	
	Возврат ЗначениеXDTO;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// XML

Функция ЗначениеВСтрокуXML(Значение) Экспорт 
	Если ТипЗнч(Значение) = Тип("ОбъектXDTO") Тогда
		Возврат ОбъектXDTOВСтрокуXML(Значение);	
	КонецЕсли;
	
	Возврат ОбщегоНазначения.ЗначениеВСтрокуXML(Значение);
КонецФункции

Функция СтрокаXMLВЗначение(СтрокаXML) Экспорт 
	Возврат ОбщегоНазначения.ЗначениеИзСтрокиXML(СтрокаXML);
КонецФункции

Функция ОбъектXDTOВСтрокуXML(ОбъектXDTO, Фабрика = Неопределено) Экспорт
	Возврат ОбщегоНазначения.ОбъектXDTOВСтрокуXML(ОбъектXDTO, Фабрика);
КонецФункции

Функция СтрокаXMLВОбъектXDTO(СтрокаXML, Фабрика = Неопределено) Экспорт
	Возврат ОбщегоНазначения.ОбъектXDTOИзСтрокиXML(СтрокаXML, Фабрика);
КонецФункции

Функция СтрокаXMLВЗначениеXDTO(СтрокаXML, ТипXDTO) Экспорт
	ЧтениеXML = Новый ЧтениеXML();
	ЧтениеXML.УстановитьСтроку(СтрокаXML);
	
	ЗначениеXDTO = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML, ТипXDTO);
	
	Возврат ЗначениеXDTO;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// XDTO

Функция ПолучитьТипXDTO(ПространствоИмен, ИмяТипа) Экспорт
	МассивПодтипов = СтрРазделить(ИмяТипа, ".");
	КорневойТипXDTO = ФабрикаXDTO.Тип(ПространствоИмен, МассивПодтипов[0]);
	МассивПодтипов.Удалить(0);
	
	ТипXDTO = КорневойТипXDTO;
	Для Каждого Подтип Из МассивПодтипов Цикл 
		Свойство = ТипXDTO.Свойства.Получить(Подтип);
		ТипXDTO = Свойство.Тип;
	КонецЦикла;
	
	Возврат ТипXDTO;
КонецФункции

Функция ЗначениеXDTOВЗначение(ЗначениеXDTO) Экспорт
	Перем Значение;
	
	Если ЗначениеXDTO = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;		
		
	Если ТипЗнч(ЗначениеXDTO) = Тип("ЗначениеXDTO") Тогда
		Значение = ?(ЗначениеXDTO = Неопределено, Неопределено,  ЗначениеXDTO.Значение); 			
	ИначеЕсли ТипЗнч(ЗначениеXDTO) = Тип("ОбъектXDTO") Тогда
		Значение = ОбъектXDTOВСтруктуру(ЗначениеXDTO);
	ИначеЕсли ТипЗнч(ЗначениеXDTO) = Тип("СписокXDTO") Тогда
		Значение = СписокXDTOВМассив(ЗначениеXDTO);
	КонецЕсли;
	
	Возврат Значение;	
КонецФункции

Функция ЭтоЗначениеXDTO(Значение) Экспорт
	ТипЗначения = ТипЗнч(Значение); 	
	Возврат ТипЗначения = Тип("ОбъектXDTO") 
		Или ТипЗначения = Тип("СписокXDTO") 
		Или ТипЗначения = Тип("ЗначениеXDTO");
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// УникальныйИдентификатор

Функция УникальныйИдентификаторВСсылку(УникальныйИдентификатор, ТипСсылкиИлиМенеджерОбъекта) Экспорт
	Перем Ссылка;
	
	ТипПараметра = ТипЗнч(ТипСсылкиИлиМенеджерОбъекта); 
	Если ТипПараметра = Тип("Тип") Или ТипПараметра = Тип("Строка") Тогда
		ТипСсылки = ?(ТипПараметра = Тип("Тип"), ТипСсылкиИлиМенеджерОбъекта, Тип(ТипСсылкиИлиМенеджерОбъекта));
		УИДСтрокой = ?(ТипЗнч(УникальныйИдентификатор) = Тип("УникальныйИдентификатор"), СокрЛП(УникальныйИдентификатор), УникальныйИдентификатор); 
		Ссылка = XMLЗначение(ТипСсылки, УникальныйИдентификатор);
	Иначе
		МенеджерОбъекта = ТипСсылкиИлиМенеджерОбъекта;
		УИД = ?(ТипЗнч(УникальныйИдентификатор) = Тип("Строка"), Новый УникальныйИдентификатор(УникальныйИдентификатор), УникальныйИдентификатор);
		Ссылка = МенеджерОбъекта.ПолучитьСсылку(УИД); 
	КонецЕсли;
		
	Возврат Ссылка; 
КонецФункции

Функция УникальныйИдентификаторВСтроку(УникальныйИдентификатор) Экспорт
	Возврат XMLСтрока(УникальныйИдентификатор);
КонецФункции

Функция ИДвУникальныйИдентификатор(ИД) Экспорт
	УникальныйИдентификаторСтрокой =  Прав(ИД, 8) + "-" + Сред(ИД, 21, 4) + "-" + Сред(ИД, 17, 4) + "-" + Лев(ИД, 4) + "-" + Сред(ИД, 5, 12);
	Возврат Новый УникальныйИдентификатор(УникальныйИдентификаторСтрокой);
КонецФункции

Функция ПустойУникальныйИдентификатор() Экспорт
	Возврат ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор()	
КонецФункции
	
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПреобразоватьЗначениеВJSON(Свойство, Значение, Параметры = Неопределено, Отказ = Ложь) Экспорт
	Перем ПреобразованноеЗначение;
	
	Параметры = ? (Параметры = Неопределено, Новый Структура, Параметры);
	
	ТипЗначения = ТипЗнч(Значение);
	Если ТипЗначения = Тип("УникальныйИдентификатор") Или ОбщегоНазначения.ЭтоСсылка(ТипЗначения) Тогда 
		ПреобразованноеЗначение = XMLСтрока(Значение);
	Иначе
		Попытка
			ПреобразованноеЗначение = Строка(Значение);
		Исключение
			ПреобразованноеЗначение = "";			
		КонецПопытки;
	КонецЕсли;
	
	Возврат ПреобразованноеЗначение;
КонецФункции

Функция ВосстановитьЗначениеИзJSON(Свойство, Значение,  Знач Параметры = Неопределено) Экспорт
	Возврат Значение;
КонецФункции

Функция ВосстановитьЗначениеXDTOИзJSON(Свойство, ТипXDTO, Значение,  Знач Параметры = Неопределено) Экспорт
	Возврат Значение;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОбъектXDTOВСтруктуру(ОбъектXDTO)
	Структура = Новый Структура;
	Для Каждого СвойствоXDTO Из ОбъектXDTO.Свойства() Цикл		
		ИмяСвойстваXDTO = СвойствоXDTO.Имя;
		ЗначениеXDTO = Неопределено;
		Попытка
			ЗначениеXDTO = ОбъектXDTO.ПолучитьXDTO(СвойствоXDTO);
		Исключение
		    ЗначениеXDTO = ОбъектXDTO.ПолучитьСписок(СвойствоXDTO);
		КонецПопытки;				
		Структура.Вставить(ИмяСвойстваXDTO, ЗначениеXDTOВЗначение(ЗначениеXDTO));
	КонецЦикла;
	
	Возврат Структура;
КонецФункции

Функция СписокXDTOВМассив(СписокXDTO)
	Массив = Новый Массив;
	Для Каждого ЗначениеXDTO Из СписокXDTO Цикл 
		Массив.Добавить(ЗначениеXDTOВЗначение(ЗначениеXDTO));	
	КонецЦикла;
	
	Возврат  Массив;
КонецФункции

Процедура УдалитьПустыеМассивы(Коллекция)
	Тип = ТипЗнч(Коллекция);
	
	Если Тип = Тип("Массив") Тогда	
		Для Каждого Элемент Из Коллекция Цикл
			УдалитьПустыеМассивы(Элемент);
		КонецЦикла;
	ИначеЕсли Тип = Тип("Структура") Или Тип = Тип("Соответствие") Тогда		
		Для Каждого Элемент Из Коллекция Цикл
			КлючЭл = Элемент.Ключ;
			ЗначениеЭл = Элемент.Значение;
			ТипЭл = ТипЗнч(ЗначениеЭл);
			Если ТипЭл = Тип("Массив") И Не ЗначениеЗаполнено(ЗначениеЭл) Тогда
				Коллекция.Удалить(КлючЭл);
			Иначе
				УдалитьПустыеМассивы(ЗначениеЭл);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти
