#Область СлужебныйПрограммныйИнтерфейс

// Создает, либо обновляет существующий объект справочника на основе полученного сообщения обмена
// 
// Параметры:
// 	ПараметрыЗагрузки - Структура - содержит в себе параметры:
//     * ИдентификаторСсылки - уникальный идентификатор ссылки обновляемого объекта
//     * Версия - версия объекта обмена
//     * ТипСправочника - имя метаданных обновляемого объекта
// 	ТекстСообщенияОбмена - Строка - исходная строка XML
Процедура ЗагрузитьСообщениеОбмена(ПараметрыЗагрузки, ТекстСообщенияОбмена) Экспорт
	
	ОбъектОбмена = ДесериализоватьИзXML(ТекстСообщенияОбмена);
	
	ЭлементСоздан = СоздатьЭлемент(ПараметрыЗагрузки, ОбъектОбмена);
	Если НЕ ЭлементСоздан Тогда
		ОбновитьЭлемент(ПараметрыЗагрузки, ОбъектОбмена);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СоздатьЭлемент(ПараметрыЗагрузки, ОбъектОбмена)
	
	ТипСправочника = ПараметрыЗагрузки.ТипСправочника;
	СправочникОбъект = Справочники[ТипСправочника].СоздатьЭлементПоИдентификаторуОбмена(ПараметрыЗагрузки);
	СправочникОбъект.ОбменДанными.Загрузка = Истина;
	
	НачатьТранзакцию();
	Попытка
		СправочникОбъект.Записать();
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ОтменитьТранзакцию();
		Возврат Ложь;
	КонецПопытки;
		
	Попытка
		СправочникОбъект.ЗаполнитьИзОбъектаОбмена(ОбъектОбмена, ПараметрыЗагрузки.Версия);
		СправочникОбъект.Записать();
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		СозданиеЭлементаИсключение = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
		ВызватьИсключение СозданиеЭлементаИсключение;
	КонецПопытки;
	
	Возврат Истина;

КонецФункции

Процедура ОбновитьЭлемент(ПараметрыЗагрузки, ОбъектОбмена)
	
	ТипСправочника = ПараметрыЗагрузки.ТипСправочника;
	СправочникСсылка = Справочники[ТипСправочника].ПолучитьСсылкуПоИдентификаторуОбмена(ПараметрыЗагрузки.ИдентификаторСсылки, ПараметрыЗагрузки.Версия);
	
	НачатьТранзакцию();
	Попытка
		БлокировкаПередЧтением = Новый БлокировкаДанных();
		БлокировкаСправочника = БлокировкаПередЧтением.Добавить("Справочник." + ТипСправочника);
		БлокировкаСправочника.УстановитьЗначение("Ссылка", СправочникСсылка);
		БлокировкаСправочника.Режим = РежимБлокировкиДанных.Исключительный;
		БлокировкаПередЧтением.Заблокировать();
		
		СправочникОбъект = СправочникСсылка.ПолучитьОбъект();
		
		СправочникОбъект.ЗаполнитьИзОбъектаОбмена(ОбъектОбмена, ПараметрыЗагрузки.Версия);
		СправочникОбъект.ОбменДанными.Загрузка = Истина;
		СправочникОбъект.Записать();
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		ОбновленияЭлементаИсключение = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке); 
		ВызватьИсключение ОбновленияЭлементаИсключение;
	КонецПопытки;
	
КонецПроцедуры

// Десериализует из строки XML в объект XDTO  
// 
// Параметры:
// 	ТекстXML - Строка - Исходная строка XML
// Возвращаемое значение:
// 	ОбъектXDTO - полученный объект заданного типа
Функция ДесериализоватьИзXML(ТекстXML)
	
	СообщениеОбмена = Новый ЧтениеXML;
	СообщениеОбмена.УстановитьСтроку(ТекстXML);
	
	ОбъектОбмена = ФабрикаXDTO.ПрочитатьXML(СообщениеОбмена);
	СообщениеОбмена.Закрыть();
	
	Возврат ОбъектОбмена;
	
КонецФункции

#КонецОбласти
