
#Область ПрограммныйИнтерфейс

Процедура ПреобразоватьОшибкуПоБазовойСхеме(Запрос, Ответ) Экспорт
	
	Если НЕ Ответ.Готов() Или НЕ Ответ.ЭтоОшибка() Тогда
		Возврат;
	КонецЕсли;
	
	ПространствоИмен 			= РаботаСHTTPСервисами.XMLБазоваяСхема();
	ТипОбъектаОбменаОтветОшибка = ФабрикаXDTO.Тип(ПространствоИмен, "ErrorResponse");
	ОбъектОтветОшибка 			= ФабрикаXDTO.Создать(ТипОбъектаОбменаОтветОшибка);
	СвойствоЭлементаОшибки 		= ТипОбъектаОбменаОтветОшибка.Свойства[0];
	ОбъектЭлементаОшибки 		= ФабрикаXDTO.Создать(СвойствоЭлементаОшибки.Тип);
	
	Если Ответ.Ошибка <> Неопределено И Ответ.Ошибка.Раскрывать Тогда
		ОбъектЭлементаОшибки.message = Ответ.Ошибка.Сообщение;
	Иначе
		ОбъектЭлементаОшибки.message = Ответ.Тело;
	КонецЕсли;
	
	КодОшибки = Неопределено;
	Если Ответ.Ошибка <> Неопределено И Ответ.Ошибка.ДополнительныеСвойства.Свойство("Тип", КодОшибки) Тогда
		ОбъектЭлементаОшибки.code = КодОшибки;
	Иначе
		ОбъектЭлементаОшибки.code = Ответ.КодСтатуса;
	КонецЕсли;
	
	ОбъектОтветОшибка.error = ОбъектЭлементаОшибки;
	СтрокаJSON = СформироватьСтрокуJSON(ОбъектОтветОшибка, НазначениеТипаXML.Неявное);

	Ответ.Тело = СтрокаJSON;
		
КонецПроцедуры

Процедура УбратьИзТелаJSONСвойствоValue(Запрос, Ответ) Экспорт
	
	СтрокаJSON = Ответ.Тело;
	Если Не ЗначениеЗаполнено(СтрокаJSON) Тогда 
		Возврат;	
	КонецЕсли;
	
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.УстановитьСтроку(СтрокаJSON);
	СоответствиеJSON = ПрочитатьJSON(ЧтениеJSON, Истина);
	ЧтениеJSON.Закрыть();
	
	Данные = СоответствиеJSON.Получить("#value");
	
	ЗаписьJSON = Новый ЗаписьJSON();
	ПараметрыЗаписиJSON = Новый ПараметрыЗаписиJSON(, Символы.Таб);
	ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписиJSON);
	ЗаписатьJSON(ЗаписьJSON, Данные);
	
	Ответ.Тело = ЗаписьJSON.Закрыть();
	
КонецПроцедуры

Процедура ОтправитьОтвет(Запрос, Ответ) Экспорт

	Если Ответ.Готов() Тогда
		Возврат;
	КонецЕсли;
		
	Данные = Ответ.Данные;
	Попытка
		СтрокаJSON = РаботаСHTTPСервисами.СформироватьСтрокуJSON(Данные, НазначениеТипаXML.Неявное);
		Ответ.ТипСодержимого("application/json");
		Ответ.Отправить(СтрокаJSON);
	Исключение
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		Ответ.Отправить(ВебПриложениеРасширяемый.НовыйОшибка(,ИнформацияОбОшибке));
	КонецПопытки;
	
КонецПроцедуры

Процедура ОтправитьСообщениеОбОшибкеВСервис(Ответ, ТекстОтвета, КодОшибки = 500) Экспорт
	
	ОтветСервису = ВебПриложениеРасширяемый.НовыйОшибка(КодОшибки, ТекстОтвета);
	ОтветСервису.Раскрывать = Истина;
	Ответ.Отправить(ОтветСервису);
																		
КонецПроцедуры

Процедура ОформитьОтветСервиса(Запрос, Ответ) Экспорт
	
	ОтправитьОтвет(Запрос, Ответ);
	ПреобразоватьОшибкуПоБазовойСхеме(Запрос, Ответ);
	УбратьИзТелаJSONСвойствоValue(Запрос, Ответ);
	
	ВебПриложениеРасширяемый.ЗаписатьВЖурнал(Запрос, Ответ);
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция XMLБазоваяСхема() Экспорт
	
	Возврат "http://mes.fordsollers.com/Exchange/Message";
	
КонецФункции

// Возвращает сформированную на основе фабрики XDTO строку JSON
// 
// Параметры:
// 	ОбъектОбмена - ОбъектXDTO
// 	НазначениеТипа - НазначениеТипаXML
// Возвращаемое значение:
// 	Строка - Описание
Функция СформироватьСтрокуJSON(ОбъектОбмена, НазначениеТипа) Экспорт
	
	СообщениеОбмена = Новый ЗаписьJSON;
	СообщениеОбмена.УстановитьСтроку(Новый ПараметрыЗаписиJSON(, Символы.Таб));
	
	ФабрикаXDTO.ЗаписатьJSON(СообщениеОбмена, ОбъектОбмена, НазначениеТипа);
	СтрокаJSON = СообщениеОбмена.Закрыть();
	
	Возврат СтрокаJSON;
	
КонецФункции

#КонецОбласти 
