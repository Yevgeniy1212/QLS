#Область СлужебныйПрограммныйИнтерфейс

// Заполняет таблицу правил конвертации подсистемы регистрации заказов
// 
// Параметры:
// 	ПравилаКонвертации - ТаблицаЗначений
Процедура ЗаполнитьПравилаКонвертацииОбъектов(ПравилаКонвертации) Экспорт

	ДобавитьПКО_Справочник_ТочкиРегистрации(ПравилаКонвертации);
	ДобавитьПКО_Справочник_ТочкиРегистрацииГруппа(ПравилаКонвертации);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьПКО_Справочник_ТочкиРегистрации(ПравилаКонвертации)

	ПравилоКонвертации = ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "Справочник_ТочкиРегистрации";
	ПравилоКонвертации.ОбъектДанных                 = Метаданные.Справочники.ТочкиРегистрации;
	ПравилоКонвертации.ОбъектФормата                = "Справочник.ТочкиРегистрации";
	
	СвойстваШапки = ПравилоКонвертации.Свойства;
	ДобавитьПКС(СвойстваШапки, "Код",                "Код");
	ДобавитьПКС(СвойстваШапки, "Наименование",       "Наименование");
	ДобавитьПКС(СвойстваШапки, "ПометкаУдаления",	"ПометкаУдаления");
	ДобавитьПКС(СвойстваШапки, "Родитель",           "Группа", "Справочник_ТочкиРегистрацииГруппа");

КонецПроцедуры

Процедура ДобавитьПКО_Справочник_ТочкиРегистрацииГруппа(ПравилаКонвертации)

	ПравилоКонвертации = ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации);
	ПравилоКонвертации.ИмяПКО                       = "Справочник_ТочкиРегистрацииГруппа";
	ПравилоКонвертации.ОбъектДанных                 = Метаданные.Справочники.ТочкиРегистрации;
	ПравилоКонвертации.ОбъектФормата                = "Справочник.ТочкиРегистрацииГруппа";
	
	СвойстваШапки = ПравилоКонвертации.Свойства;
	ДобавитьПКС(СвойстваШапки, "Код",                "Код");
	ДобавитьПКС(СвойстваШапки, "Наименование",       "Наименование");
	ДобавитьПКС(СвойстваШапки, "ПометкаУдаления",	"ПометкаУдаления");

КонецПроцедуры


// Добавляет строку в таблицу правил конвертации и инициализирует значение в колонке "Свойства".
// Используется в модуле менеджера обмена при заполнении таблицы правил конвертации объектов.
//
// Параметры:
//  ПравилаКонвертации - ТаблицаЗначений - таблица, содержащая правила конвертации объектов.
//
// Возвращаемое значение:
//  СтрокаТаблицыЗначений - Строка таблицы значений правил конвертации.
//
Функция ИнициализироватьПравилоКонвертацииОбъекта(ПравилаКонвертации) 
	
	ПравилоКонвертации = ПравилаКонвертации.Добавить();
	ПравилоКонвертации.Свойства = ИнициализироватьТаблицуСвойствДляПравилаКонвертации();
	Возврат ПравилоКонвертации;
	
КонецФункции

// Инициализирует таблицу значений для хранения правил конвертации свойств объекта.
//
// Возвращаемое значение:
//  ТаблицаЗначений - таблица для хранения правил конвертации свойств.
//
Функция ИнициализироватьТаблицуСвойствДляПравилаКонвертации() 
	
	ТаблицаПКС = Новый ТаблицаЗначений;
	ТаблицаПКС.Колонки.Добавить("СвойствоКонфигурации", Новый ОписаниеТипов("Строка"));
	ТаблицаПКС.Колонки.Добавить("СвойствоФормата", Новый ОписаниеТипов("Строка"));
	ТаблицаПКС.Колонки.Добавить("ПравилоКонвертацииСвойства", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(50)));
	ТаблицаПКС.Колонки.Добавить("ОбработкаКлючевогоСвойства", Новый ОписаниеТипов("Булево"));

	Возврат ТаблицаПКС;
	
КонецФункции

// Заполняет колонку со свойствами табличных частей пустой таблицей значений с определенными колонками.
// Используется в текущем модуле, а также в модуле менеджера обмена при заполнении таблицы правил конвертации объектов.
//
// Параметры:
//  ПравилоКонвертации - СтрокаТаблицыЗначений - правило конвертации объектов.
//  ИмяКолонки - Строка - имя заполняемой колонки таблицы правил конвертации.
Процедура ИнициализироватьСвойстваТабличныхЧастей(ПравилоКонвертации, ИмяКолонки = "СвойстваТабличныхЧастей")
	СвойстваТабличныхЧастей = Новый ТаблицаЗначений;
	СвойстваТабличныхЧастей.Колонки.Добавить("ТЧКонфигурации",          Новый ОписаниеТипов("Строка"));
	СвойстваТабличныхЧастей.Колонки.Добавить("ТЧФормата",               Новый ОписаниеТипов("Строка"));
	СвойстваТабличныхЧастей.Колонки.Добавить("Свойства",                Новый ОписаниеТипов("ТаблицаЗначений"));
	СвойстваТабличныхЧастей.Колонки.Добавить("ИспользуетсяАлгоритмКонвертации", Новый ОписаниеТипов("Булево"));
	
	ПравилоКонвертации[ИмяКолонки] = СвойстваТабличныхЧастей;
КонецПроцедуры

Процедура ДобавитьПКС(РодительПКС, СвойствоКонфигурации, СвойствоФормата = "", ПравилоКонвертацииСвойства = "") 
	НоваяСтрока                                 = РодительПКС.Добавить();
	НоваяСтрока.СвойствоКонфигурации            = СвойствоКонфигурации;
	НоваяСтрока.СвойствоФормата                 = СвойствоФормата;
	НоваяСтрока.ПравилоКонвертацииСвойства      = ПравилоКонвертацииСвойства;
КонецПроцедуры

Функция ДобавитьПКТЧ(ПравилоКонвертации, ИмяТЧКонфигурации, ИмяТЧФормата)
    Если ПравилоКонвертации.СвойстваТабличныхЧастей.Колонки.Количество() = 0 Тогда
        ИнициализироватьСвойстваТабличныхЧастей(ПравилоКонвертации);
    КонецЕсли;
    КонвертацияТабличнойЧасти                = ПравилоКонвертации.СвойстваТабличныхЧастей.Добавить();
    КонвертацияТабличнойЧасти.ТЧКонфигурации = ИмяТЧКонфигурации;
    КонвертацияТабличнойЧасти.ТЧФормата      = ИмяТЧФормата;
    КонвертацияТабличнойЧасти.Свойства       = ИнициализироватьТаблицуСвойствДляПравилаКонвертации();
    Возврат КонвертацияТабличнойЧасти.Свойства;
КонецФункции

#КонецОбласти
