
#Область ПрограммныйИнтерфейс

Процедура ОбъединитьПараметрыЗапроса(Запрос, Ответ, ДополнительныеПараметры = Неопределено) Экспорт
	
	Перем ОбъединитьВСтруктуру;
	Перем Параметры;
		
	Если Ответ.Готов() Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры) Тогда
		ОбъединитьВСтруктуру = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеПараметры, "ОбъединитьВСтруктуру", Ложь);
	Иначе
		ОбъединитьВСтруктуру = Ложь;
	КонецЕсли;
	
	Если ОбъединитьВСтруктуру Тогда
		Параметры = Новый Структура;
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Параметры, Запрос.HTTPСервисЗапрос().ПараметрыURL);
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Параметры, Запрос.HTTPСервисЗапрос().ПараметрыЗапроса)		
	Иначе
		Параметры = Новый Соответствие;
		ОбщегоНазначенияКлиентСервер.ДополнитьСоответствие(Параметры, Запрос.HTTPСервисЗапрос().ПараметрыURL);
		ОбщегоНазначенияКлиентСервер.ДополнитьСоответствие(Параметры, Запрос.HTTPСервисЗапрос().ПараметрыЗапроса);
	КонецЕсли;
	
	Запрос.ДополнительныеСвойства.Вставить("Параметры", Параметры);	
	
КонецПроцедуры

Процедура ПроверитьПараметрыЗапроса(Запрос, Ответ, ДополнительныеПараметры = Неопределено) Экспорт
	
	Перем СхемаПараметров;
    Перем Параметры;
	
	Если Ответ.Готов() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос.ДополнительныеСвойства.Свойство("Параметры", Параметры);
	Запрос.ДополнительныеСвойства.Свойство("СхемаПараметров", СхемаПараметров);

	Если Не ЗначениеЗаполнено(СхемаПараметров) И ЗначениеЗаполнено(ДополнительныеПараметры) Тогда
		СхемаПараметров = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДополнительныеПараметры, "СхемаПараметров", Ложь)
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СхемаПараметров) Тогда
		Возврат;	
	КонецЕсли;
	
	Валидатор = Обработки.Валидатор.Создать();
	Ошибки = Валидатор.Проверить(Параметры, СхемаПараметров);	
	Если Ошибки.Количество() > 0 Тогда 
		ТекстОшибки = СтрШаблон(НСтр("ru = 'Ошибка валидации параметров запроса: %1'; 
			|en = 'Request params validation error: %1'"), Символы.ПС + Ошибки.ВСтроку());
		Ошибка = ВебПриложениеРасширяемый.НовыйОшибка(424, ТекстОшибки);
		Ответ.Отправить(Ошибка)
	КонецЕсли;
		
КонецПроцедуры

Процедура ПреобразоватьОшибку(Запрос, Ответ) Экспорт
	
	Если Не Ответ.Готов() Или Не Ответ.ЭтоОшибка() Тогда
		Возврат;
	КонецЕсли;
	
	ОтветТипXDTO = ОтветОшибкаТипXDTO(); 
	ОтветОбъектXDTO = ФабрикаXDTO.Создать(ОтветТипXDTO);
	
	ОшибкаТипXDTO = ОтветТипXDTO.Свойства.Получить("Error").Тип;
	ОшибкаОбъектXDTO = ФабрикаXDTO.Создать(ОшибкаТипXDTO); 
	
	Если Ответ.Ошибка <> Неопределено И Ответ.Ошибка.Раскрывать Тогда
		ОшибкаОбъектXDTO.message = Ответ.Ошибка.Сообщение;
	Иначе
		ОшибкаОбъектXDTO.message = Ответ.Тело;
	КонецЕсли;
	
	КодОшибки = Неопределено;
	Если Ответ.Ошибка <> Неопределено И Ответ.Ошибка.ДополнительныеСвойства.Свойство("Тип", КодОшибки) Тогда
		ОшибкаОбъектXDTO.code = КодОшибки;
	Иначе
		ОшибкаОбъектXDTO.code = Ответ.КодСтатуса;
	КонецЕсли;
	
	
	ОтветОбъектXDTO.Error = ОшибкаОбъектXDTO;
	Ответ.Тело = ОтветОбъектXDTO;
	
КонецПроцедуры

Процедура СериализоватьОтвет(Запрос, Ответ) Экспорт
	
	Перем Сериализатор;
	
	Если Не Ответ.Готов() Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Ответ.Тело) = Тип("Строка") Тогда
		Возврат;	
	КонецЕсли;
			
	ТипСодержимого = НРег(СокрЛП(Ответ.ПолучитьТипСодержимого()));
	Если ТипСодержимого = "application/json" Тогда
		Сериализатор = Обработки.СериализаторJSON.Создать();	
	ИначеЕсли ТипСодержимого = "application/xml" Или ТипСодержимого = "text/xml" Тогда
		Сериализатор = Обработки.СериализаторXML.Создать();
	КонецЕсли;
		
	Если Сериализатор = Неопределено Тогда
		Ответ.Тело = Строка(Ответ.Тело);
	Иначе
		Ответ.Тело = Сериализатор.Сериализовать(Ответ.Тело);				
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ОтветОшибкаТипXDTO() Экспорт
	ПространствоИмен = "http://mes.fordsollers.com/Exchange/Message";
	Возврат СериализацияСервер.ПолучитьТипXDTO(ПространствоИмен, "ErrorResponse");	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
