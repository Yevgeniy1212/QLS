
Функция ПолучитьОписаниеОбработкиОбмена() Экспорт
	
	// полный состав параметров описания смотри в этой функции
	СтруктураНастроек = Справочники.НетиповыеОбменыДанными.ПолучитьОписаниеОбработкиОбменаПоУмолчанию();
	
	СтруктураНастроек.ТекстовоеОписаниеОбмена = НСтр("ru='Автоматическая постановка и снятие заказов на кампанию';en='Automatic setting and removal orders on the campaign'");
	СтруктураНастроек.ВидОбмена = Перечисления.ВидыОбмена.Двунаправленный;
	СтруктураНастроек.СпособПередачиДанных = Перечисления.СпособыПередачиДанныхВНетиповыхОбменах.None;
	СтруктураНастроек.XML_НастройкаОбязательна = Ложь;
	СтруктураНастроек.XML_НастройкаОбязательна = Ложь;
	СтруктураНастроек.ИспользованиеРегламентогоЗадания = Истина;
	СтруктураНастроек.ИспользованиеРегистрацииДанныхНаУзлеНетиповогоОбмена = Истина;
	СтруктураНастроек.ВидимыеДополнительныеЭлементыФормы.Добавить("АвтоматическоеУправлениеКампаниями");
	
	Возврат СтруктураНастроек;
КонецФункции 


Функция ВыполнитьОбмен(Событие,НастройкаОбмена) Экспорт
	
	ТекстСообщенийСОшибками = "";
	
	Если не ЗначениеЗаполнено(НастройкаОбмена.УзелРегистрацииИзменений) Тогда
		Сообщение = НСтр("ru='Узел регистрации изменений не заполнен.';en='Node of registration of changes is not filled.'");	
		РегистрыСведений.СОЛЛЕРС_ЖурналРегистрацииСобытий.ЗафиксироватьИнформационноеСообщение(Событие,Перечисления.СОЛЛЕРС_УровниСобытия.Ошибка,Сообщение);	
		Возврат Сообщение;	
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст = НетиповыеОбмены.ПолучитьТекстЗапроса_ВыгружаемыеДокументыПоУзлуНетиповогоОбмена();	
	Запрос.Текст = Запрос.Текст +
		"ВЫБРАТЬ
		|	НовыеДвиженияПоКонвейеру.ВыгружаемыйОбъект
		|ПОМЕСТИТЬ НевыгруженныеДокументы
		|ИЗ
		|	НовыеДвиженияПоКонвейеру КАК НовыеДвиженияПоКонвейеру
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НевыгруженныеДокументы.ВыгружаемыйОбъект КАК Документ,
		|	ДвижениеЗаказов.ТочкаРегистрации,
		|	ДвижениеЗаказов.Заказ
		|ПОМЕСТИТЬ ИсходнаяСЗаказами
		|ИЗ
		|	НевыгруженныеДокументы КАК НевыгруженныеДокументы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДвижениеЗаказов КАК ДвижениеЗаказов
		|		ПО НевыгруженныеДокументы.ВыгружаемыйОбъект = ДвижениеЗаказов.Регистратор
		|			И (ДвижениеЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсходнаяСЗаказами.Документ КАК Документ,
		|	ИсходнаяСЗаказами.Заказ,
		|	АвтоматическоеУправлениеКампаниями.Кампания,
		|	АвтоматическоеУправлениеКампаниями.Установить,
		|	АвтоматическоеУправлениеКампаниями.Снять,
		|	АвтоматическоеУправлениеКампаниями.ФормулаОпределенияВозможностиВУправленииКампанией,
		|	ВЫБОР
		|		КОГДА АвтоматическоеУправлениеКампаниями.Кампания ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕслиПодходящаяАвтоматическаяКомпания
		|ИЗ
		|	ИсходнаяСЗаказами КАК ИсходнаяСЗаказами
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АвтоматическоеУправлениеКампаниями КАК АвтоматическоеУправлениеКампаниями
		|		ПО ИсходнаяСЗаказами.ТочкаРегистрации = АвтоматическоеУправлениеКампаниями.ТочкаРегистрации
		|ИТОГИ ПО
		|	Документ";
	Запрос.УстановитьПараметр("Узел",НастройкаОбмена.УзелРегистрацииИзменений);	
	РегистрыСведений.СОЛЛЕРС_ЖурналРегистрацииСобытий.ЗафиксироватьИнформационноеСообщение(Справочники.СОЛЛЕРС_КлассификаторСобытий.ГлобальнаяОшибкаИнформационнойБазы,Перечисления.СОЛЛЕРС_УровниСобытия.Ошибка,Запрос.Текст);
	РезультатЗапроса = Запрос.Выполнить();
	
	флЕстьДанныеДляПередачи = Не РезультатЗапроса.Пустой();
	
	ВыборкаДокумент = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Статистика = "";
	Пока ВыборкаДокумент.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДокумент

		ВыборкаДетальныеЗаписи = ВыборкаДокумент.Выбрать();
        НачатьТранзакцию();
		флЕстьОшибкиПоЗаказамВнутриДокумента = Ложь;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.ЕслиПодходящаяАвтоматическаяКомпания = ложь Тогда
				продолжить;
			КонецЕсли; 
			
			ЗаказУжеВключенВКампанию = ЗаказВключенВКампанию(ВыборкаДетальныеЗаписи.Заказ,ВыборкаДетальныеЗаписи.Кампания);
			
			Если ВыборкаДетальныеЗаписи.Установить и ЗаказУжеВключенВКампанию или ВыборкаДетальныеЗаписи.Снять и ЗаказУжеВключенВКампанию=Ложь Тогда
				Продолжить;
			КонецЕсли; 
			
			ОписаниеОшибки = "";
			ЗаказПодходит = Истина;
			Если Не ПустаяСтрока(ВыборкаДетальныеЗаписи.ФормулаОпределенияВозможностиВУправленииКампанией) Тогда
				ЗаказПодходит = ВычислитьФормулу(ВыборкаДетальныеЗаписи.ФормулаОпределенияВозможностиВУправленииКампанией,ВыборкаДетальныеЗаписи.Заказ,ОписаниеОшибки);
				Если Не ПустаяСтрока(ОписаниеОшибки) Тогда
					ТекстСообщенийСОшибками = ТекстСообщенийСОшибками + ?(ТекстСообщенийСОшибками = "","", Символы.ПС) + НСтр("ru='Заказ ""';en='The order ""'") + """:" + Символы.ПС;
					ТекстСообщенийСОшибками = ТекстСообщенийСОшибками + ОписаниеОшибки + Символы.ПС;
					флЕстьОшибкиПоЗаказамВнутриДокумента = Истина;
					ЗаказПодходит = Ложь;
				КонецЕсли;
			КонецЕсли; 
			Если ЗаказПодходит Тогда
				ДокКампация = Документы.ОперацияПоКампании.СоздатьДокумент();
				ДокКампация.Дата = ТекущаяДата();
				ДокКампация.Заказ = ВыборкаДетальныеЗаписи.Заказ;
				ДокКампация.Кампания = ВыборкаДетальныеЗаписи.Кампания;
				ДокКампация.ОперацияКампании = ?(ВыборкаДетальныеЗаписи.Установить,Перечисления.ОперацииКампании.Установка,Перечисления.ОперацииКампании.Снятие);
				ДокКампация.Записать(РежимЗаписиДокумента.Проведение);
				Статистика = Статистика + ?(ПустаяСтрока(Статистика),"",Символы.ПС)+ВыборкаДетальныеЗаписи.Кампания+?(ВыборкаДетальныеЗаписи.Установить," ""+"" "," ""-"" ");
			КонецЕсли; 
		КонецЦикла;
		Если флЕстьОшибкиПоЗаказамВнутриДокумента Тогда
			ОтменитьТранзакцию();
		Иначе
			ОписаниеОшибки = "";
			ДокументМассивом = новый Массив;
			ДокументМассивом.Добавить(ВыборкаДокумент.Документ);
			
			Если не НетиповыеОбмены.ЗарегистрироватьВыгрузкуОбъектовИзПланаОбмена(НастройкаОбмена.Ссылка,ДокументМассивом,,ОписаниеОшибки,"","") Тогда	
				ОтменитьТранзакцию(); 
				Сообщение = НСтр("ru='Неудачная попытка регистрации выгруженных объектов:';en='Unsuccessful attempt of registration of uploaded objects:'")+ОписаниеОшибки;
				ТекстСообщенийСОшибками = ТекстСообщенийСОшибками + ?(ТекстСообщенийСОшибками = "","", Символы.ПС)+Сообщение;	
				Продолжить;
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		КонецЕсли; 
	КонецЦикла;
	
	
	Если флЕстьДанныеДляПередачи = Ложь Тогда
		УровеньСообщения = Перечисления.СОЛЛЕРС_УровниСобытия.Информация;
		ТекстСообщения = НСтр("ru='Данных для анализа не обнаружено';en='Data for analysis not detected'")+Символы.ПС+ОписаниеОшибки() ;
		
	ИначеЕсли Не ПустаяСтрока(ТекстСообщенийСОшибками) Тогда
		УровеньСообщения = Перечисления.СОЛЛЕРС_УровниСобытия.Ошибка;
		ТекстСообщения = ТекстСообщенийСОшибками + ?(ПустаяСтрока(Статистика),"",Символы.ПС+НСтр("ru='Выполнены следующие изменения: ';en='The following changes have been made:'")+Символы.ПС+Статистика);
	Иначе
		УровеньСообщения = Перечисления.СОЛЛЕРС_УровниСобытия.Информация;
		ТекстСообщения = НСтр("ru='Выполнены следующие изменения: ';en='The following changes have been made:'")+Символы.ПС+Статистика;
	КонецЕсли; 
	РегистрыСведений.СОЛЛЕРС_ЖурналРегистрацииСобытий.ЗафиксироватьИнформационноеСообщение(Событие,УровеньСообщения,ТекстСообщения);
	Возврат ТекстСообщения;
	
КонецФункции


Функция ЗаказВключенВКампанию(Заказ,Кампания)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КампанииОстатки.КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.Кампании.Остатки(
		|			,
		|			Заказ = &Заказ
		|				И Кампания = &Кампания) КАК КампанииОстатки
		|ГДЕ
		|	КампанииОстатки.КоличествоОстаток > 0";

	Запрос.УстановитьПараметр("Заказ", Заказ);
	Запрос.УстановитьПараметр("Кампания", Кампания);

	Результат = Запрос.Выполнить();
    Если Результат.Пустой() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли; 

КонецФункции

Функция ВычислитьФормулу(Выражение,Заказ,ТекстСообщения)
	перем Результат;
	
	
	Результат = "";
	Попытка
		выполнить("Результат = "+Выражение);
	Исключение
		ТекстСообщения = НСтр("ru='Произошла ошибка вычисления выражения ""';en='Error of calculation of the expression '")+Выражение+НСтр("ru='"" - ""';en='"" occurred - ""'")+ОписаниеОшибки()+""","+символы.ПС;
		Возврат "";
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции // ВычислитФормулу
