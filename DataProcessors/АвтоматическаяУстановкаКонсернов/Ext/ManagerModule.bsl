
Функция ПолучитьОписаниеОбработкиОбмена() Экспорт
	
	// полный состав параметров описания смотри в этой функции
	СтруктураНастроек = Справочники.НетиповыеОбменыДанными.ПолучитьОписаниеОбработкиОбменаПоУмолчанию();
	
	СтруктураНастроек.ТекстовоеОписаниеОбмена = НСтр("ru='Автоматическая установка консернов'");
	СтруктураНастроек.ВидОбмена = Перечисления.ВидыОбмена.Двунаправленный;
	СтруктураНастроек.СпособПередачиДанных = Перечисления.СпособыПередачиДанныхВНетиповыхОбменах.None;
	СтруктураНастроек.XML_НастройкаОбязательна = Ложь;
	СтруктураНастроек.XML_НастройкаОбязательна = Ложь;
	СтруктураНастроек.ИспользованиеРегламентогоЗадания = Истина;
	СтруктураНастроек.ИспользованиеРегистрацииДанныхНаУзлеНетиповогоОбмена = Истина;
	
	Возврат СтруктураНастроек;
	
КонецФункции 

Функция ВыполнитьОбмен(Событие, НастройкаОбмена) Экспорт
	
	ТекстСообщения = "";
	СписокВыгруженыхОбъектов = Новый СписокЗначений;
	КоличествоКонсернов = 0;
	
	Если Не ЗначениеЗаполнено(НастройкаОбмена.УзелРегистрацииИзменений) Тогда
		ТекстСообщения = НСтр("ru='Узел регистрации изменений не заполнен.';en='Node of registration of changes is not filled.'");	
		РегистрыСведений.СОЛЛЕРС_ЖурналРегистрацииСобытий.ЗафиксироватьИнформационноеСообщение(Событие, 
			Перечисления.СОЛЛЕРС_УровниСобытия.Ошибка,
			ТекстСообщения);	
		Возврат ТекстСообщения;	
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДвижениеПоКонвейеруИзменения.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ВТ_Регистрация
		|ИЗ
		|	Документ.ДвижениеПоКонвейеру.Изменения КАК ДвижениеПоКонвейеруИзменения
		|ГДЕ
		|	ДвижениеПоКонвейеруИзменения.Узел = &Узел
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Регистрация.Ссылка КАК Ссылка,
		|	ДвижениеПоКонвейеру.Заказ КАК Заказ,
		|	ДвижениеПоКонвейеру.ТочкаРегистрации КАК ТочкаРегистрации
		|ПОМЕСТИТЬ ВТ_ДвиженияПоКонвейеру
		|ИЗ
		|	ВТ_Регистрация КАК ВТ_Регистрация
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДвижениеПоКонвейеру КАК ДвижениеПоКонвейеру
		|		ПО ВТ_Регистрация.Ссылка = ДвижениеПоКонвейеру.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДвиженияПоКонвейеру.Ссылка КАК ДвижениеПоКонвейеру,
		|	ПравилаАвтоматическойУстановкиКонсерновСрезПоследних.Правило КАК Правило,
		|	ВТ_ДвиженияПоКонвейеру.Заказ КАК Заказ
		|ПОМЕСТИТЬ ВТ_ЗаказыИПравила
		|ИЗ
		|	ВТ_ДвиженияПоКонвейеру КАК ВТ_ДвиженияПоКонвейеру
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПравилаАвтоматическойУстановкиКонсернов.СрезПоследних(
		|				,
		|				ТочкаРегистрацииMES В
		|					(ВЫБРАТЬ
		|						ВТ_ДвиженияПоКонвейеру.ТочкаРегистрации
		|					ИЗ
		|						ВТ_ДвиженияПоКонвейеру КАК ВТ_ДвиженияПоКонвейеру)) КАК ПравилаАвтоматическойУстановкиКонсерновСрезПоследних
		|		ПО ВТ_ДвиженияПоКонвейеру.ТочкаРегистрации = ПравилаАвтоматическойУстановкиКонсерновСрезПоследних.ТочкаРегистрацииMES
		|			И (ПравилаАвтоматическойУстановкиКонсерновСрезПоследних.Действует
		|				ИЛИ ВТ_ДвиженияПоКонвейеру.Заказ = ПравилаАвтоматическойУстановкиКонсерновСрезПоследних.ПоследнийЗаказ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ЗаказыИПравила.ДвижениеПоКонвейеру КАК ДвижениеПоКонвейеру,
		|	ВТ_ЗаказыИПравила.Правило КАК Правило,
		|	ВТ_ЗаказыИПравила.Заказ КАК Заказ,
		|	ВТ_ЗаказыИПравила.Правило.ФормулаПрименимости КАК ФормулаПрименимости
		|ИЗ
		|	ВТ_ЗаказыИПравила КАК ВТ_ЗаказыИПравила
		|ИТОГИ ПО
		|	ДвижениеПоКонвейеру
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ЗаказыИПравила.Правило КАК Правило,
		|	ВТ_ЗаказыИПравила.Заказ КАК Заказ,
		|	ПравилоАвтоматическойУстановкиКонсерновКонсерны.ИнспектируемыйЭлемент КАК ИнспектируемыйЭлемент,
		|	ПравилоАвтоматическойУстановкиКонсерновКонсерны.ВариантИспользованияИнспектируемогоЭлемента КАК ВариантИспользованияИнспектируемогоЭлемента,
		|	ПравилоАвтоматическойУстановкиКонсерновКонсерны.Дефект КАК Дефект,
		|	ПравилоАвтоматическойУстановкиКонсерновКонсерны.ПозицияA КАК ПозицияA,
		|	ПравилоАвтоматическойУстановкиКонсерновКонсерны.ПозицияB КАК ПозицияB,
		|	ПравилоАвтоматическойУстановкиКонсерновКонсерны.ПозицияC КАК ПозицияC,
		|	ПравилоАвтоматическойУстановкиКонсерновКонсерны.ТочкаПроверкиКачества КАК ТочкаПроверкиКачества
		|ИЗ
		|	ВТ_ЗаказыИПравила КАК ВТ_ЗаказыИПравила
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПравилоАвтоматическойУстановкиКонсернов.Консерны КАК ПравилоАвтоматическойУстановкиКонсерновКонсерны
		|		ПО ВТ_ЗаказыИПравила.Правило = ПравилоАвтоматическойУстановкиКонсерновКонсерны.Ссылка";
	
	Запрос.УстановитьПараметр("Узел", НастройкаОбмена.УзелРегистрацииИзменений);
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	Выборка = РезультатыЗапроса[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ТаблицаКонсернов = РезультатыЗапроса[4].Выгрузить();
	
	Пока Выборка.Следующий() Цикл
		
		НачатьТранзакцию();
		
		Попытка
		
			ВыборкаДетальныеЗаписи = Выборка.Выбрать();
				
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				СоответствуетФормулеПрименимости = Справочники.ИнспектируемыеЭлементы.ВычислитьФормулуПрименимости(
					ВыборкаДетальныеЗаписи.ФормулаПрименимости,
					ВыборкаДетальныеЗаписи.Заказ);
				
				Если СоответствуетФормулеПрименимости Тогда
					
					СтрокиКонсернов = ТаблицаКонсернов.НайтиСтроки(Новый Структура("Правило, Заказ",
						ВыборкаДетальныеЗаписи.Правило, ВыборкаДетальныеЗаписи.Заказ));
						
					Для каждого ТекСтрока Из СтрокиКонсернов Цикл
						ДокОбъект = Документы.ОперацияПоКачеству.СоздатьДокумент();
						ЗаполнитьЗначенияСвойств(ДокОбъект, ТекСтрока);
						ДокОбъект.Дата = ТекущаяДатаСеанса();
						ДокОбъект.ОперацияКачества = Перечисления.ОперацииКачества.Проверка;
						ДокОбъект.Автор = ПользователиКлиентСервер.ТекущийПользователь();
						ДокОбъект.АвторДата = ТекущаяДатаСеанса();
						ДокОбъект.ПравилоАвтоматическойУстановки = ТекСтрока.Правило;
						ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
						КоличествоКонсернов = КоличествоКонсернов + 1;
					КонецЦикла;
						
				КонецЕсли;
				
			КонецЦикла;
			
			СписокВыгруженыхОбъектов.Добавить(Выборка.ДвижениеПоКонвейеру);
				
			Если ТранзакцияАктивна() Тогда
				ЗафиксироватьТранзакцию();
			КонецЕсли;
			
		Исключение
			
			ОтменитьТранзакцию();
			ТекстСообщения = СтрШаблон("Не удалось создать консерн по заказу %1", Выборка.ДвижениеПоКонвейеру.Заказ);
			РегистрыСведений.СОЛЛЕРС_ЖурналРегистрацииСобытий.ЗафиксироватьИнформационноеСообщение(Событие,
				Перечисления.СОЛЛЕРС_УровниСобытия.Ошибка,
				ТекстСообщения);
			
		КонецПопытки;
		
	КонецЦикла;
	
	НетиповыеОбмены.ЗарегистрироватьВыгрузкуОбъектовИзПланаОбмена(НастройкаОбмена.Ссылка, СписокВыгруженыхОбъектов);
	
	ТекстСообщения = СтрШаблон("Создано %1 операций по качеству", КоличествоКонсернов);
	РегистрыСведений.СОЛЛЕРС_ЖурналРегистрацииСобытий.ЗафиксироватьИнформационноеСообщение(Событие, 
		Перечисления.СОЛЛЕРС_УровниСобытия.Информация,
		ТекстСообщения);
	
	Возврат ТекстСообщения;
	
КонецФункции
