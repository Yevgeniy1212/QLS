Функция ПолучитьОписаниеОбработкиОбмена() Экспорт

	// полный состав параметров описания смотри в этой функции
	СтруктураНастроек = Справочники.НетиповыеОбменыДанными.ПолучитьОписаниеОбработкиОбменаПоУмолчанию();
	СтруктураНастроек.ТекстовоеОписаниеОбмена = "Обработка загруженных реквизитов автомобилей";
	СтруктураНастроек.ВидОбмена = Перечисления.ВидыОбмена.Загрузка;
	СтруктураНастроек.СпособПередачиДанных = Перечисления.СпособыПередачиДанныхВНетиповыхОбменах.None;
	СтруктураНастроек.ИспользованиеРегламентогоЗадания = Истина;
	СтруктураНастроек.ИспользованиеРегистрацииДанныхНаУзлеНетиповогоОбмена = Истина;
	
	Возврат СтруктураНастроек;
КонецФункции // ()

Функция ВыполнитьОбмен(Событие, НастройкаОбмена) Экспорт
	
	МассивТекстовОшибок = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаполнениеРеквизитовЗаказовХарактеристикиVIN.Ссылка КАК ДокументСсылка,
	|	ЗаполнениеРеквизитовЗаказовХарактеристикиVIN.Ссылка.ВходящийНомер КАК ДокументНомер,
	|	ЗаполнениеРеквизитовЗаказовХарактеристикиVIN.Ссылка.Дата КАК ДокументДата,
	|	ЗаполнениеРеквизитовЗаказовХарактеристикиVIN.Заказ_VIN КАК Заказ_VIN,
	|	ЗаполнениеРеквизитовЗаказовХарактеристикиVIN.Характеристика_Имя КАК Характеристика_Имя,
	|	ЗаполнениеРеквизитовЗаказовХарактеристикиVIN.Значение_Характеристики КАК Значение_Характеристики,
	|	ЕСТЬNULL(Заказы.Ссылка, ЗНАЧЕНИЕ(Справочник.Заказы.ПустаяСсылка)) КАК Заказ_Ссылка
	|ИЗ
	|	Документ.ЗаполнениеРеквизитовЗаказов.Изменения КАК ЗаполнениеРеквизитовЗаказовИзменения
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаполнениеРеквизитовЗаказов.ХарактеристикиVIN КАК ЗаполнениеРеквизитовЗаказовХарактеристикиVIN
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Заказы КАК Заказы
	|			ПО ЗаполнениеРеквизитовЗаказовХарактеристикиVIN.Заказ_VIN = Заказы.VIN
	|		ПО ЗаполнениеРеквизитовЗаказовИзменения.Ссылка = ЗаполнениеРеквизитовЗаказовХарактеристикиVIN.Ссылка
	|ГДЕ
	|	ЗаполнениеРеквизитовЗаказовИзменения.Узел = &Узел
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокументДата,
	|	ДокументНомер
	|ИТОГИ
	|	МАКСИМУМ(Заказ_Ссылка)
	|ПО
	|	ДокументСсылка,
	|	Заказ_VIN";
	
	Запрос.УстановитьПараметр("Узел", НастройкаОбмена.УзелРегистрацииИзменений);

	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДокумент = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокумент.Следующий() Цикл
		
		ВыборкаЗаказ = ВыборкаДокумент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		НачатьТранзакцию();
		
		Попытка
			
			Пока ВыборкаЗаказ.Следующий() Цикл
				
				Заказ_Ссылка = ВыборкаЗаказ.Заказ_Ссылка;
				Если Заказ_Ссылка = Справочники.Заказы.ПустаяСсылка() Тогда
					ЗаказОбъект = Справочники.Заказы.СоздатьЭлемент();
					ЗаказОбъект.Наименование = ВыборкаЗаказ.Заказ_VIN;
					ЗаказОбъект.VIN = ВыборкаЗаказ.Заказ_VIN;    
					
					//чтобы добавлять характеристики, определим новую ссылку для объекта
					//(можно было сделать: ЗаказОбъект.Записать();)
					НоваяСсылка = Справочники.Заказы.ПолучитьСсылку(Новый УникальныйИдентификатор);
        			ЗаказОбъект.УстановитьСсылкуНового(НоваяСсылка);
					
					ДокИзменениеСтатуса = Документы.ИзменениеСтатусаЗаказа.СоздатьДокумент();
					ДокИзменениеСтатуса.Дата = ТекущаяДатаСеанса();
					ДокИзменениеСтатуса.Заказ = НоваяСсылка;
					ДокИзменениеСтатуса.Статус = Перечисления.СтатусыЗаказа.A;
					ДокИзменениеСтатуса.Записать(РежимЗаписиДокумента.Проведение);
				Иначе
					ЗаказОбъект = Заказ_Ссылка.ПолучитьОбъект();
				КонецЕсли;
							
				Выборка = ВыборкаЗаказ.Выбрать();
				Пока Выборка.Следующий() Цикл
					Если Выборка.Характеристика_Имя = "Модель" Тогда
						ЗаказОбъект.Модель = НайтиСоздатьСправочник("Модели", Выборка.Значение_Характеристики);
					ИначеЕсли Выборка.Характеристика_Имя = "Цвет" Тогда
						ЗаказОбъект.Цвет = НайтиСоздатьСправочник("Цвета", Выборка.Значение_Характеристики);
					ИначеЕсли Выборка.Характеристика_Имя = "Бренд" Тогда
						Если ЗначениеЗаполнено(Выборка.Значение_Характеристики) Тогда
							ЗаказОбъект.Бренд = НайтиСоздатьСправочник("Бренды", Выборка.Значение_Характеристики);
						КонецЕсли;  
					ИначеЕсли ВРЕГ(Выборка.Характеристика_Имя) = "VIN" Тогда
						//Пропускаем	
					Иначе
						ДобавитьХарактеристику(ЗаказОбъект.Ссылка,Выборка.Характеристика_Имя,Выборка.Значение_Характеристики);
					КонецЕсли;
				КонецЦикла;
				ЗаказОбъект.Записать();
				
			КонецЦикла;

			ПланыОбмена.УдалитьРегистрациюИзменений(НастройкаОбмена.УзелРегистрацииИзменений, ВыборкаДокумент.ДокументСсылка);
			
		Исключение
			ОтменитьТранзакцию();
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			ТекстОшибкиПоДокументу = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Ошибка при обработке документа ""%1"": %2'"), ВыборкаДокумент.ДокументСсылка, КраткоеПредставлениеОшибки(ИнформацияОбОшибке));
			МассивТекстовОшибок.Добавить(ТекстОшибкиПоДокументу);
			Продолжить;
		КонецПопытки;
		
		ЗафиксироватьТранзакцию();
		
	КонецЦикла;
	
	ТекстОшибки = СтрСоединить(МассивТекстовОшибок, Символы.ПС);
	Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
		РегистрыСведений.СОЛЛЕРС_ЖурналРегистрацииСобытий.ЗафиксироватьИнформационноеСообщение(Событие, Перечисления.СОЛЛЕРС_УровниСобытия.Ошибка, ТекстОшибки);
	КонецЕсли;
		
	Возврат "";
	
КонецФункции // ()

Функция НайтиСоздатьСправочник(ТипСправочника, Наименование)
	
	СправочникСсылка = Справочники[ТипСправочника].НайтиПоНаименованию(Наименование, Истина);
	
	Если СправочникСсылка = Справочники[ТипСправочника].ПустаяСсылка() Тогда
		СправочникОбъект = Справочники[ТипСправочника].СоздатьЭлемент();
		СправочникОбъект.Наименование = Наименование;
		СправочникОбъект.Записать();
		СправочникСсылка = СправочникОбъект.Ссылка;
	КонецЕсли;
	
	Возврат СправочникСсылка;
	
КонецФункции    

Процедура ДобавитьХарактеристику(Заказ,ХарактеристикаИмя,ХарактеристикаЗначение)
	
	Если Не ЗначениеЗаполнено(ХарактеристикаИмя) Тогда
		Возврат;	
	КонецЕсли;

	//Все характеристики одного типа ЗначениеСвойствЗаказа
	//Если ХарактеристикаЗначение не заполнено, то соответствующее свойство сбрасывается
	
	НаименованиеХарактеристики 			= Лев(ХарактеристикаИмя,Метаданные.ПланыВидовХарактеристик.ДополнительныеРеквизитыЗаказа.ДлинаНаименования);
	НаименованиеЗначенияХарактеристики 	= Лев(ХарактеристикаЗначение,Метаданные.Справочники.ЗначениеСвойствЗаказа.ДлинаНаименования);
	
	Свойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыЗаказа.НайтиПоНаименованию(НаименованиеХарактеристики,Истина);
	//Все характеристики одного типа ЗначениеСвойствЗаказа
	Если Не ЗначениеЗаполнено(Свойство) Тогда
		НоваяХарактеристика = ПланыВидовХарактеристик.ДополнительныеРеквизитыЗаказа.СоздатьЭлемент();
		НоваяХарактеристика.Наименование = НаименованиеХарактеристики;
		НоваяХарактеристика.ТипЗначения	= Новый ОписаниеТипов("СправочникСсылка.ЗначениеСвойствЗаказа");
		НоваяХарактеристика.Записать();  
		Свойство = НоваяХарактеристика.Ссылка; 
	КонецЕсли;

	ЗначениеСвойства = Справочники.ЗначениеСвойствЗаказа.НайтиПоНаименованию(НаименованиеЗначенияХарактеристики,Истина,,Свойство);
	//Если ХарактеристикаЗначение не заполнено, то соответствующее свойство сбрасывается	
	Если Не ЗначениеЗаполнено(ЗначениеСвойства) 
		И ЗначениеЗаполнено(НаименованиеЗначенияХарактеристики) Тогда
		НовоеЗначениеСвойства = Справочники.ЗначениеСвойствЗаказа.СоздатьЭлемент();
		НовоеЗначениеСвойства.Наименование 	= НаименованиеЗначенияХарактеристики;
		НовоеЗначениеСвойства.Владелец 		= Свойство; 
		НовоеЗначениеСвойства.Записать();
		ЗначениеСвойства = НовоеЗначениеСвойства.Ссылка;
	КонецЕсли;

	МенеджерЗаписи = РегистрыСведений.ДополнительныеСвойстваЗаказа.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Заказ = Заказ;
	МенеджерЗаписи.Свойство = Свойство;
	МенеджерЗаписи.Значение = ЗначениеСвойства;
	МенеджерЗаписи.Записать(Истина);
	
КонецПроцедуры
