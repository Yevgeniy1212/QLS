#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем СхемаВалидации Экспорт;
Перем ШаблоныСообщений;
Перем Ошибки;

#КонецОбласти 

#Область ПрограммныйИнтерфейс

Функция Проверить(Объект, Знач Схема = Неопределено) Экспорт
	
	Схема = ?(ЗначениеЗаполнено(Схема), Схема, СхемаВалидации);
	Если Не ЗначениеЗаполнено(Схема) Тогда
		ВызватьИсключение НСтр("ru = 'Не задана схема валидации'; en = 'Failed validation scheme '"); 
	КонецЕсли;
	
	ШаблоныСообщений = ВалидацияПереопределяемый.ШаблоныСообщений();
	Ошибки = Обработки.ОшибкиВалидатора.Создать();
	
	Для Каждого ЭлементСхемы Из Схема Цикл
		
		ИмяПоля = ЭлементСхемы.Ключ;
		ПараметрыПоля = ЭлементСхемы.Значение;
		ЭтоОбязательноеПоле = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыПоля, "Обязательное", Ложь);
		
		Значение = ПолучитьЗначениеСвойстваОбъекта(Объект, ИмяПоля);
		Если Значение = Неопределено Тогда
			Если ЭтоОбязательноеПоле Тогда
				ДобавитьОшибку(ИмяПоля, "Обязательное", Значение);	
			КонецЕсли;
			Продолжить;
		КонецЕсли;
					
		ТипПоля = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыПоля, "Тип", Тип("Строка"));
		Ковертировать = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыПоля, "Ковертировать", Ложь);
		Если Ковертировать И ТипЗнч(Значение) <> ТипПоля Тогда
			Попытка
				ОписаниеТипов = Новый ОписаниеТипов(ТипПоля);
				Значение = ОписаниеТипов.ПривестиЗначение(Значение);	
			Исключение
				ДобавитьОшибку(ИмяПоля, "Тип", Значение, ТипПоля);	
				Продолжить;
			КонецПопытки;
		КонецЕсли;
		
		Если ТипЗнч(Значение) <> ТипПоля Тогда
			ДобавитьОшибку(ИмяПоля, "Тип", Значение, ТипПоля);	
			Продолжить;	
		КонецЕсли;
		
		Если ПараметрыПоля.Свойство("Равно") Тогда
			ДоступноеЗначение = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыПоля, "Равно");
			Если Значение <> ДоступноеЗначение Тогда
				ДобавитьОшибку(ИмяПоля, "Равно", Значение, ДоступноеЗначение);
			КонецЕсли;
			Продолжить;
		КонецЕсли;

		Если ПараметрыПоля.Свойство("ВСписке") Тогда
			МассивДоступных = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыПоля, "ВСписке");
			Если МассивДоступных.Найти(Значение) = Неопределено Тогда
				ДобавитьОшибку(ИмяПоля, "ВСписке", Значение, МассивДоступных);
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		Если ТипПоля = Тип("Строка") Тогда
			ПроверитьСтроку(ЭлементСхемы, Значение);
		КонецЕсли;
		
		УстановитьЗначениеСвойстваОбъекта(Объект, ИмяПоля, Значение);
	
	КонецЦикла;
	
	ШаблоныСообщений = Неопределено;
	
	Возврат Ошибки;	
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьСтроку(ЭлементСхемы, Значение)
	
	ИмяПоля = ЭлементСхемы.Ключ;
	ПараметрыПоля = ЭлементСхемы.Значение;
	
	Пустое = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыПоля, "Пустое", Истина);
	Если Не Пустое И ПустаяСтрока(Значение) Тогда
		ДобавитьОшибку(ИмяПоля, "СтрокаПустая");
	КонецЕсли;
	
КонецПроцедуры

//

Функция ПолучитьЗначениеСвойстваОбъекта(Объект, Ключ)
	
	ТипОбъекта = ТипЗнч(Объект);
	Возврат ?(ТипОбъекта = Тип("Структура"), ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Объект, Ключ), Объект.Получить(Ключ));
		
КонецФункции

Процедура УстановитьЗначениеСвойстваОбъекта(Объект, Ключ, Значение)
	
	ТипОбъекта = ТипЗнч(Объект);
	
	Если ТипОбъекта = Тип("Структура") Тогда
		Объект.Вставить(Ключ, Значение);	
	Иначе
		Объект[Ключ] = Значение;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьОшибку(ИмяПоля, Тип, Значение = Неопределено, ДополнительноеЗначение = Неопределено)
	
	ШаблонСообщения = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ШаблоныСообщений, Тип, "");
	ПараметрыСообщения = Новый Структура();
	ПараметрыСообщения.Вставить("Поле", ИмяПоля);
	ПараметрыСообщения.Вставить("Значение", ПолучитьПредставлениеЗначения(Значение));
	ПараметрыСообщения.Вставить("ДополнительноеЗначение", ПолучитьПредставлениеЗначения(ДополнительноеЗначение));
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(ШаблонСообщения, ПараметрыСообщения);
	
	Ошибки.Добавить(ИмяПоля, Тип, ТекстСообщения, Значение, ДополнительноеЗначение);
	
КонецПроцедуры

Функция ПолучитьПредставлениеЗначения(Значение)
	
	Представление = "";
	
	ТипЗначения =  ТипЗнч(Значение);
	Если ТипЗначения = Тип("Массив") Тогда
		Представление = "[" + СтрСоединить(Значение, ",") + "]";	
	ИначеЕсли ТипЗначения = Тип("Тип") Тогда
		Представление = ОбщегоНазначения.СтроковоеПредставлениеТипа(Значение);	
	Иначе
		Представление = СокрЛП(Значение);
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

#КонецОбласти

#КонецЕсли