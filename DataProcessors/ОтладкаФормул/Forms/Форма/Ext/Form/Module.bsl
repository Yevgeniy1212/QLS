&НаКлиенте
Процедура Проверить(Команда)
	Если ВидОбъекта = 1 Тогда
		Если Заказы.Количество()=0 Тогда
			ПоказатьПредупреждение(,НСтр("ru='Не указаны заказы для тестирования';en='Orders for testing are not specified'"));
			Возврат;
		КонецЕсли; 
	КонецЕсли;
	ПроверитьНаСервере();
	УправлениеДоступностью();
	Если ПроверкаПройдена Тогда
		ПоказатьПредупреждение(,НСтр("ru='Проверка успешно пройдена.';en='Check was successfully passed.'"));
	Иначе
		ПоказатьПредупреждение(,НСтр("ru='Проверка завершена с ошибками.';en='Check was finished with errors.'"));
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПроверитьНаСервере()
	перем времРезультат;
	Если ПустаяСтрока(Формула) Тогда
		Возврат;
	КонецЕсли; 
	ПроверкаПройдена = Истина;
	ТекстОшибки = "";
	ТипРезультата = "";
	
	Результаты.Очистить();
	
	Если ВидОбъекта = 1 Тогда
		ТаблицаИсходник = Заказы; 
	КонецЕсли;
	
	Для каждого Строка Из ТаблицаИсходник Цикл
		
		строкаРезультат = Результаты.Добавить();
		Если ВидОбъекта = 1 Тогда
			Заказ = Строка.Заказ;
			строкаРезультат.Заказ = Заказ;
		КонецЕсли;
		
		Попытка
			выполнить("времРезультат = "+Формула);
		Исключение
			ПроверкаПройдена = Ложь;
			строкаРезультат.Ошибка = Истина;
			строкаРезультат.ТекстОшибки = ОписаниеОшибки();
			Продолжить;
		КонецПопытки;
		
		строкаРезультат.Результат = времРезультат;
		строкаРезультат.ТипРезультата = ТипЗНЧ(времРезультат);
		Если Не ПроверочныйТипРезультата.СодержитТип(ТипЗНЧ(времРезультат)) Тогда
			ПроверкаПройдена = Ложь;
			строкаРезультат.Ошибка = Истина;
			Если ПроверочныйТипРезультата.СодержитТип(Тип("Булево")) Тогда
				строкаРезультат.ТекстОшибки = НСтр("ru='Результат должен быть ""Истина"" или ""Ложь""';en='Result should be ""True"" or ""False""'");
			ИначеЕсли ПроверочныйТипРезультата.СодержитТип(Тип("Строка")) Тогда
				строкаРезультат.ТекстОшибки = НСтр("ru='Результат должен быть строкового типа';en='Result should be a string type'");
			Иначе	
				строкаРезультат.ТекстОшибки = НСтр("ru='Тип результата не соответствует разрешенному.';en='Type of result does not match to allowed.'");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Формула",Формула) Тогда
		ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.ФормаОтказаться.Видимость = Истина;
		ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.ФормаПринятьФормулу.Видимость = Истина;
		ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.ФормаОчистить.Видимость = Истина;
	КонецЕсли;
	Если Не Параметры.Свойство("ТипРезультата",ПроверочныйТипРезультата) Тогда
		ПроверочныйТипРезультата = Новый ОписаниеТипов("Булево");
	КонецЕсли;
	ВидОбъекта = 1;    
КонецПроцедуры

&НаКлиенте
Процедура ПринятьФормулу(Команда)
	Если ПроверкаПройдена Тогда
		Закрыть(Формула);
	Иначе
		Закрыть(Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТекстФормулыПриИзменении(Элемент)
	ПроверкаПройдена = Ложь;
	УправлениеДоступностью();
КонецПроцедуры

&НаКлиенте
Процедура 	УправлениеДоступностью()
	ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.ФормаПринятьФормулу.Доступность = ПроверкаПройдена;
КонецПроцедуры


&НаКлиенте
Процедура Отказаться(Команда)
	Закрыть(Неопределено);
КонецПроцедуры


&НаКлиенте
Процедура РедактированиеТекстовымСписком(Команда)
	ТекстовыйПереченьVIN = "";
	Для каждого Заказ Из Заказы Цикл
		ТекстовыйПереченьVIN = ТекстовыйПереченьVIN + ?(ПустаяСтрока(ТекстовыйПереченьVIN),"",Символы.ПС)+Заказ.Заказ;
	КонецЦикла;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеВводаПеречняVIN", ЭтотОбъект);
	ПоказатьВводСтроки(ОписаниеОповещения, ТекстовыйПереченьVIN,НСтр("ru='Введите значения VIN или № заказа (каждый с новой строки)';en='Enter values of VIN or N of order (each from a new line)'"),,Истина)
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаПеречняVIN(ТекстовыйПереченьVIN, Параметры) Экспорт
	
	Если Не ЗначениеЗаполнено(ТекстовыйПереченьVIN) Тогда
		Возврат;
	КонецЕсли;
	
	ОбработатьЗаказы(ТекстовыйПереченьVIN);
	
КонецПроцедуры // ПослеВводаПеречняVIN()

&НаКлиенте
Процедура ОбработатьЗаказы(ТекстовыйПереченьVIN)
	
	ТекстОшибки = "";
	СписокЗаказов = ПолучитьСписокЗаказовПоСпискуVIN(ТекстовыйПереченьVIN,ТекстОшибки);
	Если Не ПустаяСтрока(ТекстОшибки) Тогда
		ПоказатьПредупреждение(,ТекстОшибки);
		Возврат;
	КонецЕсли;
	
	ДобавитьVINВТабЧастьЗаказы(СписокЗаказов);
КонецПроцедуры // ОбработатьЗаказы()

&НаСервереБезКонтекста
Функция ПолучитьСписокЗаказовПоСпискуVIN(ТекстовыйСписокVIN,ТекстОшибки)

	Возврат Производство.ПолучитьСписокЗаказовПоСпискуVIN(ТекстовыйСписокVIN,ТекстОшибки);
	
КонецФункции // ПолучитьСписокЗаказовПоСпискуVIN(ОтборVIN,ТекстОшибки)()

Процедура ДобавитьVINВТабЧастьЗаказы(СписокЗаказов)
	
	Заказы.Очистить();
	Для каждого НовыйЗаказ Из СписокЗаказов Цикл
		СтрокаЗаказ = Заказы.Добавить();
		СтрокаЗаказ.Заказ = НовыйЗаказ.Значение;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	Формула = "";
	ПроверкаПройдена = Истина;
	УправлениеДоступностью();
КонецПроцедуры