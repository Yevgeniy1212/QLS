&НаКлиенте
Процедура ДобавитьСпискомЗаказов(Команда)
	ПередаваемыеПараметры = Новый Структура();
	
	Колонки = Новый Структура;
	Колонки.Вставить("VIN"			, "VIN");
	
	ПередаваемыеПараметры.Вставить("Колонки", Колонки);
	
	ШиринаКолонок = Новый Структура("VIN",20);
	
	ПередаваемыеПараметры.Вставить("ШиринаКолонок", ШиринаКолонок);
	
	// ПередаваемыеПараметры.Вставить("Каталог", КаталогВременныхФайлов());
	ПередаваемыеПараметры.Вставить("Каталог", "");
	
	ПередаваемыеПараметры.Вставить("ПоказыватьФлагОчищать", Ложь);
	
	РаботаСДиалогамиКлиент.ОткрытьФормуЗагрузки(ЭтаФорма, ПередаваемыеПараметры);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если НЕ ЭтаФорма = Источник Тогда
		Возврат;
	КонецЕсли;
	
	Если ИмяСобытия = "ПереданыДанныеИзФормыЗагрузки" Тогда
		ТекстСообщения = "";
		Успешно =  ДобавитьЗаказыСписком_ОбработкаОповещения(Параметр,ТекстСообщения);
		Если Не ПустаяСтрока(ТекстСообщения) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСТР("ru='"+ТекстСообщения+"';en='"+ТекстСообщения+"'"));
		КонецЕсли; 
	КонецЕсли;
	Если Успешно Тогда
		ПоказатьПредупреждение(,НСтр("ru='Заказы добавлены.';en='Orders were added.'"));
	Иначе
		ПоказатьПредупреждение(,НСтр("ru='Заказы не добавлены.';en='Orders were not added.'"));
	КонецЕсли; 
КонецПроцедуры
&НаСервере
Функция ДобавитьЗаказыСписком_ОбработкаОповещения(Параметр,ТекстСообщения)
	ТекстСообщения = "";
	
	СтруктураВозврата = ПолучитьИзВременногоХранилища(Параметр);
	НеНайденныеVIN = "";
	НомерСТроки = 0;
	Если ТипЗнч(СтруктураВозврата) <> Тип("Структура") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	
	СписокVIN = СтруктураВозврата.ТаблицаДанных.ВыгрузитьКолонку("VIN");
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДвижениеЗаказовОстатки.Заказ КАК Заказ,
		|	ДвижениеЗаказовОстатки.ТочкаРегистрации КАК ТочкаРегистрации
		|ИЗ
		|	РегистрНакопления.ДвижениеЗаказов.Остатки(, ) КАК ДвижениеЗаказовОстатки
		|ГДЕ
		|	ДвижениеЗаказовОстатки.Заказ.VIN В(&СписокVIN)
		|	И ДвижениеЗаказовОстатки.КоличествоОстаток > 0";

	Запрос.УстановитьПараметр("СписокVIN", СписокVIN);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	СчетчикДобавленных = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ДобавитьЗаказ(ВыборкаДетальныеЗаписи.Заказ) Тогда
			СчетчикДобавленных = СчетчикДобавленных + 1;
		КонецЕсли; 
		
	КонецЦикла;
	ТекстСообщения = НСтр("ru='Заказов добавлено: ';en='Orders were added: '")+СчетчикДобавленных;
	Если СчетчикДобавленных=0 Тогда
		Возврат Ложь;
	КонецЕсли; 
	ОбновитьСостояниеЗаказаВКомпании();	
	Возврат Истина;
КонецФункции

&НаСервере
Функция ДобавитьЗаказ(Заказ)
	ПараметрыОтбора = новый Структура("Заказ",Заказ);
	НайденныеСтроки = ВыбранныеЗаказы.НайтиСтроки(ПараметрыОтбора);
	Если НайденныеСтроки.Количество()=0 Тогда
		НоваяСтрока = ВыбранныеЗаказы.Добавить();
		НоваяСтрока.Заказ = Заказ;
		Возврат Истина;
	КонецЕсли; 
	Возврат Ложь;
КонецФункции

&НаСервере
Процедура ОбновитьСостояниеЗаказаВКомпании()
	Если Не ЗначениеЗаполнено(Кампания) Тогда
		Для каждого СтрокаСЗаказом Из ВыбранныеЗаказы Цикл
			СтрокаСЗаказом.КампанияУстановлена = Ложь;
		КонецЦикла; 
		Возврат;
	КонецЕсли; 
	
	СписокЗаказов = ВыбранныеЗаказы.Выгрузить().ВыгрузитьКолонку("Заказ");

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КампанииОстатки.Заказ
		|ИЗ
		|	РегистрНакопления.Кампании.Остатки(
		|			,
		|			Заказ В (&СписокЗаказов)
		|				И Кампания = &Кампания) КАК КампанииОстатки
		|ГДЕ
		|	КампанииОстатки.КоличествоОстаток > 0";

	Запрос.УстановитьПараметр("Кампания", Кампания);
	Запрос.УстановитьПараметр("СписокЗаказов", СписокЗаказов);

	ЗаказыСУстановленнойКампанией = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Заказ");
	
	Для каждого строкаСЗаказом Из ВыбранныеЗаказы Цикл
		Если ЗаказыСУстановленнойКампанией.Найти(СтрокаСЗаказом.Заказ)= Неопределено Тогда
			СтрокаСЗаказом.КампанияУстановлена = Ложь;
		Иначе	
			СтрокаСЗаказом.КампанияУстановлена = Истина;
		КонецЕсли; 
	КонецЦикла; 
	Элементы.ОстаткиЗаказов.Обновить();
	Элементы.ДвиженияЗаказов.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКампанию(Команда)
	
	ТекстСообщения = "";
	Успешно = ИзменитьКампанию_Сервер(Истина,ТекстСообщения);
	Если Не ПустаяСтрока(ТекстСообщения) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСТР("ru='"+ТекстСообщения+"';en='"+ТекстСообщения+"'"));
	КонецЕсли; 
	
	Если Успешно Тогда
		ПоказатьПредупреждение(,НСтр("ru='Операция выполнена';en='Operation was executed'"));
	Иначе
		ПоказатьПредупреждение(,НСтр("ru='Операция не выполнена';en='Operation was not executed'"));
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура СнятьКампанию(Команда)
	ТекстСообщения = "";
	Успешно = ИзменитьКампанию_Сервер(Ложь,ТекстСообщения);
	Если Не ПустаяСтрока(ТекстСообщения) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСТР("ru='"+ТекстСообщения+"';en='"+ТекстСообщения+"'"));
	КонецЕсли; 
	
	Если Успешно Тогда
		ПоказатьПредупреждение(,НСтр("ru='Операция выполнена';en='Operation was executed'"));
	Иначе
		ПоказатьПредупреждение(,НСтр("ru='Операция не выполнена';en='Operation was not executed'"));
	КонецЕсли; 
КонецПроцедуры


&НаСервере
Функция ИзменитьКампанию_Сервер(УстановкаКампании,ТекстСообщения)
	
	Если Не ЗначениеЗаполнено(Кампания) Тогда
		ТекстСообщения = НСтр("ru='Не выбрана кампания';en='Campaign is not chosen'");
		Возврат ложь;
	КонецЕсли; 
	
	Для каждого СтрокаСЗаказом Из ВыбранныеЗаказы Цикл
		
		ДокКампания = документы.ОперацияПоКампании.СоздатьДокумент();
		ДокКампания.Дата = ТекущаяДата();
		ДокКампания.Заказ = СтрокаСЗаказом.Заказ;
		ДокКампания.Кампания = Кампания;
		ДокКампания.ОперацияКампании = ?(УстановкаКампании,Перечисления.ОперацииКампании.Установка,Перечисления.ОперацииКампании.Снятие);
		ДокКампания.ДополнительныеСвойства.Вставить("ОтключитьКонтрольОстатков",Истина);
		Попытка
			ДокКампания.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Оперативный);
		Исключение
		    ТекстСообщения = ТекстСообщения + ОписаниеОшибки() + Символы.ПС;
		КонецПопытки;
				
	КонецЦикла; 
	
	ОбновитьСостояниеЗаказаВКомпании();
	Возврат Истина;
	
КонецФункции


&НаКлиенте
Процедура КампанияПриИзменении(Элемент)
	УстановитьПараметрыДинамическихСписков();
	ОбновитьСостояниеЗаказаВКомпании();
КонецПроцедуры


&НаКлиенте
Процедура КампанияОчистка(Элемент, СтандартнаяОбработка)
	УстановитьПараметрыДинамическихСписков();
	ОбновитьСостояниеЗаказаВКомпании();
КонецПроцедуры


&НаКлиенте
Процедура ДвиженияЗаказовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ДобавитьЗаказИзДинамическогоСписка(Элемент, ВыбраннаяСтрока, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПараметрыДинамическихСписков()
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ДвиженияЗаказов,"Кампания",Кампания);
	//ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ОстаткиЗаказов,"Кампания",Кампания);
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(ОстаткиЗаказов,"Дата",?(ЗначениеЗаполнено(ДатаПолученияОстатков),ДатаПолученияОстатков,ТекущаяДата()+1));
КонецПроцедуры
 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьПараметрыДинамическихСписков();
КонецПроцедуры

&НаКлиенте
Процедура ДвиженияЗаказовВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	ДобавитьЗаказИзДинамическогоСписка(Элемент, Значение, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЗаказИзДинамическогоСписка(Элемент, ВыбраннаяСтрока, СтандартнаяОбработка)
	КоличествоДобавлено = 0;
	СтандартнаяОбработка = Ложь;
	Для каждого НомерСтроки Из ВыбраннаяСтрока Цикл
		ТекСтрока = Элемент.ДанныеСтроки(НомерСтроки);
		Если ДобавитьЗаказ(ТекСтрока.Заказ) Тогда
			КоличествоДобавлено = КоличествоДобавлено + 1;
		КонецЕсли; 
	КонецЦикла;
	ОбновитьСостояниеЗаказаВКомпании();
	Состояние(НСтр("ru='Заказов добавлено: ';en='Orders were added: '")+КоличествоДобавлено);
КонецПроцедуры

&НаКлиенте
Процедура ДатаПолученияОстатковПриИзменении(Элемент)
	УстановитьПараметрыДинамическихСписков();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПолученияОстатковОчистка(Элемент, СтандартнаяОбработка)
	УстановитьПараметрыДинамическихСписков();
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиЗаказовВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	ДобавитьЗаказИзДинамическогоСписка(Элемент, Значение, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиЗаказовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ДобавитьЗаказИзДинамическогоСписка(Элемент, ВыбраннаяСтрока, СтандартнаяОбработка);
КонецПроцедуры
 
			
