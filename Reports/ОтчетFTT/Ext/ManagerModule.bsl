////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Функция СформироватьОтчет(ВариантОтчета,ДатаОтчета, ТекстОшибки ="", ПараметрыВывода = Неопределено) Экспорт		
	ТекстОшибки = "";
	
	ПутьКФайламДляОтрисовкиДиаграммы = ВариантОтчета.ПутьКФайламДляОтчетаПоказателиУровняДефектности;
	Если ПустаяСтрока(ПутьКФайламДляОтрисовкиДиаграммы) Тогда
		ТекстОшибки = НСтр("ru='Не заполнена Путь к файлам для отчета показатели уровня дефектности'; en='Not filled Path to files for the report Defectiveness indicators'");
		Возврат "";
	КонецЕсли;
	
	Макет = РаботаСHTMLСервер.HTMLЗаполнитьЗначение(Макет, "PathToFileForDiagramm", ПутьКФайламДляОтрисовкиДиаграммы, Ложь);
		
	Если НЕ ЗначениеЗаполнено(ДатаОтчета) Тогда
		ДатаОтчета = НачалоДня(ТекущаяДата())
	КонецЕсли;
	
	#Область Переменные
	
	НомерКолонкиДляВыборкиТопДефектов = ВариантОтчета.НомерКолонкиДляВыборкиТопДефектов;
	КоличествоТопДефектов = ?(ЗначениеЗаполнено(ВариантОтчета.КоличествоТопДефектов), ВариантОтчета.КоличествоТопДефектов, 15);
	ОффлайнДефекты = ВариантОтчета.ОффлайнДефекты;
	ОнлайнДефекты = ВариантОтчета.ОнлайнДефекты;

	
	#КонецОбласти 
	
	
	ТаблицаПериодов = ПолучитьПериоды(ДатаОтчета,ВариантОтчета); 
	
	КоличествоПериодов = ТаблицаПериодов.Количество();	
	Если КоличествоПериодов = 0 Тогда
		ТекстОшибки = "Не указаны периоды в варианте отчета";
		Возврат "";
	КонецЕсли;
	
	Запрос = ПолучитьЗапрос(ВариантОтчета, ТаблицаПериодов); 
	
	Макет = Отчеты.ОтчетFTT.ПолучитьМакет("МакетЗаготовкаFTT").ПолучитьТекст();
	
	//Шапка таблицы с периодами и шаблоном для замены (заменяемое поле "Шаблон")
	ШаблонТаблицаПодДиаграммой = ПолучитьШапкуИзТаблицыПериодов(ТаблицаПериодов);

	#Область Описание
	
	//FTT
	//SampleSize  - количество авто, прошедших точку(ки) регистрации
	//FTT_Not_OK_Units_Count - количество авто с офф-лайн дефектами
	//Actual_Unit_Concern_Count - количество дефектов онлайн, оффлайн (влияют галки)
	//Actial_Unit_Concern_Count / 1000 (C/1000)
	//FR - если на авто, когда-либо были дефекты (онлайн, оффлайн), то он никогда не попадает в First Run, период занесения дефектов тут не важен, важен сам факт.
	//в расчете используются только "чистые" авто   FR = Кол-воАвтоБезДефектовЗаПериод / Кол-воАвтоПрошедшиеТочкиРегистрациЗаПериода * 100%
		
	#КонецОбласти 
	
	//FTT Диаграмма
	ДанныеДляFTT = ПолучитьДанныеПоFTT(Запрос);
	Диаграмма = СформироватьДанныеДляДиаграммы(ДанныеДляFTT);
	Макет = РаботаСHTMLСервер.HTMLЗаполнитьЗначение(Макет, "DataSeries", Диаграмма); 
	
	//FTT строка для таблицы под диаграммой
	HTML_СтрокаFTT = FTT_ПолучитьHTMLСтрокуДляТаблицы(ДанныеДляFTT, КоличествоПериодов);
	ШаблонТаблицаПодДиаграммой = РаботаСHTMLСервер.HTMLЗаполнитьЗначение(ШаблонТаблицаПодДиаграммой, "Шаблон", HTML_СтрокаFTT, Истина);

	//КоличествоАвто
	ДанныеДляSampleSize = ПолучитьДанныеПоSampleSize(Запрос);
	HTML_СтрокаSampleSize = SampleSize_ПолучитьHTMLСтрокуДляТаблицы(ДанныеДляSampleSize, КоличествоПериодов);
	ШаблонТаблицаПодДиаграммой = РаботаСHTMLСервер.HTMLЗаполнитьЗначение(ШаблонТаблицаПодДиаграммой, "Шаблон", HTML_СтрокаSampleSize, Истина);
	
	//Actual Unit Concern Count
	ДанныеДляActualUnitConcernCount = ПолучитьДанныеПоActualUnitConcernCount(Запрос, ОффлайнДефекты, ОнлайнДефекты);
	HTML_СтрокаActualUnitConcernCount = ActualUnitConcernCount_ПолучитьHTMLСтрокуДляТаблицы(ДанныеДляActualUnitConcernCount, КоличествоПериодов);
	ШаблонТаблицаПодДиаграммой = РаботаСHTMLСервер.HTMLЗаполнитьЗначение(ШаблонТаблицаПодДиаграммой, "Шаблон", HTML_СтрокаActualUnitConcernCount, Истина);
	
	//HTML_СтрокаFTT_Not_OK_Units_Count
	ДанныеДляFTT_Not_OK_Units_Count = ПолучитьДанныеПоFTT_Not_OK_Units_Count(Запрос, ОффлайнДефекты);
	HTML_СтрокаFTT_Not_OK_Units_Count = FTT_Not_OK_Units_Count_ПолучитьHTMLСтрокуДляТаблицы(ДанныеДляFTT_Not_OK_Units_Count, КоличествоПериодов);
	ШаблонТаблицаПодДиаграммой = РаботаСHTMLСервер.HTMLЗаполнитьЗначение(ШаблонТаблицаПодДиаграммой, "Шаблон", HTML_СтрокаFTT_Not_OK_Units_Count, Истина);

	//С/1000
	ДанныеДляС1000 = ПолучитьДанныеПоС1000(Запрос, ОффлайнДефекты, ОнлайнДефекты);
	HTML_СтрокаС1000 = С1000_ПолучитьHTMLСтрокуДляТаблицы(ДанныеДляС1000, КоличествоПериодов);
	ШаблонТаблицаПодДиаграммой = РаботаСHTMLСервер.HTMLЗаполнитьЗначение(ШаблонТаблицаПодДиаграммой, "Шаблон", HTML_СтрокаС1000, Истина);
	
	//FR строка для таблицы под диаграммой
	ДанныеДляFR = ПолучитьДанныеПоFR(Запрос);
	HTML_СтрокаFR = FR_ПолучитьHTMLСтрокуДляТаблицы(ДанныеДляFR, КоличествоПериодов);
	ШаблонТаблицаПодДиаграммой = РаботаСHTMLСервер.HTMLЗаполнитьЗначение(ШаблонТаблицаПодДиаграммой, "Шаблон", HTML_СтрокаFR, Истина);
	
	//Score ASPA
	ДанныеДляScoreASPA = ПолучитьДанныеПоScoreASPA(Запрос, ОффлайнДефекты, ОнлайнДефекты);
	HTML_СтрокаScoreASPA = ScoreASPA_ПолучитьHTMLСтрокуДляТаблицы(ДанныеДляScoreASPA, КоличествоПериодов);
	ШаблонТаблицаПодДиаграммой = РаботаСHTMLСервер.HTMLЗаполнитьЗначение(ШаблонТаблицаПодДиаграммой, "Шаблон", HTML_СтрокаScoreASPA, Истина);
	
	Макет = РаботаСHTMLСервер.HTMLЗаполнитьЗначение(Макет, "TableData", ШаблонТаблицаПодДиаграммой, Истина);

	Если НомерКолонкиДляВыборкиТопДефектов > 0 Тогда
		
		ОтборДефектовДатаНачала = ТаблицаПериодов[НомерКолонкиДляВыборкиТопДефектов - 1].ДатаНачала; 
		ОтборДефектовДатаОкончания = ТаблицаПериодов[НомерКолонкиДляВыборкиТопДефектов - 1].ДатаОкончания;
		
	КонецЕсли;
	
	//Топ дефектов
	РезультатЗапросаТопДефектов = ПолучитьДанныеДляТаблицыТопДефектов(Запрос,  ОффлайнДефекты, ОнлайнДефекты, НомерКолонкиДляВыборкиТопДефектов, ОтборДефектовДатаНачала, ОтборДефектовДатаОкончания, КоличествоТопДефектов);
	HTML_ТаблицаТопДефектов = СформироватьТаблицуДляFTT(РезультатЗапросаТопДефектов, ТаблицаПериодов, НомерКолонкиДляВыборкиТопДефектов, КоличествоТопДефектов);
	Макет = РаботаСHTMLСервер.HTMLЗаполнитьЗначение(Макет, "TableData", HTML_ТаблицаТопДефектов, Истина);
	
	//Заполнение заголовков макета и тд
	
	//Заголовок
	Макет = РаботаСHTMLСервер.HTMLЗаполнитьЗначение(Макет, "TitleText", ВариантОтчета.Наименование + " " + Формат(ДатаОтчета, "Л=en_GB; ДЛФ= ДД"));
	//Путь, где лежит json, css для отрисовки диаграммы 
	Макет = РаботаСHTMLСервер.HTMLЗаполнитьЗначение(Макет, "PathToFileForDiagramm", ПутьКФайламДляОтрисовкиДиаграммы);
	
	//Макет = ЗаполнитьМакетДанными(Макет, Диаграмма, ТаблицаТопДефектов, ВариантОтчета, ДатаОтчета, ПутьКФайламДляОтрисовкиДиаграммы);
	
		
	Возврат Макет;
	
КонецФункции

Функция ПолучитьОписаниеПроизводственныхОтчетов() Экспорт
	
	СтруктураНастроек = Справочники.НастройкаОтчетов_MesReports.ПолучитьОписаниеПроизводственныхОтчетовПоУмолчанию();
	
	СтруктураНастроек.МассивТиповВариантовОтчета.Добавить(Тип("СправочникСсылка.ПоказателиУровняДефектности"));
	
	Возврат СтруктураНастроек;
	
КонецФункции

Функция ПолучитьЗапрос(ВариантОтчета, ТаблицаПериодов)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоказателиУровняДефектностиТочкиПроверкиКачества.Ссылка КАК ВариантОтчета,
	|	ПоказателиУровняДефектностиТочкиПроверкиКачества.ТочкаПроверкиКачества КАК ТочкаПроверкиКачества
	|ПОМЕСТИТЬ вт_ТочкиПроверкиКачества
	|ИЗ
	|	Справочник.ПоказателиУровняДефектности.ТочкиПроверкиКачества КАК ПоказателиУровняДефектностиТочкиПроверкиКачества
	|ГДЕ
	|	ПоказателиУровняДефектностиТочкиПроверкиКачества.Ссылка = &ВариантОтчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоказателиУровняДефектностиТочкиРегистрации.Ссылка КАК ВариантОтчета,
	|	ПоказателиУровняДефектностиТочкиРегистрации.ТочкаРегистрации КАК ТочкаРегистрации
	|ПОМЕСТИТЬ вт_ТочкиРегистрации
	|ИЗ
	|	Справочник.ПоказателиУровняДефектности.ТочкиРегистрации КАК ПоказателиУровняДефектностиТочкиРегистрации
	|ГДЕ
	|	ПоказателиУровняДефектностиТочкиРегистрации.Ссылка = &ВариантОтчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЗПериоды.НомерПериода КАК НомерПериода,
	|	ТЗПериоды.ДатаНачала КАК ДатаНачала,
	|	ТЗПериоды.ДатаОкончания КАК ДатаОкончания,
	|	ТЗПериоды.НазваниеПериода КАК НазваниеПериода,
	|	ТЗПериоды.ЧастьДаты1 КАК ЧастьДаты1,
	|	ТЗПериоды.ЧастьДаты2 КАК ЧастьДаты2
	|ПОМЕСТИТЬ Периоды
	|ИЗ
	|	&ТаблицаПериодов КАК ТЗПериоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Периоды.НомерПериода КАК НомерПериода,
	|	Периоды.ДатаНачала КАК ДатаНачала,
	|	Периоды.ДатаОкончания КАК ДатаОкончания,
	|	ДвижениеЗаказовОбороты.КоличествоПриход КАК КоличествоПриход,
	|	ДвижениеЗаказовОбороты.Заказ КАК Заказ
	|ПОМЕСТИТЬ Вт_Заказы_ПоПериодам
	|ИЗ
	|	Периоды КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДвижениеЗаказов.Обороты(
	|				&НачалоПериода,
	|				&ОкончаниеПериода,
	|				Регистратор,
	|				ТочкаРегистрации В
	|					(ВЫБРАТЬ
	|						вт_ТочкиРегистрации.ТочкаРегистрации КАК ТочкаРегистрации
	|					ИЗ
	|						вт_ТочкиРегистрации КАК вт_ТочкиРегистрации)) КАК ДвижениеЗаказовОбороты
	|		ПО Периоды.ДатаНачала <= ДвижениеЗаказовОбороты.Период
	|			И Периоды.ДатаОкончания >= ДвижениеЗаказовОбороты.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Вт_Заказы_ПоПериодам.Заказ КАК Заказ,
	|	Вт_Заказы_ПоПериодам.КоличествоПриход КАК КоличествоПриход,
	|	Вт_Заказы_ПоПериодам.ДатаОкончания КАК ДатаОкончания,
	|	Вт_Заказы_ПоПериодам.ДатаНачала КАК ДатаНачала,
	|	КонсерныОбороты.Консерн КАК ОперацияПоКачеству,
	|	КонсерныОбороты.Консерн.Отремонтирован КАК КонсернОтремонтирован,
	|	КонсерныОбороты.КоличествоПриход КАК КоличествоПриходДефектов,
	|	КонсерныОбороты.Консерн.СтоимостьКонсернаНовый.Стоимость КАК СтоимостьКонсерна
	|ПОМЕСТИТЬ вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами
	|ИЗ
	|	Вт_Заказы_ПоПериодам КАК Вт_Заказы_ПоПериодам
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.Консерны.Обороты(
	|				&НачалоПериода,
	|				&ОкончаниеПериода,
	|				Регистратор,
	|				Заказ В
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							Вт_Заказы_ПоПериодам.Заказ КАК Заказ
	|						ИЗ
	|							Вт_Заказы_ПоПериодам КАК Вт_Заказы_ПоПериодам)
	|					И Консерн.ТочкаПроверкиКачества В
	|						(ВЫБРАТЬ
	|							вт_ТочкиПроверкиКачества.ТочкаПроверкиКачества КАК ТочкаПроверкиКачества
	|						ИЗ
	|							вт_ТочкиПроверкиКачества КАК вт_ТочкиПроверкиКачества)
	|					И &ОтборПоОтветственным
	|					И &ОтборПоДефектам
	|					И &ОтборПоИнспектируемымЭлементам) КАК КонсерныОбороты
	|		ПО Вт_Заказы_ПоПериодам.ДатаНачала <= КонсерныОбороты.Период
	|			И Вт_Заказы_ПоПериодам.ДатаОкончания >= КонсерныОбороты.Период
	|			И Вт_Заказы_ПоПериодам.Заказ = КонсерныОбороты.Заказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Вт_Заказы_ПоПериодам.КоличествоПриход КАК КоличествоПриход,
	|	Вт_Заказы_ПоПериодам.Заказ КАК Заказ,
	|	Вт_Заказы_ПоПериодам.ДатаОкончания КАК ДатаОкончания,
	|	Вт_Заказы_ПоПериодам.ДатаНачала КАК ДатаНачала
	|ПОМЕСТИТЬ вт_Заказы_Ок
	|ИЗ
	|	Вт_Заказы_ПоПериодам КАК Вт_Заказы_ПоПериодам
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами КАК вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами
	|		ПО (вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ДатаОкончания = Вт_Заказы_ПоПериодам.ДатаОкончания)
	|			И (вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ДатаНачала = Вт_Заказы_ПоПериодам.ДатаНачала)
	|			И (вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.Заказ = Вт_Заказы_ПоПериодам.Заказ)
	|ГДЕ
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ОперацияПоКачеству ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.КоличествоПриход КАК КоличествоПриход,
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.Заказ КАК Заказ,
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.КонсернОтремонтирован КАК КонсернОтремонтирован,
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ДатаНачала КАК ДатаНачала,
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ вт_Заказы_Только_С_ОнлайнДефектами
	|ИЗ
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами КАК вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами
	|ГДЕ
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.КонсернОтремонтирован = ИСТИНА
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.КоличествоПриход КАК КоличествоПриход,
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.Заказ КАК Заказ,
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.КонсернОтремонтирован КАК КонсернОтремонтирован,
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ДатаНачала КАК ДатаНачала,
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ вт_Заказы_Только_С_ОффлайнДефектами
	|ИЗ
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами КАК вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами
	|ГДЕ
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.КонсернОтремонтирован = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_Заказы_Только_С_ОнлайнДефектами.КоличествоПриход КАК КоличествоПриход,
	|	вт_Заказы_Только_С_ОнлайнДефектами.Заказ КАК Заказ,
	|	вт_Заказы_Только_С_ОнлайнДефектами.КонсернОтремонтирован КАК КонсернОтремонтирован,
	|	вт_Заказы_Только_С_ОнлайнДефектами.ДатаОкончания КАК ДатаОкончания,
	|	вт_Заказы_Только_С_ОнлайнДефектами.ДатаНачала КАК ДатаНачала
	|ПОМЕСТИТЬ вт_Заказы_Онлайдефект_ПоКоторымНеБылоОффлайнДефектов
	|ИЗ
	|	вт_Заказы_Только_С_ОнлайнДефектами КАК вт_Заказы_Только_С_ОнлайнДефектами
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_Заказы_Только_С_ОффлайнДефектами КАК вт_Заказы_Только_С_ОффлайнДефектами
	|		ПО вт_Заказы_Только_С_ОнлайнДефектами.ДатаНачала = вт_Заказы_Только_С_ОффлайнДефектами.ДатаНачала
	|			И вт_Заказы_Только_С_ОнлайнДефектами.ДатаОкончания = вт_Заказы_Только_С_ОффлайнДефектами.ДатаОкончания
	|			И вт_Заказы_Только_С_ОнлайнДефектами.Заказ = вт_Заказы_Только_С_ОффлайнДефектами.Заказ
	|ГДЕ
	|	вт_Заказы_Только_С_ОффлайнДефектами.Заказ ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Вт_Заказы_ПоПериодам.ДатаОкончания КАК ДатаОкончания,
	|	Вт_Заказы_ПоПериодам.ДатаНачала КАК ДатаНачала,
	|	СУММА(Вт_Заказы_ПоПериодам.КоличествоПриход) КАК ОбщееКоличествоЗаказов
	|ПОМЕСТИТЬ вт_ВсеЗаказы
	|ИЗ
	|	Вт_Заказы_ПоПериодам КАК Вт_Заказы_ПоПериодам
	|
	|СГРУППИРОВАТЬ ПО
	|	Вт_Заказы_ПоПериодам.ДатаОкончания,
	|	Вт_Заказы_ПоПериодам.ДатаНачала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(вт_Заказы_Ок.КоличествоПриход) КАК КоличествоПриход,
	|	вт_Заказы_Ок.ДатаНачала КАК ДатаНачала,
	|	вт_Заказы_Ок.ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ вт_Заказы_Ок_Онлайн_ОффлайнДефекты
	|ИЗ
	|	вт_Заказы_Ок КАК вт_Заказы_Ок
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_Заказы_Ок.ДатаОкончания,
	|	вт_Заказы_Ок.ДатаНачала
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(вт_Заказы_Онлайдефект_ПоКоторымНеБылоОффлайнДефектов.КоличествоПриход),
	|	вт_Заказы_Онлайдефект_ПоКоторымНеБылоОффлайнДефектов.ДатаНачала,
	|	вт_Заказы_Онлайдефект_ПоКоторымНеБылоОффлайнДефектов.ДатаОкончания
	|ИЗ
	|	вт_Заказы_Онлайдефект_ПоКоторымНеБылоОффлайнДефектов КАК вт_Заказы_Онлайдефект_ПоКоторымНеБылоОффлайнДефектов
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_Заказы_Онлайдефект_ПоКоторымНеБылоОффлайнДефектов.ДатаОкончания,
	|	вт_Заказы_Онлайдефект_ПоКоторымНеБылоОффлайнДефектов.ДатаНачала
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(вт_Заказы_Только_С_ОффлайнДефектами.КоличествоПриход),
	|	вт_Заказы_Только_С_ОффлайнДефектами.ДатаНачала,
	|	вт_Заказы_Только_С_ОффлайнДефектами.ДатаОкончания
	|ИЗ
	|	вт_Заказы_Только_С_ОффлайнДефектами КАК вт_Заказы_Только_С_ОффлайнДефектами
	|ГДЕ
	|	НЕ &ФильтрОффлайнДефекты
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_Заказы_Только_С_ОффлайнДефектами.ДатаОкончания,
	|	вт_Заказы_Только_С_ОффлайнДефектами.ДатаНачала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(вт_Заказы_Ок_Онлайн_ОффлайнДефекты.КоличествоПриход) КАК КоличествоПриход,
	|	вт_Заказы_Ок_Онлайн_ОффлайнДефекты.ДатаНачала КАК ДатаНачала,
	|	вт_Заказы_Ок_Онлайн_ОффлайнДефекты.ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ вт_Заказы_Ок_Онлайн_ОффлайнДефекты_Финальная
	|ИЗ
	|	вт_Заказы_Ок_Онлайн_ОффлайнДефекты КАК вт_Заказы_Ок_Онлайн_ОффлайнДефекты
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_Заказы_Ок_Онлайн_ОффлайнДефекты.ДатаОкончания,
	|	вт_Заказы_Ок_Онлайн_ОффлайнДефекты.ДатаНачала";

		
	Запрос.УстановитьПараметр("ВариантОтчета", ВариантОтчета);
	Запрос.УстановитьПараметр("ТаблицаПериодов", ТаблицаПериодов);
	
	ТаблицаПериодов.Сортировать("ДатаОкончания Возр");
	ДатаНачала = ТаблицаПериодов[0].ДатаНачала;
	ДатаОкончания = ТаблицаПериодов[ТаблицаПериодов.Количество()-1].ДатаОкончания;
	
	Запрос.УстановитьПараметр("НачалоПериода", ДатаНачала);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ДатаОкончания);
	
	//Отбор таб часть ОтветственныеЗаДефект
	Если ВариантОтчета.ОтветственныеЗаДефект.Количество() > 0 Тогда
		ОтборПоОтветственным = ПолучитьТекстДляОтбораПоОтветственным();
	Иначе
		ОтборПоОтветственным = "Истина"
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоОтветственным", ОтборПоОтветственным);  
	
	//Отбор таб часть Дефекты
	Если ВариантОтчета.Дефекты.Количество() > 0 Тогда
		ОтборПоДефектам = ПолучитьТекстДляОтбораПоДефектам();
	Иначе
		ОтборПоДефектам = "Истина"
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоДефектам", ОтборПоДефектам);  

	//Отбор таб часть Инспектируемые элементы
	Если ВариантОтчета.ИнспектируемыеЭлементы.Количество() > 0 Тогда
		ОтборПоИнспектируемымЭлементам = ПолучитьТекстДляОтбораПоИнспектируемымЭлементам();
	Иначе
		ОтборПоИнспектируемымЭлементам = "Истина"
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоИнспектируемымЭлементам", ОтборПоИнспектируемымЭлементам);  
	
	//Отбор онлайн оффлайн дефекты
	Запрос.УстановитьПараметр("ФильтрОнлайнДефекты", ВариантОтчета.ОнлайнДефекты);
	Запрос.УстановитьПараметр("ФильтрОффлайнДефекты", ВариантОтчета.ОффлайнДефекты);
	
	Запрос.Выполнить();
	 
	Возврат Запрос;
		
КонецФункции

#Область FTT

Функция СформироватьДанныеДляДиаграммы(ДанныеДляОтчета)
	
	//пример
	//{
	//"name": " 2020",
	//"y": 33.333333,
	//"y": 33.333333,
	//"drilldown": "null"
	//},
	
	Текст = "";
	Запись  = Новый ЗаписьJSON;
	Запись.УстановитьСтроку();
	Запись.ЗаписатьНачалоМассива();
	Для каждого стр из ДанныеДляОтчета Цикл 
		
		Запись.ЗаписатьНачалоОбъекта();
		Запись.ЗаписатьИмяСвойства("name");
		Запись.ЗаписатьЗначение(стр.ЧастьДаты1 + " " + стр.ЧастьДаты2 + " " + стр.НазваниеПериода);
		
		Запись.ЗаписатьИмяСвойства("y");
		Запись.ЗаписатьЗначение(стр.FTT);
		
		//Запись.ЗаписатьИмяСвойства("y");
		//Запись.ЗаписатьЗначение(стр.FTT);
		
		Запись.ЗаписатьИмяСвойства("drilldown");
		Запись.ЗаписатьЗначение("null");
		
		Запись.ЗаписатьКонецОбъекта();
		
	КонецЦикла;
	Запись.ЗаписатьКонецМассива();

	СтрокаJSON = Запись.Закрыть();

	Возврат СтрокаJSON;
КонецФункции

Функция ПолучитьДанныеПоFTT(Запрос)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	вт_ВсеЗаказы.ДатаНачала КАК ДатаНачала,
	|	вт_ВсеЗаказы.ДатаОкончания КАК ДатаОкончания,
	|	вт_Заказы_Ок_Онлайн_ОффлайнДефекты_Финальная.КоличествоПриход / вт_ВсеЗаказы.ОбщееКоличествоЗаказов * 100 КАК FTT
	|ПОМЕСТИТЬ вт_Вычисленный_FTT
	|ИЗ
	|	вт_ВсеЗаказы КАК вт_ВсеЗаказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_Заказы_Ок_Онлайн_ОффлайнДефекты_Финальная КАК вт_Заказы_Ок_Онлайн_ОффлайнДефекты_Финальная
	|		ПО вт_ВсеЗаказы.ДатаНачала = вт_Заказы_Ок_Онлайн_ОффлайнДефекты_Финальная.ДатаНачала
	|			И вт_ВсеЗаказы.ДатаОкончания = вт_Заказы_Ок_Онлайн_ОффлайнДефекты_Финальная.ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.НомерПериода КАК НомерПериода,
	|	Периоды.ДатаНачала КАК ДатаНачала,
	|	Периоды.ДатаОкончания КАК ДатаОкончания,
	|	Периоды.НазваниеПериода КАК НазваниеПериода,
	|	Периоды.ЧастьДаты1 КАК ЧастьДаты1,
	|	Периоды.ЧастьДаты2 КАК ЧастьДаты2,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(вт_Вычисленный_FTT.FTT, 0) КАК ЧИСЛО(10, 2)) КАК FTT
	|ИЗ
	|	Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_Вычисленный_FTT КАК вт_Вычисленный_FTT
	|		ПО Периоды.ДатаОкончания = вт_Вычисленный_FTT.ДатаОкончания
	|			И Периоды.ДатаНачала = вт_Вычисленный_FTT.ДатаНачала
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_Вычисленный_FTT";
	
	Результат = Запрос.Выполнить();
	Таблица = Результат.Выгрузить();
	
	Возврат Таблица;
	
КонецФункции

Функция FTT_ПолучитьHTMLСтрокуДляТаблицы(ДанныеДляFTT, КоличествоПериодов);
	
	Таблица = "";
	//Если дефектов не было, просто выведем пустую таблицу
	Если ДанныеДляFTT.Количество() = 0 Тогда
		Таблица = Таблица + "<tr>" + Символы.ПС;
		Таблица = Таблица + "<td>" + "FTT" + "</td>" + Символы.ПС;
		
		Для номер = 1 по КоличествоПериодов Цикл
			
			Таблица = Таблица + "<td>" + 0 + "</td>" + Символы.ПС;
			
		КонецЦикла;
		
		Возврат Таблица;
		Таблица = Таблица + "</tr>" + Символы.ПС;
	КонецЕсли;
	
	Таблица = Таблица + "<tr>" + Символы.ПС;
	Таблица = Таблица + "<td>" + "FTT" + "</td>" + Символы.ПС;
	//Заполнение таблицы
	Для каждого стр из ДанныеДляFTT Цикл
		
		Таблица = Таблица + "<td>" + стр.FTT + "</td>" + Символы.ПС;
		
	КонецЦикла;
	
	Таблица = Таблица + "</tr>" + Символы.ПС;
	
	Возврат Таблица;

КонецФункции
	
#КонецОбласти 

#Область FR

Функция ПолучитьДанныеПоFR(Запрос)
	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(вт_Заказы_Ок.КоличествоПриход) КАК КоличествоПриход,
	|	вт_Заказы_Ок.ДатаОкончания КАК ДатаОкончания,
	|	вт_Заказы_Ок.ДатаНачала КАК ДатаНачала
	|ПОМЕСТИТЬ вт_Заказы_ОК_Финал
	|ИЗ
	|	вт_Заказы_Ок КАК вт_Заказы_Ок
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_Заказы_Ок.ДатаОкончания,
	|	вт_Заказы_Ок.ДатаНачала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_ВсеЗаказы.ДатаНачала КАК ДатаНачала,
	|	вт_ВсеЗаказы.ДатаОкончания КАК ДатаОкончания,
	|	вт_Заказы_ОК_Финал.КоличествоПриход / вт_ВсеЗаказы.ОбщееКоличествоЗаказов * 100 КАК FR
	|ПОМЕСТИТЬ вт_Вычисленный_FR
	|ИЗ
	|	вт_ВсеЗаказы КАК вт_ВсеЗаказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_Заказы_ОК_Финал КАК вт_Заказы_ОК_Финал
	|		ПО вт_ВсеЗаказы.ДатаНачала = вт_Заказы_ОК_Финал.ДатаНачала
	|			И вт_ВсеЗаказы.ДатаОкончания = вт_Заказы_ОК_Финал.ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.НомерПериода КАК НомерПериода,
	|	Периоды.ДатаНачала КАК ДатаНачала,
	|	Периоды.ДатаОкончания КАК ДатаОкончания,
	|	Периоды.НазваниеПериода КАК НазваниеПериода,
	|	Периоды.ЧастьДаты1 КАК ЧастьДаты1,
	|	Периоды.ЧастьДаты2 КАК ЧастьДаты2,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(вт_Вычисленный_FR.FR, 0) КАК ЧИСЛО(10, 2)) КАК FR
	|ИЗ
	|	Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_Вычисленный_FR КАК вт_Вычисленный_FR
	|		ПО Периоды.ДатаОкончания = вт_Вычисленный_FR.ДатаОкончания
	|			И Периоды.ДатаНачала = вт_Вычисленный_FR.ДатаНачала
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерПериода";
	
	Результат = Запрос.Выполнить();
	Таблица = Результат.Выгрузить();
	
	Возврат Таблица;

	
КонецФункции

Функция FR_ПолучитьHTMLСтрокуДляТаблицы(ДанныеДляFR, КоличествоПериодов);
	
	Таблица = "";
	//Если дефектов не было, просто выведем пустую таблицу
	Если ДанныеДляFR.Количество() = 0 Тогда
		Таблица = Таблица + "<tr>" + Символы.ПС;
		Таблица = Таблица + "<td>" + "FR" + "</td>" + Символы.ПС;
		
		Для номер = 1 по КоличествоПериодов Цикл
			
			Таблица = Таблица + "<td>" + 0 + "</td>" + Символы.ПС;
			
		КонецЦикла;
		
		Таблица = Таблица + "</tr>" + Символы.ПС;
		
		Возврат Таблица;
	КонецЕсли;
	
	Таблица = Таблица + "<tr>" + Символы.ПС;
	Таблица = Таблица + "<td>" + "FR" + "</td>" + Символы.ПС;
	//Заполнение таблицы
	Для каждого стр из ДанныеДляFR Цикл
		
		Таблица = Таблица + "<td>" + стр.FR + "</td>" + Символы.ПС;
		
	КонецЦикла;
	
	Таблица = Таблица + "</tr>" + Символы.ПС;
	
	Возврат Таблица;
	
КонецФункции

#КонецОбласти 

#Область SampleSize

Функция ПолучитьДанныеПоSampleSize(Запрос);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Периоды.НомерПериода КАК НомерПериода,
	|	Периоды.ДатаНачала КАК ДатаНачала,
	|	Периоды.ДатаОкончания КАК ДатаОкончания,
	|	Периоды.НазваниеПериода КАК НазваниеПериода,
	|	Периоды.ЧастьДаты1 КАК ЧастьДаты1,
	|	Периоды.ЧастьДаты2 КАК ЧастьДаты2,
	|	ЕСТЬNULL(вт_ВсеЗаказы.ОбщееКоличествоЗаказов, 0) КАК КоличествоЗаказов
	|ИЗ
	|	Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ВсеЗаказы КАК вт_ВсеЗаказы
	|		ПО Периоды.ДатаНачала = вт_ВсеЗаказы.ДатаНачала
	|			И Периоды.ДатаОкончания = вт_ВсеЗаказы.ДатаОкончания
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерПериода";
	
	Результат = Запрос.Выполнить();
	Таблица = Результат.Выгрузить();
	
	Возврат Таблица;
	
КонецФункции

Функция SampleSize_ПолучитьHTMLСтрокуДляТаблицы(ДанныеДляSampleSize, КоличествоПериодов)
	
	Таблица = "";
	//Если дефектов не было, просто выведем пустую таблицу
	Если ДанныеДляSampleSize.Количество() = 0 Тогда
		Таблица = Таблица + "<tr>" + Символы.ПС;
		Таблица = Таблица + "<td>" + "SampleSize" + "</td>" + Символы.ПС;
		
		Для номер = 1 по КоличествоПериодов Цикл
			
			Таблица = Таблица + "<td>" + 0 + "</td>" + Символы.ПС;
			
		КонецЦикла;
		
		Таблица = Таблица + "</tr>" + Символы.ПС;
		
		Возврат Таблица;
		
	КонецЕсли;
	
	Таблица = Таблица + "<tr>" + Символы.ПС;
	Таблица = Таблица + "<td>" + "SampleSize" + "</td>" + Символы.ПС;
	//Заполнение таблицы
	Для каждого стр из ДанныеДляSampleSize Цикл
		
		Таблица = Таблица + "<td>" + стр.КоличествоЗаказов + "</td>" + Символы.ПС;
		
	КонецЦикла;
	
	Таблица = Таблица + "</tr>" + Символы.ПС;
	
	Возврат Таблица;

КонецФункции
#КонецОбласти 

#Область ТопДефектов

Функция ПолучитьДанныеДляТаблицыТопДефектов(Запрос,  ОффлайнДефекты, ОнлайнДефекты, НомерКолонкиДляВыборкиТопДефектов, ОтборДефектовДатаНачала, ОтборДефектовДатаОкончания, КоличествоТопДефектов)
	
	РезультатЗапроса = ПолучитьДанныеИзЗапросаДляТопДефектов(Запрос,  ОффлайнДефекты, ОнлайнДефекты, НомерКолонкиДляВыборкиТопДефектов, ОтборДефектовДатаНачала, ОтборДефектовДатаОкончания, КоличествоТопДефектов);
	
	Возврат РезультатЗапроса;
	
КонецФункции

Функция ПолучитьДанныеИзЗапросаДляТопДефектов(Запрос,  ОффлайнДефекты, ОнлайнДефекты, НомерКолонкиДляВыборкиТопДефектов = 0, ОтборДефектовДатаНачала, ОтборДефектовДатаОкончания, КоличествоТопДефектов = 15);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.КоличествоПриходДефектов) КАК КоличествоПриходДефектов,
	|	ВЫРАЗИТЬ(вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ОперацияПоКачеству.Дефект КАК Справочник.Дефекты) КАК Дефект,
	|	ВЫРАЗИТЬ(вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ОперацияПоКачеству.ИнспектируемыйЭлемент КАК Справочник.ИнспектируемыеЭлементы) КАК ИнспектируемыйЭлемент,
	|	ВЫРАЗИТЬ(вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ОперацияПоКачеству.ПозицияА КАК Справочник.ВариантыПозицииA) КАК ПозицияА,
	|	ВЫРАЗИТЬ(вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ОперацияПоКачеству.ПозицияB КАК Справочник.ВариантыПозицииB) КАК ПозицияB,
	|	ВЫРАЗИТЬ(вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ОперацияПоКачеству.ПозицияC КАК Справочник.ВариантыПозицииC) КАК ПозицияC,
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ДатаОкончания КАК ДатаОкончания,
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ДатаНачала КАК ДатаНачала
	|ПОМЕСТИТЬ вт_ЗаказыСДефектамиПослеОтбора
	|ИЗ
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами КАК вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами
	|ГДЕ
	|	&КонсернОтремонтирован
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ОперацияПоКачеству.Дефект,
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ОперацияПоКачеству.ИнспектируемыйЭлемент,
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ОперацияПоКачеству.ПозицияА,
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ОперацияПоКачеству.ПозицияB,
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ОперацияПоКачеству.ПозицияC,
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ДатаОкончания,
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ДатаНачала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 15
	|	СУММА(вт_ЗаказыСДефектамиПослеОтбора.КоличествоПриходДефектов) КАК КоличествоПриходДефектов,
	|	вт_ЗаказыСДефектамиПослеОтбора.Дефект КАК Дефект,
	|	вт_ЗаказыСДефектамиПослеОтбора.ИнспектируемыйЭлемент КАК ИнспектируемыйЭлемент,
	|	вт_ЗаказыСДефектамиПослеОтбора.ПозицияА КАК ПозицияА,
	|	вт_ЗаказыСДефектамиПослеОтбора.ПозицияB КАК ПозицияB,
	|	вт_ЗаказыСДефектамиПослеОтбора.ПозицияC КАК ПозицияC
	|ПОМЕСТИТЬ вт_КоличествоДефектов_ПоПериодам
	|ИЗ
	|	вт_ЗаказыСДефектамиПослеОтбора КАК вт_ЗаказыСДефектамиПослеОтбора
	|ГДЕ
	|	&ОтборПоПериоду
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_ЗаказыСДефектамиПослеОтбора.Дефект,
	|	вт_ЗаказыСДефектамиПослеОтбора.ИнспектируемыйЭлемент,
	|	вт_ЗаказыСДефектамиПослеОтбора.ПозицияА,
	|	вт_ЗаказыСДефектамиПослеОтбора.ПозицияB,
	|	вт_ЗаказыСДефектамиПослеОтбора.ПозицияC
	|
	|УПОРЯДОЧИТЬ ПО
	|	КоличествоПриходДефектов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.ДатаОкончания КАК ДатаОкончания,
	|	Периоды.НомерПериода КАК НомерПериода,
	|	Периоды.ДатаНачала КАК ДатаНачала,
	|	вт_Дефекты.Дефект КАК Дефект,
	|	вт_Дефекты.ИнспектируемыйЭлемент КАК ИнспектируемыйЭлемент,
	|	вт_Дефекты.ПозицияА КАК ПозицияА,
	|	вт_Дефекты.ПозицияB КАК ПозицияB,
	|	вт_Дефекты.ПозицияC КАК ПозицияC
	|ПОМЕСТИТЬ вт_Периоды_Дефекты
	|ИЗ
	|	Периоды КАК Периоды,
	|	вт_КоличествоДефектов_ПоПериодам КАК вт_Дефекты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_Периоды_Дефекты.ДатаОкончания КАК ДатаОкончания,
	|	вт_Периоды_Дефекты.НомерПериода КАК НомерПериода,
	|	вт_Периоды_Дефекты.ДатаНачала КАК ДатаНачала,
	|	вт_Периоды_Дефекты.Дефект КАК Дефект,
	|	вт_Периоды_Дефекты.ИнспектируемыйЭлемент КАК ИнспектируемыйЭлемент,
	|	вт_Периоды_Дефекты.ПозицияА КАК ПозицияА,
	|	вт_Периоды_Дефекты.ПозицияB КАК ПозицияB,
	|	вт_Периоды_Дефекты.ПозицияC КАК ПозицияC,
	|	вт_Периоды_Дефекты.ИнспектируемыйЭлемент.Наименование + ""!@#$"" + вт_Периоды_Дефекты.Дефект.Наименование + ""!@#$"" + ЕСТЬNULL(вт_Периоды_Дефекты.ПозицияА.Наименование, """") + ""!@#$"" + ЕСТЬNULL(вт_Периоды_Дефекты.ПозицияB.Наименование, """") + ""!@#$"" + ЕСТЬNULL(вт_Периоды_Дефекты.ПозицияC.Наименование, """") КАК НаименованиеКонсерна
	|ПОМЕСТИТЬ вт_Периоды_Дефекты_С_Наименованием
	|ИЗ
	|	вт_Периоды_Дефекты КАК вт_Периоды_Дефекты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_Периоды_Дефекты.ДатаОкончания КАК ДатаОкончания,
	|	вт_Периоды_Дефекты.НомерПериода КАК НомерПериода,
	|	вт_Периоды_Дефекты.ДатаНачала КАК ДатаНачала,
	|	Периоды.НазваниеПериода КАК НазваниеПериода,
	|	Периоды.ЧастьДаты1 КАК ЧастьДаты1,
	|	Периоды.ЧастьДаты2 КАК ЧастьДаты2,
	|	ЕСТЬNULL(вт_ЗаказыСДефектамиПослеОтбора.КоличествоПриходДефектов, 0) КАК КоличествоПриходДефектов,
	|	вт_Периоды_Дефекты.Дефект КАК Дефект,
	|	вт_Периоды_Дефекты.ИнспектируемыйЭлемент КАК ИнспектируемыйЭлемент,
	|	вт_Периоды_Дефекты.ПозицияА КАК ПозицияА,
	|	вт_Периоды_Дефекты.ПозицияB КАК ПозицияB,
	|	вт_Периоды_Дефекты.ПозицияC КАК ПозицияC,
	|	вт_Периоды_Дефекты.НаименованиеКонсерна КАК НаименованиеКонсерна
	|ИЗ
	|	вт_Периоды_Дефекты_С_Наименованием КАК вт_Периоды_Дефекты
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ЗаказыСДефектамиПослеОтбора КАК вт_ЗаказыСДефектамиПослеОтбора
	|		ПО вт_Периоды_Дефекты.ДатаОкончания = вт_ЗаказыСДефектамиПослеОтбора.ДатаОкончания
	|			И вт_Периоды_Дефекты.ДатаНачала = вт_ЗаказыСДефектамиПослеОтбора.ДатаНачала
	|			И вт_Периоды_Дефекты.Дефект = вт_ЗаказыСДефектамиПослеОтбора.Дефект
	|			И вт_Периоды_Дефекты.ИнспектируемыйЭлемент = вт_ЗаказыСДефектамиПослеОтбора.ИнспектируемыйЭлемент
	|			И вт_Периоды_Дефекты.ПозицияА = вт_ЗаказыСДефектамиПослеОтбора.ПозицияА
	|			И вт_Периоды_Дефекты.ПозицияB = вт_ЗаказыСДефектамиПослеОтбора.ПозицияB
	|			И вт_Периоды_Дефекты.ПозицияC = вт_ЗаказыСДефектамиПослеОтбора.ПозицияC
	|		ЛЕВОЕ СОЕДИНЕНИЕ Периоды КАК Периоды
	|		ПО вт_Периоды_Дефекты.ДатаОкончания = Периоды.ДатаОкончания
	|			И вт_Периоды_Дефекты.ДатаНачала = Периоды.ДатаНачала
	|			И вт_Периоды_Дефекты.НомерПериода = Периоды.НомерПериода
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерПериода,
	|	КоличествоПриходДефектов УБЫВ
	|ИТОГИ
	|	СУММА(КоличествоПриходДефектов)
	|ПО
	|	НаименованиеКонсерна
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_ЗаказыСДефектамиПослеОтбора
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_КоличествоДефектов_ПоПериодам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_Периоды_Дефекты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_Периоды_Дефекты_С_Наименованием";
	
	Если ЗначениеЗаполнено(НомерКолонкиДляВыборкиТопДефектов) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоПериоду", "
		|	вт_ЗаказыСДефектамиПослеОтбора.ДатаНачала >= &ДатаНачала
		|	И вт_ЗаказыСДефектамиПослеОтбора.ДатаОкончания <= &ДатаОкончания");
		
		Запрос.УстановитьПараметр("ДатаНачала", ОтборДефектовДатаНачала);
		Запрос.УстановитьПараметр("ДатаОкончания", ОтборДефектовДатаОкончания);

	Иначе
		Запрос.УстановитьПараметр("ОтборПоПериоду", Истина);
	КонецЕсли;
	
	Если ОффлайнДефекты И ОнлайнДефекты Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&КонсернОтремонтирован", "ИСТИНА");  
	ИначеЕсли ОнлайнДефекты и НЕ ОффлайнДефекты Тогда 
		ОтборПоДефектам = "вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.КонсернОтремонтирован = ИСТИНА";

		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&КонсернОтремонтирован", ОтборПоДефектам);
	Иначе //Только оффлайн
		ОтборПоДефектам = "вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.КонсернОтремонтирован = ЛОЖЬ";

		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&КонсернОтремонтирован", ОтборПоДефектам);
		
	КонецЕсли;
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 15", "ПЕРВЫЕ " + Формат(КоличествоТопДефектов,"ЧГ=")); 
	
	Результат = Запрос.Выполнить();
	
	Возврат Результат;
	
КонецФункции

Функция СформироватьТаблицуДляFTT(РезультатЗапросаТопДефектов, ТаблицаПериодов, НомерКолонкиДляОкрашивания, КоличествоТопДефектов)
	
	Таблица = "";

	Таблица = Таблица + "<table style=""width:100%"">" + Символы.ПС;
	Таблица = Таблица + "<caption>Most " + Строка(КоличествоТопДефектов) + " defects</caption>" + Символы.ПС;
	
	//Выведем шапку таблицы из периодов
	ТаблицаПериодов.Сортировать("НомерПериода");	
	Таблица = Таблица + "<tr>" + Символы.ПС;  //с помощью тега добавляем строку
	Таблица = Таблица + "<td>" + "Наименование дефекта" + "</td>" + Символы.ПС; //добавляем колонку
	Для каждого стр из ТаблицаПериодов Цикл
		
		Таблица = Таблица + "<td>" + стр.ЧастьДаты1 + " " + стр.ЧастьДаты2 + " " + стр.НазваниеПериода + "</td>" + Символы.ПС;
		
	КонецЦикла;
	Таблица = Таблица + "</tr>" + Символы.ПС;
	               
	//Если дефектов не было, просто выведем пустую таблицу
	Если РезультатЗапросаТопДефектов.Пустой() Тогда
		Таблица = Таблица + "<tr>" + Символы.ПС;
		Таблица = Таблица + "<td>" + "" + "</td>" + Символы.ПС;

		СчетчикПериодов = 1;
		Для номер = 1 по ТаблицаПериодов.Количество() Цикл
			
			Если СчетчикПериодов =  НомерКолонкиДляОкрашивания Тогда 
				Таблица = Таблица + "<td bgcolor=""#ffff00"">" + 0 + "</td>" + Символы.ПС;
			Иначе
				Таблица = Таблица + "<td>" + 0 + "</td>" + Символы.ПС;
			КонецЕсли;
			СчетчикПериодов = СчетчикПериодов + 1;
			
		КонецЦикла;
		
		Возврат Таблица;
		Таблица = Таблица + "</tr>" + Символы.ПС;
	КонецЕсли;
	
	//Заполнение таблицы дефектами и их количеством
	Выборка = РезультатЗапросаТопДефектов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		Таблица = Таблица + "<tr>" + Символы.ПС;
		
		ИмяПоля = СтрЗаменить(Выборка.НаименованиеКонсерна, Символ(160), "");
		ИмяПоля = СтрЗаменить(ИмяПоля, "!@#$", " ");

		Таблица = Таблица + "<td>" + ИмяПоля + "</td>" + Символы.ПС;

		ДетальныеЗаписи = Выборка.Выбрать();
		СчетчикПериодов = 1;
		Пока ДетальныеЗаписи.Следующий() Цикл
			
			Если СчетчикПериодов =  НомерКолонкиДляОкрашивания Тогда 
				Таблица = Таблица + "<td bgcolor=""#ffff00"">" + ДетальныеЗаписи.КоличествоПриходДефектов + "</td>" + Символы.ПС;
			Иначе
				Таблица = Таблица + "<td>" + ДетальныеЗаписи.КоличествоПриходДефектов + "</td>" + Символы.ПС;
			КонецЕсли;
			СчетчикПериодов = СчетчикПериодов + 1;
		КонецЦикла;
		
		Таблица = Таблица + "</tr>" + Символы.ПС;
		
	КонецЦикла;
	
	Таблица = Таблица + "</table>" + Символы.ПС;
	
	Возврат Таблица;
	
КонецФункции

#КонецОбласти 

#Область С1000

Функция ПолучитьДанныеПоС1000(Запрос, ОффлайнДефекты, ОнлайнДефекты)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ДатаНачала КАК ДатаНачала,
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ДатаОкончания КАК ДатаОкончания,
	|	СУММА(вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.КоличествоПриход) КАК КоличествоПриход
	|ПОМЕСТИТЬ вт_ОффлайнДефекты_Сгруппированные
	|ИЗ
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами КАК вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами
	|ГДЕ
	|	&КонсернОтремонтирован
	|   
	|СГРУППИРОВАТЬ ПО
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ДатаОкончания,
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ДатаНачала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_ВсеЗаказы.ДатаОкончания КАК ДатаОкончания,
	|	вт_ВсеЗаказы.ДатаНачала КАК ДатаНачала,
	|	вт_ОффлайнДефекты_Сгруппированные.КоличествоПриход / вт_ВсеЗаказы.ОбщееКоличествоЗаказов * 1000 КАК С1000
	|ПОМЕСТИТЬ вт_С1000
	|ИЗ
	|	вт_ВсеЗаказы КАК вт_ВсеЗаказы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_ОффлайнДефекты_Сгруппированные КАК вт_ОффлайнДефекты_Сгруппированные
	|		ПО вт_ВсеЗаказы.ДатаНачала = вт_ОффлайнДефекты_Сгруппированные.ДатаНачала
	|			И вт_ВсеЗаказы.ДатаОкончания = вт_ОффлайнДефекты_Сгруппированные.ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.НомерПериода КАК НомерПериода,
	|	Периоды.ДатаНачала КАК ДатаНачала,
	|	Периоды.ДатаОкончания КАК ДатаОкончания,
	|	Периоды.НазваниеПериода КАК НазваниеПериода,
	|	Периоды.ЧастьДаты1 КАК ЧастьДаты1,
	|	Периоды.ЧастьДаты2 КАК ЧастьДаты2,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(вт_С1000.С1000, 0) КАК ЧИСЛО(10, 2)) КАК С1000
	|ИЗ
	|	Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_С1000 КАК вт_С1000
	|		ПО Периоды.ДатаНачала = вт_С1000.ДатаНачала
	|			И Периоды.ДатаОкончания = вт_С1000.ДатаОкончания
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_ОффлайнДефекты_Сгруппированные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_С1000";
	
	Если ОффлайнДефекты И ОнлайнДефекты Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&КонсернОтремонтирован", "ИСТИНА");  
	ИначеЕсли ОнлайнДефекты и НЕ ОффлайнДефекты Тогда 
		ОтборПоДефектам = "вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.КонсернОтремонтирован = ИСТИНА";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&КонсернОтремонтирован", ОтборПоДефектам);
	Иначе //Только оффлайн
		ОтборПоДефектам = "вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.КонсернОтремонтирован = ЛОЖЬ";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&КонсернОтремонтирован", ОтборПоДефектам);
	КонецЕсли;

	Результат = Запрос.Выполнить();
	Таблица = Результат.Выгрузить();
	
	Возврат Таблица;
	
КонецФункции

Функция С1000_ПолучитьHTMLСтрокуДляТаблицы(ДанныеДляС1000, КоличествоПериодов)
	
	Таблица = "";
	//Если дефектов не было, просто выведем пустую таблицу
	Если ДанныеДляС1000.Количество() = 0 Тогда
		Таблица = Таблица + "<tr>" + Символы.ПС;
		Таблица = Таблица + "<td>" + "С1000" + "</td>" + Символы.ПС;
		
		Для номер = 1 по КоличествоПериодов Цикл
			
			Таблица = Таблица + "<td>" + 0 + "</td>" + Символы.ПС;
			
		КонецЦикла;
		
		Таблица = Таблица + "</tr>" + Символы.ПС;
		
		Возврат Таблица;
	КонецЕсли;
	
	Таблица = Таблица + "<tr>" + Символы.ПС;
	Таблица = Таблица + "<td>" + "С1000" + "</td>" + Символы.ПС;
	//Заполнение таблицы
	Для каждого стр из ДанныеДляС1000 Цикл
		
		Таблица = Таблица + "<td>" + стр.С1000 + "</td>" + Символы.ПС;
		
	КонецЦикла;
	
	Таблица = Таблица + "</tr>" + Символы.ПС;
	
	Возврат Таблица;

КонецФункции
	
#КонецОбласти 

#Область ScoreASPA

Функция ПолучитьДанныеПоScoreASPA(Запрос, ОффлайнДефекты, ОнлайнДефекты)
	
	Запрос.Текст =
	   "ВЫБРАТЬ
	   |	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ДатаОкончания КАК ДатаОкончания,
	   |	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ДатаНачала КАК ДатаНачала,
	   |	СУММА(вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.СтоимостьКонсерна) КАК СтоимостьКонсерна
	   |ПОМЕСТИТЬ вт_Баллы_ASPA_СгруппированныеПоПериодам
	   |ИЗ
	   |	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами КАК вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами
	   |ГДЕ
	   |	&КонсернОтремонтирован
	   |
	   |СГРУППИРОВАТЬ ПО
	   |	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ДатаОкончания,
	   |	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ДатаНачала
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |ВЫБРАТЬ
	   |	Периоды.НомерПериода КАК НомерПериода,
	   |	Периоды.ДатаНачала КАК ДатаНачала,
	   |	Периоды.ДатаОкончания КАК ДатаОкончания,
	   |	Периоды.НазваниеПериода КАК НазваниеПериода,
	   |	Периоды.ЧастьДаты1 КАК ЧастьДаты1,
	   |	Периоды.ЧастьДаты2 КАК ЧастьДаты2,
	   |	ВЫРАЗИТЬ(ЕСТЬNULL(вт_Баллы_ASPA_СгруппированныеПоПериодам.СтоимостьКонсерна, 0) КАК ЧИСЛО(10, 2)) КАК СтоимостьКонсерна
	   |ИЗ
	   |	Периоды КАК Периоды
	   |		ЛЕВОЕ СОЕДИНЕНИЕ вт_Баллы_ASPA_СгруппированныеПоПериодам КАК вт_Баллы_ASPA_СгруппированныеПоПериодам
	   |		ПО Периоды.ДатаНачала = вт_Баллы_ASPA_СгруппированныеПоПериодам.ДатаНачала
	   |			И Периоды.ДатаОкончания = вт_Баллы_ASPA_СгруппированныеПоПериодам.ДатаОкончания
	   |
	   |УПОРЯДОЧИТЬ ПО
	   |	НомерПериода
	   |;
	   |
	   |////////////////////////////////////////////////////////////////////////////////
	   |УНИЧТОЖИТЬ вт_Баллы_ASPA_СгруппированныеПоПериодам";
	
	Если ОффлайнДефекты И ОнлайнДефекты Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&КонсернОтремонтирован", "ИСТИНА");  
	ИначеЕсли ОнлайнДефекты и НЕ ОффлайнДефекты Тогда 
		ОтборПоДефектам = "вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.КонсернОтремонтирован = ИСТИНА";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&КонсернОтремонтирован", ОтборПоДефектам);
	Иначе //Только оффлайн
		ОтборПоДефектам = "вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.КонсернОтремонтирован = ЛОЖЬ";
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&КонсернОтремонтирован", ОтборПоДефектам);
	КонецЕсли;

	Результат = Запрос.Выполнить();
	Таблица = Результат.Выгрузить();
	
	Возврат Таблица;

КонецФункции

Функция ScoreASPA_ПолучитьHTMLСтрокуДляТаблицы(ДанныеДляScoreASPA, КоличествоПериодов)
	
	Таблица = "";
	//Если дефектов не было, просто выведем пустую таблицу
	Если ДанныеДляScoreASPA.Количество() = 0 Тогда
		Таблица = Таблица + "<tr>" + Символы.ПС;
		Таблица = Таблица + "<td>" + "Score ASPA" + "</td>" + Символы.ПС;
		
		Для номер = 1 по КоличествоПериодов Цикл
			
			Таблица = Таблица + "<td>" + 0 + "</td>" + Символы.ПС;
			
		КонецЦикла;
		
		Таблица = Таблица + "</tr>" + Символы.ПС;
		
		Возврат Таблица;
	КонецЕсли;
	
	Таблица = Таблица + "<tr>" + Символы.ПС;
	Таблица = Таблица + "<td>" + "Score ASPA" + "</td>" + Символы.ПС;
	//Заполнение таблицы
	Для каждого стр из ДанныеДляScoreASPA Цикл
		
		Таблица = Таблица + "<td>" + стр.СтоимостьКонсерна + "</td>" + Символы.ПС;
		
	КонецЦикла;
	
	Таблица = Таблица + "</tr>" + Символы.ПС;
	
	Возврат Таблица;

	
КонецФункции

#КонецОбласти 

#Область ActualUnitConcernCount

Функция ПолучитьДанныеПоActualUnitConcernCount(Запрос, ОффлайнДефекты, ОнлайнДефекты)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ДатаНачала КАК ДатаНачала,
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ДатаОкончания КАК ДатаОкончания,
	|	СУММА(вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.КоличествоПриходДефектов) КАК КоличествоПриходДефектов
	|ПОМЕСТИТЬ вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами_Сгруппированная
	|ИЗ
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами КАК вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами
	|ГДЕ
	|	&КонсернОтремонтирован
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ДатаНачала,
	|	вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.ДатаОкончания
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.НомерПериода КАК НомерПериода,
	|	Периоды.ДатаНачала КАК ДатаНачала,
	|	Периоды.ДатаОкончания КАК ДатаОкончания,
	|	Периоды.НазваниеПериода КАК НазваниеПериода,
	|	Периоды.ЧастьДаты1 КАК ЧастьДаты1,
	|	Периоды.ЧастьДаты2 КАК ЧастьДаты2,
	|	ЕСТЬNULL(вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами_Сгруппированная.КоличествоПриходДефектов, 0) КАК КоличествоДефектов
	|ИЗ
	|	Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами_Сгруппированная КАК вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами_Сгруппированная
	|		ПО Периоды.ДатаНачала = вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами_Сгруппированная.ДатаНачала
	|			И Периоды.ДатаОкончания = вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами_Сгруппированная.ДатаОкончания
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами_Сгруппированная";
	
	Если ОффлайнДефекты И ОнлайнДефекты Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&КонсернОтремонтирован", "ИСТИНА");  
	ИначеЕсли ОнлайнДефекты и НЕ ОффлайнДефекты Тогда 
		ОтборПоДефектам = "вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.КонсернОтремонтирован = ИСТИНА";

		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&КонсернОтремонтирован", ОтборПоДефектам);
	Иначе //Только оффлайн
		ОтборПоДефектам = "вт_ВсеЗаказы_С_Онлайн_Оффлайн_Дефектами.КонсернОтремонтирован = ЛОЖЬ";

		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&КонсернОтремонтирован", ОтборПоДефектам);
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	Таблица = Результат.Выгрузить();
	
	Возврат Таблица;

КонецФУнкции

Функция ActualUnitConcernCount_ПолучитьHTMLСтрокуДляТаблицы(ДанныеДляActualUnitConcernCount, КоличествоПериодов)
	
	Таблица = "";
	//Если дефектов не было, просто выведем пустую таблицу
	Если ДанныеДляActualUnitConcernCount.Количество() = 0 Тогда
		Таблица = Таблица + "<tr>" + Символы.ПС;
		Таблица = Таблица + "<td>" + "Actual Unit Concern Count" + "</td>" + Символы.ПС;
		
		Для номер = 1 по КоличествоПериодов Цикл
			
			Таблица = Таблица + "<td>" + 0 + "</td>" + Символы.ПС;
			
		КонецЦикла;
		
		Таблица = Таблица + "</tr>" + Символы.ПС;
		
		Возврат Таблица;
	КонецЕсли;
	
	Таблица = Таблица + "<tr>" + Символы.ПС;
	Таблица = Таблица + "<td>" + "Actual Unit Concern Count" + "</td>" + Символы.ПС;
	//Заполнение таблицы
	Для каждого стр из ДанныеДляActualUnitConcernCount Цикл
		
		Таблица = Таблица + "<td>" + стр.КоличествоДефектов + "</td>" + Символы.ПС;
		
	КонецЦикла;
	
	Таблица = Таблица + "</tr>" + Символы.ПС;
	
	Возврат Таблица;

КонецФункции
	
#КонецОбласти  

#Область FTT_Not_OK_Units_Count
	
Функция ПолучитьДанныеПоFTT_Not_OK_Units_Count(Запрос, ОффлайнДефекты)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	вт_Заказы_Только_С_ОффлайнДефектами.ДатаНачала КАК ДатаНачала,
	|	вт_Заказы_Только_С_ОффлайнДефектами.ДатаОкончания КАК ДатаОкончания,
	|	СУММА(вт_Заказы_Только_С_ОффлайнДефектами.КоличествоПриход) КАК КоличествоОффлайн
	|ПОМЕСТИТЬ вт_ОффлайнДефекты_Сгруппированные
	|ИЗ
	|	вт_Заказы_Только_С_ОффлайнДефектами КАК вт_Заказы_Только_С_ОффлайнДефектами
	|ГДЕ
	|	&КонсернОтремонтирован
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_Заказы_Только_С_ОффлайнДефектами.ДатаОкончания,
	|	вт_Заказы_Только_С_ОффлайнДефектами.ДатаНачала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.НомерПериода КАК НомерПериода,         
	|	Периоды.ДатаНачала КАК ДатаНачала,
	|	Периоды.ДатаОкончания КАК ДатаОкончания,
	|	Периоды.НазваниеПериода КАК НазваниеПериода,
	|	Периоды.ЧастьДаты1 КАК ЧастьДаты1,
	|	Периоды.ЧастьДаты2 КАК ЧастьДаты2,
	|	ЕСТЬNULL(вт_ОффлайнДефекты_Сгруппированные.КоличествоОффлайн, 0) КАК КоличествоОффлайн
	|ИЗ
	|	Периоды КАК Периоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ОффлайнДефекты_Сгруппированные КАК вт_ОффлайнДефекты_Сгруппированные
	|		ПО Периоды.ДатаНачала = вт_ОффлайнДефекты_Сгруппированные.ДатаНачала
	|			И Периоды.ДатаОкончания = вт_ОффлайнДефекты_Сгруппированные.ДатаОкончания
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ вт_ОффлайнДефекты_Сгруппированные";
	
	Если ОффлайнДефекты Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&КонсернОтремонтирован", "ИСТИНА");  
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&КонсернОтремонтирован", "ЛОЖЬ");  
	КонецЕсли;

	Результат = Запрос.Выполнить();
	Таблица = Результат.Выгрузить();
	
	Возврат Таблица;
	
КонецФункции

Функция FTT_Not_OK_Units_Count_ПолучитьHTMLСтрокуДляТаблицы(ДанныеДляFTT_Not_OK_Units_Count, КоличествоПериодов)
	
	Таблица = "";
	//Если дефектов не было, просто выведем пустую таблицу
	Если ДанныеДляFTT_Not_OK_Units_Count.Количество() = 0 Тогда
		Таблица = Таблица + "<tr>" + Символы.ПС;
		Таблица = Таблица + "<td>" + "FTT Not OK Units_Count" + "</td>" + Символы.ПС;
		
		Для номер = 1 по КоличествоПериодов Цикл
			
			Таблица = Таблица + "<td>" + 0 + "</td>" + Символы.ПС;
			
		КонецЦикла;
		
		Таблица = Таблица + "</tr>" + Символы.ПС;
		
		Возврат Таблица;
	КонецЕсли;
	
	Таблица = Таблица + "<tr>" + Символы.ПС;
	Таблица = Таблица + "<td>" + "FTT Not OK Units_Count" + "</td>" + Символы.ПС;
	//Заполнение таблицы
	Для каждого стр из ДанныеДляFTT_Not_OK_Units_Count Цикл
		
		Таблица = Таблица + "<td>" + стр.КоличествоОффлайн + "</td>" + Символы.ПС;
		
	КонецЦикла;
	
	Таблица = Таблица + "</tr>" + Символы.ПС;
	
	Возврат Таблица;
	
КонецФункции

#КонецОбласти

Функция ПолучитьШапкуИзТаблицыПериодов(ТаблицаПериодов)
	
	Таблица = "";

	Таблица = Таблица + "<table style=""width:100%"">" + Символы.ПС;
	
	//Выведем шапку таблицы из периодов
	ТаблицаПериодов.Сортировать("НомерПериода");	
	Таблица = Таблица + "<tr>" + Символы.ПС;  //с помощью тега добавляем строку
	Таблица = Таблица + "<td>" + "Наименование дефекта" + "</td>" + Символы.ПС; //добавляем колонку
	Для каждого стр из ТаблицаПериодов Цикл
		
		Таблица = Таблица + "<td>" + стр.ЧастьДаты1 + " " + стр.ЧастьДаты2 + " " + стр.НазваниеПериода + "</td>" + Символы.ПС;
		
	КонецЦикла;
	Таблица = Таблица + "<tr>" + Символы.ПС;
	
	Таблица = Таблица + "<!--Шаблон-->" + Символы.ПС;
	
	Таблица = Таблица + "</table>" + Символы.ПС;
	
	Возврат Таблица;
	
КонецФункции

Функция ПолучитьТекстДляОтбораПоОтветственным()
	
	Текст = "
	|Консерн.ОтветственныйЗаДефект В (ВЫБРАТЬ
	|ПоказателиУровняДефектностиОтветственныеЗаДефект.Ответственный КАК Ответственный
	|ИЗ
	|Справочник.ПоказателиУровняДефектности.ОтветственныеЗаДефект КАК ПоказателиУровняДефектностиОтветственныеЗаДефект
	|ГДЕ
	|ПоказателиУровняДефектностиОтветственныеЗаДефект.Ссылка = &ВариантОтчета)";
	
	Возврат Текст;
	
КонецФункции

Функция ПолучитьТекстДляОтбораПоДефектам()
	
	Текст = "	
	|Консерн.Дефект В (ВЫБРАТЬ
	|ПоказателиУровняДефектностиДефекты.Дефект КАК Дефект
	|ИЗ
	|Справочник.ПоказателиУровняДефектности.Дефекты КАК ПоказателиУровняДефектностиДефекты
	|ГДЕ
	|ПоказателиУровняДефектностиДефекты.Ссылка = &ВариантОтчета)";
	
	Возврат Текст;
	
КонецФункции

Функция ПолучитьТекстДляОтбораПоИнспектируемымЭлементам()
	
	Текст = "	
	|Консерн.ИнспектируемыйЭлемент В (ВЫБРАТЬ
	|ПоказателиУровняДефектностиДефекты.ИнспектируемыйЭлемент КАК ИнспектируемыйЭлемент
	|ИЗ
	|Справочник.ПоказателиУровняДефектности.ИнспектируемыеЭлементы КАК ПоказателиУровняДефектностиДефекты
	|ГДЕ
	|ПоказателиУровняДефектностиДефекты.Ссылка = &ВариантОтчета)";
	
	Возврат Текст;
	
КонецФункции


//Все периоды согласно варианту отчета
Функция ПолучитьПериоды(ДатаОтчета, ВариантОтчета)
	перем День;
	
	День = 86400;
	Счетчик = 1; //счетчик строк
	
	Периоды = новый ТаблицаЗначений;
	Периоды.Колонки.Добавить("НомерПериода",Новый ОписаниеТипов("Число"));
	Периоды.Колонки.Добавить("НазваниеПериода",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(10)));
	Периоды.Колонки.Добавить("ДатаНачала",Новый ОписаниеТипов("Дата"));
	Периоды.Колонки.Добавить("ДатаОкончания",Новый ОписаниеТипов("Дата"));
	Периоды.Колонки.Добавить("ЧастьДаты1",Новый ОписаниеТипов("Строка"));
	Периоды.Колонки.Добавить("ЧастьДаты2",Новый ОписаниеТипов("Строка"));
	
	// заполним периоды отчета
	
	// год
	Год = Год(ДатаОтчета);
	КоличествоЛет = ВариантОтчета.КоличествоЛет;
	Если КоличествоЛет > 0 Тогда
		МинДата = Дата(1,1,1);
		МаксДата = Дата(1,1,1);
		Пока КоличествоЛет > 0 Цикл
			КоличествоЛет = КоличествоЛет - 1;
			Период = Периоды.Добавить();
			Период.НазваниеПериода = "Year";
			Период.ДатаНачала = Дата(Год-КоличествоЛет,1,1,0,0,0); //НачалоГода
			Период.ДатаОкончания = Дата(Год-КоличествоЛет,12,31,23,59,59);	  //КонецГода  
			Период.ЧастьДаты1 = "";
			Период.ЧастьДаты2 = Строка(Формат(Год-КоличествоЛет,"ЧГ="));
			
			Период.НомерПериода = Счетчик;
			Счетчик =Счетчик+ 1;
		КонецЦикла;
		
	КонецЕсли;
	
	//месяцы
	КоличествоМесяцев = ВариантОтчета.КоличествоМесяцев;
	Если КоличествоМесяцев > 0 Тогда
		
		Для ТекНомерМесяца=1 По КоличествоМесяцев Цикл
			
			ДатаТекМесяца = ДобавитьМесяц(ДатаОтчета,-1*КоличествоМесяцев+ТекНомерМесяца);
			Период = Периоды.Добавить();
			Период.НазваниеПериода = "Month";
			Период.ДатаНачала = НачалоМесяца(ДатаТекМесяца);
			Период.ДатаОкончания = КонецМесяца(ДатаТекМесяца);
			Период.ЧастьДаты1 = "";
			Период.ЧастьДаты2 = Формат(ДатаТекМесяца, "Л=en_GB; ДФ=MMM");
			
			Период.НомерПериода = Счетчик;
			Счетчик =Счетчик+ 1;
		КонецЦикла;
		
	КонецЕсли;

	
	//недели
	КоличествоНедель = ВариантОтчета.КоличествоНедель;
	Если КоличествоНедель > 0 Тогда
		ДатаТекНедели = НачалоНедели(ДатаОтчета);
		Пока КоличествоНедель > 0 Цикл
			КоличествоНедель = КоличествоНедель - 1 ;
			Период = Периоды.Добавить();
			Период.НазваниеПериода = "Week";
			Период.ДатаНачала = ДатаТекНедели - КоличествоНедель*7*День;
			Период.ДатаОкончания = КонецНедели(Период.ДатаНачала);
			Период.ЧастьДаты1 = Формат(Период.ДатаНачала, "ДФ=dd");
			Период.ЧастьДаты2 = Формат(Период.ДатаНачала, "Л=en_GB; ДФ=MMM");
			
			Период.НомерПериода = Счетчик;
			Счетчик =Счетчик+ 1;
		КонецЦикла;
	КонецЕсли;
	
	//даты
	КоличествоДней = ВариантОтчета.КоличествоДней;
	Для ТекНомерДня=1 По КоличествоДней Цикл
		
		ДатаТекДня = НачалоДня(НачалоДня(ДатаОтчета)-День*1+(День*(ТекНомерДня-КоличествоДней)));
		Период = Периоды.Добавить();
		Период.НазваниеПериода = "Day";
		Период.ДатаНачала = ДатаТекДня;
		Период.ДатаОкончания = КонецДня(ДатаТекДня);
		Период.ЧастьДаты1 = Формат(ДатаТекДня, "ДФ=dd") ;
		Период.ЧастьДаты2 = Формат(ДатаТекДня, "Л=en_GB; ДФ=MMM");
		
		Период.НомерПериода = Счетчик;
		Счетчик =Счетчик+ 1;
	КонецЦикла;
	
	Возврат Периоды;
	
КонецФункции // ИнициализацияПериодов()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ


// Возвращает таблицу значений с датами за период
//
// Параметры:
//  НачДата  - Дата - Начало периода
//  КонДата  - Дата - Конец периода
//  Интервал - Строка - одно из следующих значений:
//             (Секунда, Минута, Час, День, Неделя, Месяц, Квартал, Полугодие, Год)
//
// Возвращаемое значение:
//   Таблица значений с датами за период. Содержит одну колонку "НачИнтервала"
//
Функция ПолучитьТаблицуДатЗаПериод(НачДата, КонДата, Интервал)

    тзИнтервалов = Новый ТаблицаЗначений;
    тзИнтервалов.Колонки.Добавить("НачИнтервала", Новый ОписаниеТипов("Дата"));

    Запрос = Новый Запрос;
    Запрос.Текст = "ВЫБРАТЬ
    |   НАЧАЛОПЕРИОДА(&НачДата, День) КАК НачИнтервала
    |УПОРЯДОЧИТЬ ПО
    |   НачИнтервала
    |ИТОГИ ПО
    |   НачИнтервала ПЕРИОДАМИ("+Интервал+", &НачДата, &КонДата)";
    //Параметры запроса
    Запрос.УстановитьПараметр("НачДата", НачДата);
    Запрос.УстановитьПараметр("КонДата", КонДата);

    Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НачИнтервала", "ВСЕ");
    Пока Выборка.Следующий() Цикл
        НоваяСтрока = тзИнтервалов.Добавить();
        НоваяСтрока.НачИнтервала = Выборка.НачИнтервала;
    КонецЦикла;

    Возврат  тзИнтервалов;

КонецФункции //ПолучитьТаблицуДатЗаПериод()