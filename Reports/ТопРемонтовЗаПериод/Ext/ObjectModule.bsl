
#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СмещениеНачалаСмены = (6 * 60 * 60) + (45 * 60);
	
	Схема = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	ПараметрПериод = Настройки.ПараметрыДанных.Элементы.Найти("ПериодОтчета");
	Период = ПараметрПериод.Значение.Дата;
	
	ПараметрТоп = Настройки.ПараметрыДанных.Элементы.Найти("Топ");
	Топ = ПараметрТоп.Значение;
	
	ПараметрПериодТоп = Настройки.ПараметрыДанных.Элементы.Найти("ПериодТоп");
	НачалоПериодаТоп = ПараметрПериодТоп.Значение.ДатаНачала;
	КонецПериодаТоп = ПараметрПериодТоп.Значение.ДатаОкончания;
	
	Модель = Null;
	ПараметрМодель = Настройки.ПараметрыДанных.Элементы.Найти("Модель");
	Если ПараметрМодель.Использование Тогда
		Модель = ПараметрМодель.Значение;
	КонецЕсли;
	
	Бренд = Null;
	ПараметрБренд = Настройки.ПараметрыДанных.Элементы.Найти("Бренд");
	Если ПараметрБренд.Использование Тогда
		Бренд = ПараметрБренд.Значение;
	КонецЕсли;
	
	Цвет = Null;
	ПараметрЦвет = Настройки.ПараметрыДанных.Элементы.Найти("Цвет");
	Если ПараметрЦвет.Использование Тогда
		Цвет = ПараметрЦвет.Значение;
	КонецЕсли;
	
	ТочкаПроверкиКачества = Null;
	ПараметрТочкаПроверкиКачества = Настройки.ПараметрыДанных.Элементы.Найти("ТочкаПроверкиКачества");
	Если ПараметрТочкаПроверкиКачества.Использование Тогда
		ТочкаПроверкиКачества = ПараметрТочкаПроверкиКачества.Значение;
	КонецЕсли;
	
	ТЗ_Периоды = Новый ТаблицаЗначений;
	ТЗ_Периоды.Колонки.Добавить("Порядок", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10)));
	ТЗ_Периоды.Колонки.Добавить("ПорядокВГруппе", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10)));
	ТЗ_Периоды.Колонки.Добавить("ТипПериода", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)));
	ТЗ_Периоды.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)));
	ТЗ_Периоды.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	ТЗ_Периоды.Колонки.Добавить("ДатаОкончания", Новый ОписаниеТипов("Дата"));
	
	Для ы = 0 По 1 Цикл
		НоваяСтрока = ТЗ_Периоды.Добавить();
		НоваяСтрока.Порядок = 1 - ы;
		НоваяСтрока.ПорядокВГруппе = 1 - ы;
		НоваяСтрока.ТипПериода = "Y";
		НоваяСтрока.Наименование = Формат(Год(Период) - ы, "ЧГ=0");
		НоваяСтрока.ДатаНачала = НачалоГода(ДобавитьМесяц(Период, -(ы * 12)));
		НоваяСтрока.ДатаОкончания = КонецГода(ДобавитьМесяц(Период, -(ы * 12)));
	КонецЦикла;
	
	Для ы = 0 По 11 Цикл
		НоваяСтрока = ТЗ_Периоды.Добавить();
		НоваяСтрока.Порядок = ы + 2;
		НоваяСтрока.ПорядокВГруппе = ы;
		НоваяСтрока.ТипПериода = "M";
		НоваяСтрока.Наименование = Формат(НачалоМесяца(ДобавитьМесяц(НачалоГода(Период), ы)), "ДФ='MMM гг'");
		НоваяСтрока.ДатаНачала = НачалоМесяца(ДобавитьМесяц(НачалоГода(Период), ы));
		НоваяСтрока.ДатаОкончания = КонецМесяца(ДобавитьМесяц(НачалоГода(Период), ы));
	КонецЦикла;
	
	ПерваяНеделяМесяца = НеделяГода(НачалоМесяца(Период));
	Для ы = 0 По 5 Цикл
		Если НачалоНедели(НачалоМесяца(Период) + ы * 7 * 24 * 60 * 60) > Период Тогда
			Прервать;
		КонецЕсли;
		НоваяСтрока = ТЗ_Периоды.Добавить();
		НоваяСтрока.Порядок = ы + 14;
		НоваяСтрока.ПорядокВГруппе = ы;
		НоваяСтрока.ТипПериода = "W";
		НоваяСтрока.Наименование = Строка(ПерваяНеделяМесяца + ы);
		НоваяСтрока.ДатаНачала = НачалоНедели(НачалоМесяца(Период) + ы * 7 * 24 * 60 * 60);
		НоваяСтрока.ДатаОкончания = КонецНедели(НачалоМесяца(Период) + ы * 7 *24 * 60 * 60);
	КонецЦикла;
	
	Для ы = 0 По 6 Цикл
		НоваяСтрока = ТЗ_Периоды.Добавить();
		НоваяСтрока.Порядок = ы + 20;
		НоваяСтрока.ПорядокВГруппе = ы;
		НоваяСтрока.ТипПериода = "D";
		НоваяСтрока.Наименование = Формат(НачалоДня(НачалоНедели(Период) + ы * 24 * 60 * 60), "ДФ=dd.MM.yy");
		НоваяСтрока.ДатаНачала = НачалоДня(НачалоНедели(Период) + ы * 24 * 60 * 60) + СмещениеНачалаСмены;
		НоваяСтрока.ДатаОкончания = КонецДня(НачалоНедели(Период) + ы * 24 * 60 * 60) + СмещениеНачалаСмены;
	КонецЦикла;
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Периоды.Порядок КАК Порядок,
		|	Периоды.ПорядокВГруппе КАК ПорядокВГруппе,
		|	Периоды.ТипПериода КАК ТипПериода,
		|	Периоды.Наименование КАК Наименование,
		|	Периоды.ДатаНачала КАК ДатаНачала,
		|	Периоды.ДатаОкончания КАК ДатаОкончания
		|ПОМЕСТИТЬ ВТ_Периоды
		|ИЗ
		|	&ТЗ_Периоды КАК Периоды
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонсерныОбороты.Консерн.ИнспектируемыйЭлемент КАК ИнспектируемыйЭлемент,
		|	КонсерныОбороты.Консерн.Дефект КАК Дефект,
		|	СУММА(КонсерныОбороты.КоличествоПриход) КАК КоличествоПриход
		|ПОМЕСТИТЬ ВТ_КонсерныЗаПериодТоп
		|ИЗ
		|	РегистрНакопления.Консерны.Обороты(
		|			&НачалоПериодаТоп,
		|			&КонецПериодаТоп,
		|			Регистратор,
		|			ВЫБОР
		|					КОГДА &Модель ЕСТЬ NULL
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ Заказ.Модель В (&Модель)
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &Бренд ЕСТЬ NULL
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ Заказ.Бренд В (&Бренд)
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &Цвет ЕСТЬ NULL
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ Заказ.Цвет В (&Цвет)
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &ТочкаПроверкиКачества ЕСТЬ NULL
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ Консерн.ТочкаПроверкиКачества В (&ТочкаПроверкиКачества)
		|				КОНЕЦ) КАК КонсерныОбороты
		|ГДЕ
		|	КонсерныОбороты.КоличествоПриход > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	КонсерныОбороты.Консерн.ИнспектируемыйЭлемент,
		|	КонсерныОбороты.Консерн.Дефект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 111111
		|	ВТ_КонсерныЗаПериодТоп.ИнспектируемыйЭлемент КАК ИнспектируемыйЭлемент,
		|	ВТ_КонсерныЗаПериодТоп.Дефект КАК Дефект,
		|	ВТ_КонсерныЗаПериодТоп.КоличествоПриход КАК КоличествоТоп
		|ПОМЕСТИТЬ ВТ_ТопКонсернов
		|ИЗ
		|	ВТ_КонсерныЗаПериодТоп КАК ВТ_КонсерныЗаПериодТоп
		|
		|УПОРЯДОЧИТЬ ПО
		|	КоличествоТоп УБЫВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Периоды.Порядок КАК Порядок,
		|	ВТ_Периоды.ПорядокВГруппе КАК ПорядокВГруппе,
		|	ВТ_Периоды.ТипПериода КАК ТипПериода,
		|	ВТ_Периоды.Наименование КАК Наименование,
		|	ВТ_Периоды.ДатаНачала КАК ДатаНачала,
		|	ВТ_Периоды.ДатаОкончания КАК ДатаОкончания,
		|	ВТ_ТопКонсернов.ИнспектируемыйЭлемент КАК ИнспектируемыйЭлемент,
		|	ВТ_ТопКонсернов.Дефект КАК Дефект,
		|	ВТ_ТопКонсернов.КоличествоТоп КАК КоличествоТоп
		|ПОМЕСТИТЬ ВТ_ПериодыИКонсерны
		|ИЗ
		|	ВТ_Периоды КАК ВТ_Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТопКонсернов КАК ВТ_ТопКонсернов
		|		ПО (ИСТИНА)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТопКонсернов.ИнспектируемыйЭлемент КАК ИнспектируемыйЭлемент,
		|	ВТ_ТопКонсернов.Дефект КАК Дефект,
		|	КонсерныОбороты.Период КАК Период,
		|	ЕСТЬNULL(КонсерныОбороты.КоличествоПриход, 0) КАК Количество
		|ПОМЕСТИТЬ ВТ_ВсеКонсерны
		|ИЗ
		|	ВТ_ТопКонсернов КАК ВТ_ТопКонсернов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Консерны.Обороты(
		|				&НачалоПериода,
		|				&КонецПериода,
		|				Регистратор,
		|				ВЫБОР
		|						КОГДА &Модель ЕСТЬ NULL
		|							ТОГДА ИСТИНА
		|						ИНАЧЕ Заказ.Модель В (&Модель)
		|					КОНЕЦ
		|					И ВЫБОР
		|						КОГДА &Бренд ЕСТЬ NULL
		|							ТОГДА ИСТИНА
		|						ИНАЧЕ Заказ.Бренд В (&Бренд)
		|					КОНЕЦ
		|					И ВЫБОР
		|						КОГДА &Цвет ЕСТЬ NULL
		|							ТОГДА ИСТИНА
		|						ИНАЧЕ Заказ.Цвет В (&Цвет)
		|					КОНЕЦ
		|					И ВЫБОР
		|						КОГДА &ТочкаПроверкиКачества ЕСТЬ NULL
		|							ТОГДА ИСТИНА
		|						ИНАЧЕ Консерн.ТочкаПроверкиКачества В (&ТочкаПроверкиКачества)
		|					КОНЕЦ) КАК КонсерныОбороты
		|		ПО ВТ_ТопКонсернов.ИнспектируемыйЭлемент = КонсерныОбороты.Консерн.ИнспектируемыйЭлемент
		|			И ВТ_ТопКонсернов.Дефект = КонсерныОбороты.Консерн.Дефект
		|			И (КонсерныОбороты.КоличествоПриход > 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПериодыИКонсерны.Порядок КАК Порядок,
		|	ВТ_ПериодыИКонсерны.ПорядокВГруппе КАК ПорядокВГруппе,
		|	ВТ_ПериодыИКонсерны.ТипПериода КАК ТипПериода,
		|	ВТ_ПериодыИКонсерны.Наименование КАК НаименованиеПериода,
		|	ВТ_ПериодыИКонсерны.ИнспектируемыйЭлемент КАК ИнспектируемыйЭлемент,
		|	ВТ_ПериодыИКонсерны.Дефект КАК Дефект,
		|	ВТ_ПериодыИКонсерны.КоличествоТоп КАК Топ,
		|	СУММА(ЕСТЬNULL(ВТ_ВсеКонсерны.Количество, 0)) КАК Количество,
		|	МАКСИМУМ(0) КАК Изменение
		|ИЗ
		|	ВТ_ПериодыИКонсерны КАК ВТ_ПериодыИКонсерны
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВсеКонсерны КАК ВТ_ВсеКонсерны
		|		ПО ВТ_ПериодыИКонсерны.ИнспектируемыйЭлемент = ВТ_ВсеКонсерны.ИнспектируемыйЭлемент
		|			И ВТ_ПериодыИКонсерны.Дефект = ВТ_ВсеКонсерны.Дефект
		|			И (ВТ_ВсеКонсерны.Период МЕЖДУ ВТ_ПериодыИКонсерны.ДатаНачала И ВТ_ПериодыИКонсерны.ДатаОкончания)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПериодыИКонсерны.ТипПериода,
		|	ВТ_ПериодыИКонсерны.Наименование,
		|	ВТ_ПериодыИКонсерны.ПорядокВГруппе,
		|	ВТ_ПериодыИКонсерны.Порядок,
		|	ВТ_ПериодыИКонсерны.ИнспектируемыйЭлемент,
		|	ВТ_ПериодыИКонсерны.Дефект,
		|	ВТ_ПериодыИКонсерны.КоличествоТоп
		|
		|УПОРЯДОЧИТЬ ПО
		|	ИнспектируемыйЭлемент,
		|	Дефект,
		|	Порядок";
	
	Запрос = Новый Запрос;
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "ПЕРВЫЕ 111111", "ПЕРВЫЕ " + Топ);
	
	Запрос.УстановитьПараметр("ТЗ_Периоды", ТЗ_Периоды);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоГода(ДобавитьМесяц(Период, -12)));
	Запрос.УстановитьПараметр("КонецПериода", КонецГода(Период));
	Запрос.УстановитьПараметр("НачалоПериодаТоп", НачалоПериодаТоп);
	Запрос.УстановитьПараметр("КонецПериодаТоп", КонецПериодаТоп);
	Запрос.УстановитьПараметр("Модель", Модель);
	Запрос.УстановитьПараметр("Бренд", Бренд);
	Запрос.УстановитьПараметр("Цвет", Цвет);
	Запрос.УстановитьПараметр("ТочкаПроверкиКачества", ТочкаПроверкиКачества);
	
	ТЗ_Источник = Запрос.Выполнить().Выгрузить();
	
	Для ы = 0 По ТЗ_Источник.Количество() - 1 Цикл
		ТекСтрока = ТЗ_Источник[ы];
		Если ТекСтрока.ПорядокВГруппе = 0 И ТЗ_Источник[ы + 1].ПорядокВГруппе > 0 Тогда
			СравниваемаяСтрока = ТЗ_Источник[ы + 1];
		Иначе
			СравниваемаяСтрока = ТЗ_Источник[ы - 1];
		КонецЕсли;
		Если ТекСтрока.Количество > СравниваемаяСтрока.Количество Тогда
			ТекСтрока.Изменение = 1;
		ИначеЕсли ТекСтрока.Количество < СравниваемаяСтрока.Количество Тогда
			ТекСтрока.Изменение = -1;
		КонецЕсли;
	КонецЦикла;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, ДанныеРасшифровки);
	
	ВнешниеНаборыДанных = Новый Структура;
    ВнешниеНаборыДанных.Вставить("ТЗ_Ремонты", ТЗ_Источник);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
	
	ДокументРезультат.Очистить();
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры

#КонецОбласти
