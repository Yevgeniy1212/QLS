
Функция ПолучитьОписаниеПроизводственныхОтчетов(ВариантОтчета=Неопределено) Экспорт
	
	СтруктураНастроек = Справочники.НастройкаОтчетов_MesReports.ПолучитьОписаниеПроизводственныхОтчетовПоУмолчанию();
	 
	СтруктураНастроек.МассивТиповВариантовОтчета.Добавить(Тип("СправочникСсылка.ВариантыНастроекОтчетаДефектыСистемыКонтроляКачества"));
	 
	ПолеИнтерактивногоВыбора = Справочники.НастройкаОтчетов_MesReports.ПолучитьОписаниеПолей();
	ПолеИнтерактивногоВыбора.Идентификатор = "ТочкаПроверкиКачества";
	ПолеИнтерактивногоВыбора.Синоним = "Registration point";
	ПолеИнтерактивногоВыбора.Тип = Тип("СправочникСсылка.ТочкиПроверкиКачества");
	ПолеИнтерактивногоВыбора.МножественныйВыбор = Истина;
	ПолеИнтерактивногоВыбора.ОбязательноеДляВыбора = Ложь;	 
	Если ВариантОтчета <> Неопределено Тогда
		ПолеИнтерактивногоВыбора.МассивЭлементов = ПолучитьМассивДоступныхТочекПроверкиКачества(ВариантОтчета);	 
	КонецЕсли;

	СтруктураНастроек.ПоляИнтерактивногоВыбора.Добавить(ПолеИнтерактивногоВыбора);
	Возврат СтруктураНастроек;
	 
КонецФункции

//Вариант отчёта может быть ограничен определенным перечнем точек проверки качества
Функция ПолучитьМассивДоступныхТочекПроверкиКачества(ВариантОтчета)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВариантыНастроекОтчетаДефектыСистемыКонтроляКачестваФильтрПоТочкамПроверкиКачества.ТочкаПроверкиКачества
		|ИЗ
		|	Справочник.ВариантыНастроекОтчетаДефектыСистемыКонтроляКачества.ФильтрПоТочкамПроверкиКачества КАК ВариантыНастроекОтчетаДефектыСистемыКонтроляКачестваФильтрПоТочкамПроверкиКачества
		|ГДЕ
		|	ВариантыНастроекОтчетаДефектыСистемыКонтроляКачестваФильтрПоТочкамПроверкиКачества.Ссылка = &ВариантОтчета
		|	И ВариантыНастроекОтчетаДефектыСистемыКонтроляКачестваФильтрПоТочкамПроверкиКачества.Ссылка.ВключитьФильтрПоТочкамПроверкиКачества";

	Запрос.УстановитьПараметр("ВариантОтчета", ВариантОтчета);

	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ТочкаПроверкиКачества");

КонецФункции

Процедура СформироватьОтчет(ТабДокумент,ВариантОтчета,Знач ДатаОтчета, ТекстОшибки ="", ДополнительныеПараметры = Неопределено) Экспорт	
	
	//Начало периода
	НачалоПериода = НачалоДня(ТекущаяДата());
	Если ДополнительныеПараметры.Свойство("НачалоПериода") Тогда
		НачалоПериода = ДополнительныеПараметры.НачалоПериода;
	КонецЕсли;
	
	//Окончание периода
	ОкончаниеПериода = КонецДня(ТекущаяДата());
	Если ДополнительныеПараметры.Свойство("ОкончаниеПериода") Тогда
		ОкончаниеПериода = ДополнительныеПараметры.ОкончаниеПериода;
	КонецЕсли;
	
	//Массив точек проверки качества
	МассивТочекПроверкиКачества = Новый Массив;
	Если ДополнительныеПараметры.Свойство("ТочкаПроверкиКачества") Тогда
		МассивТочекПроверкиКачества = ДополнительныеПараметры.ТочкаПроверкиКачества;
	ИначеЕсли ВариантОтчета.ВключитьФильтрПоТочкамПроверкиКачества Тогда
		МассивТочекПроверкиКачества = ВариантОтчета.ФильтрПоТочкамПроверкиКачества.Выгрузить().ВыгрузитьКолонку("ТочкаПроверкиКачества");
	КонецЕсли;
	
	//Формируем отчет по дефектам
	Если ВариантОтчета.СпособФормированияОтчета = 0 Тогда
	
		//Получаем список дефектов
		ТопДефектов = ПолучитьРезультатЗапросаДефекты(ВариантОтчета, НачалоПериода, ОкончаниеПериода, МассивТочекПроверкиКачества, ВариантОтчета.КоличествоСтрок);
		
		//Заполняем макет
		ТабДокумент = ЗаполнитьМакетДаннымиДефекты(ТабДокумент, ТопДефектов); 
		
	//Формируем отчет по консернам
	ИначеЕсли ВариантОтчета.СпособФормированияОтчета = 1 Тогда
	
		//Получаем список консеров
		ТопКонсернов = ПолучитьРезультатЗапросаКонсерны(ВариантОтчета, НачалоПериода, ОкончаниеПериода, МассивТочекПроверкиКачества, ВариантОтчета.КоличествоСтрок);
		
		//Заполняем макет
		ТабДокумент = ЗаполнитьМакетДаннымиКонсерны(ТабДокумент, ТопКонсернов); 
		
	КонецЕсли;
		
КонецПроцедуры

									//** Формирование отчета по дефектам **//

//Выбор самых распространенных дефектов
Функция ПолучитьРезультатЗапросаДефекты(ВариантОтчета, НачалоПериода, ОкончаниеПериода, МассивТочекПроверкиКачества, КоличествоСтрок)
	
	ТаблицаТопДефектов = Новый ТаблицаЗначений;	

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 10
		|	КонсерныОбороты.Консерн.Дефект КАК Дефект,
		|	СУММА(КонсерныОбороты.КоличествоПриход) КАК Количество
		|ИЗ
		|	РегистрНакопления.Консерны.Обороты(&НачалоПериода, &ОкончаниеПериода, , ) КАК КонсерныОбороты
		|ГДЕ
		|	КонсерныОбороты.Консерн.ТочкаПроверкиКачества В(&МассивТочекПроверкиКачества)
		|
		|СГРУППИРОВАТЬ ПО
		|	КонсерныОбороты.Консерн.Дефект
		|
		|УПОРЯДОЧИТЬ ПО
		|	Количество УБЫВ";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	
	//Выбор количества строк
	Если ЗначениеЗаполнено(КоличествоСтрок) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "10", КоличествоСтрок);
	КонецЕсли;
	
	//Фильтр по точкам проверки качества
	Если ЗначениеЗаполнено(МассивТочекПроверкиКачества) Тогда
		Запрос.УстановитьПараметр("МассивТочекПроверкиКачества", МассивТочекПроверкиКачества);		
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "КонсерныОбороты.Консерн.ТочкаПроверкиКачества В(&МассивТочекПроверкиКачества)", "Истина");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаТопДефектов = РезультатЗапроса.Выгрузить();
	
	Возврат ТаблицаТопДефектов
	
КонецФункции

//Заполнить макет
Функция ЗаполнитьМакетДаннымиДефекты(ТабДокумент, ТопДефектов)
	
	//Получаем макет и области
	Макет = Отчеты.ДефектыСистемыКонтроляКачества.ПолучитьМакет("Макет");	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	//Заполняем макет
	ТабДокумент.Очистить();	

	//Выводим шапку
	ОбластьШапка.Параметры.Наименование = "Defect";	
	ТабДокумент.Вывести(ОбластьШапка);
		
	//Выводим строки	
	Для Каждого Дефект Из ТопДефектов Цикл
		ОбластьСтрока.Параметры.Наименование = Дефект.Дефект;
		ОбластьСтрока.Параметры.Количество = Дефект.Количество;
		ТабДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции


									//** Формирование отчета по консернам **//
									
//Выбор самых распространенных консернов
Функция ПолучитьРезультатЗапросаКонсерны(ВариантОтчета, НачалоПериода, ОкончаниеПериода, МассивТочекПроверкиКачества, КоличествоСтрок)
	
	ТаблицаТопДефектов = Новый ТаблицаЗначений;	

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 10
		|	КонсерныОбороты.Консерн.ИнспектируемыйЭлемент КАК ИнспектируемыйЭлемент,
		|	СУММА(КонсерныОбороты.КоличествоПриход) КАК Количество
		|ИЗ
		|	РегистрНакопления.Консерны.Обороты(&НачалоПериода, &ОкончаниеПериода, , ) КАК КонсерныОбороты
		|ГДЕ
		|	КонсерныОбороты.Консерн.ТочкаПроверкиКачества В(&МассивТочекПроверкиКачества)
		|
		|СГРУППИРОВАТЬ ПО
		|	КонсерныОбороты.Консерн.ИнспектируемыйЭлемент
		|
		|УПОРЯДОЧИТЬ ПО
		|	Количество УБЫВ";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	
	//Выбор количества строк
	Если ЗначениеЗаполнено(КоличествоСтрок) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "10", КоличествоСтрок);
	КонецЕсли;
	
	//Фильтр по точкам проверки качества
	Если ЗначениеЗаполнено(МассивТочекПроверкиКачества) Тогда
		Запрос.УстановитьПараметр("МассивТочекПроверкиКачества", МассивТочекПроверкиКачества);		
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "КонсерныОбороты.Консерн.ТочкаПроверкиКачества В(&МассивТочекПроверкиКачества)", "Истина");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаТопДефектов = РезультатЗапроса.Выгрузить();
	
	Возврат ТаблицаТопДефектов
	
КонецФункции

//Заполнить макет
Функция ЗаполнитьМакетДаннымиКонсерны(ТабДокумент, ТопКонсернов)
	
	//Получаем макет и области
	Макет = Отчеты.ДефектыСистемыКонтроляКачества.ПолучитьМакет("Макет");	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	
	//Заполняем макет
	ТабДокумент.Очистить();	

	//Выводим шапку
	ОбластьШапка.Параметры.Наименование = "Concern";	
	ТабДокумент.Вывести(ОбластьШапка);
		
	//Выводим строки	
	Для Каждого Консерны Из ТопКонсернов Цикл
		ОбластьСтрока.Параметры.Наименование = Консерны.ИнспектируемыйЭлемент;
		ОбластьСтрока.Параметры.Количество = Консерны.Количество;
		ТабДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции
							
