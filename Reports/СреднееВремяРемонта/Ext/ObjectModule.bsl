#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СмещениеНачалаСмены = (6 * 60 * 60) + (45 * 60);
	
	Схема = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	ПараметрПериод = Настройки.ПараметрыДанных.Элементы.Найти("ПериодОтчета");
	Период = ПараметрПериод.Значение.Дата;
		
	ПараметрТочкиРегистрацииМЕС = Настройки.ПараметрыДанных.Элементы.Найти("ТочкиРегистрацииМЕС");
	ТочкиРегистрацииМЕС = ПараметрТочкиРегистрацииМЕС.Значение;
	
	Модель = Null;
	ПараметрМодель = Настройки.ПараметрыДанных.Элементы.Найти("Модель");
	Если ПараметрМодель.Использование Тогда
		Модель = ПараметрМодель.Значение;
	КонецЕсли;
	
	Бренд = Null;
	ПараметрБренд = Настройки.ПараметрыДанных.Элементы.Найти("Бренд");
	Если ПараметрБренд.Использование Тогда
		Бренд = ПараметрБренд.Значение;
	КонецЕсли;
	
	Цвет = Null;
	ПараметрЦвет = Настройки.ПараметрыДанных.Элементы.Найти("Цвет");
	Если ПараметрЦвет.Использование Тогда
		Цвет = ПараметрЦвет.Значение;
	КонецЕсли;
	
	ТочкаПроверкиКачества = Null;
	ПараметрТочкаПроверкиКачества = Настройки.ПараметрыДанных.Элементы.Найти("ТочкаПроверкиКачества");
	Если ПараметрТочкаПроверкиКачества.Использование Тогда
		ТочкаПроверкиКачества = ПараметрТочкаПроверкиКачества.Значение;
	КонецЕсли;
	
	ТЗ_Периоды = Новый ТаблицаЗначений;
	ТЗ_Периоды.Колонки.Добавить("Порядок", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10)));
	ТЗ_Периоды.Колонки.Добавить("ТипПериода", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)));
	ТЗ_Периоды.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)));
	ТЗ_Периоды.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	ТЗ_Периоды.Колонки.Добавить("ДатаОкончания", Новый ОписаниеТипов("Дата"));
	
	Для ы = 0 По 1 Цикл
		НоваяСтрока = ТЗ_Периоды.Добавить();
		НоваяСтрока.Порядок = 1 - ы;
		НоваяСтрока.ТипПериода = "Y";
		НоваяСтрока.Наименование = Строка(Год(Период) - ы);
		НоваяСтрока.ДатаНачала = НачалоГода(ДобавитьМесяц(Период, -(ы * 12)));
		НоваяСтрока.ДатаОкончания = КонецГода(ДобавитьМесяц(Период, -(ы * 12)));
	КонецЦикла;
	
	Для ы = 0 По 11 Цикл
		НоваяСтрока = ТЗ_Периоды.Добавить();
		НоваяСтрока.Порядок = ы + 2;
		НоваяСтрока.ТипПериода = "M";
		НоваяСтрока.Наименование = Формат(НачалоМесяца(ДобавитьМесяц(НачалоГода(Период), ы)), "ДФ='MMM гг'");
		НоваяСтрока.ДатаНачала = НачалоМесяца(ДобавитьМесяц(НачалоГода(Период), ы));
		НоваяСтрока.ДатаОкончания = КонецМесяца(ДобавитьМесяц(НачалоГода(Период), ы));
	КонецЦикла;
	
	ПерваяНеделяМесяца = НеделяГода(НачалоМесяца(Период));
	Для ы = 0 По 5 Цикл
		Если НачалоНедели(НачалоМесяца(Период) + ы * 7 * 24 * 60 * 60) > Период Тогда
			Прервать;
		КонецЕсли;
		НоваяСтрока = ТЗ_Периоды.Добавить();
		НоваяСтрока.Порядок = ы + 14;
		НоваяСтрока.ТипПериода = "W";
		НоваяСтрока.Наименование = Строка(ПерваяНеделяМесяца + ы);
		НоваяСтрока.ДатаНачала = НачалоНедели(НачалоМесяца(Период) + ы * 7 * 24 * 60 * 60);
		НоваяСтрока.ДатаОкончания = КонецНедели(НачалоМесяца(Период) + ы * 7 *24 * 60 * 60);
	КонецЦикла;
	
	Для ы = 0 По 6 Цикл
		НоваяСтрока = ТЗ_Периоды.Добавить();
		НоваяСтрока.Порядок = ы + 20;
		НоваяСтрока.ТипПериода = "D";
		НоваяСтрока.Наименование = Формат(НачалоДня(НачалоНедели(Период) + ы * 24 * 60 * 60), "ДФ=dd.MM.yy");
		НоваяСтрока.ДатаНачала = НачалоДня(НачалоНедели(Период) + ы * 24 * 60 * 60) + СмещениеНачалаСмены;
		НоваяСтрока.ДатаОкончания = КонецДня(НачалоНедели(Период) + ы * 24 * 60 * 60) + СмещениеНачалаСмены;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Периоды.Порядок КАК Порядок,
		|	Периоды.ТипПериода КАК ТипПериода,
		|	Периоды.Наименование КАК Наименование,
		|	Периоды.ДатаНачала КАК ДатаНачала,
		|	Периоды.ДатаОкончания КАК ДатаОкончания
		|ПОМЕСТИТЬ ВТ_Периоды
		|ИЗ
		|	&ТЗ_Периоды КАК Периоды
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвижениеЗаказовОбороты.Период КАК Период,
		|	ДвижениеЗаказовОбороты.Заказ КАК Заказ,
		|	ДвижениеЗаказовОбороты.КоличествоПриход КАК КоличествоПриход
		|ПОМЕСТИТЬ ВТ_Заказы
		|ИЗ
		|	РегистрНакопления.ДвижениеЗаказов.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Регистратор,
		|			ТочкаРегистрации В (&ТочкиРегистрацииМЕС)
		|				И ВЫБОР
		|					КОГДА &Модель ЕСТЬ NULL
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ Заказ.Модель В (&Модель)
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &Бренд ЕСТЬ NULL
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ Заказ.Бренд В (&Бренд)
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &Цвет ЕСТЬ NULL
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ Заказ.Цвет В (&Цвет)
		|				КОНЕЦ) КАК ДвижениеЗаказовОбороты
		|ГДЕ
		|	ДвижениеЗаказовОбороты.КоличествоПриход > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Периоды.Порядок КАК Порядок,
		|	ВТ_Периоды.ТипПериода КАК ТипПериода,
		|	ВТ_Периоды.Наименование КАК Наименование,
		|	ВТ_Заказы.Заказ КАК Заказ
		|ПОМЕСТИТЬ ВТ_ЗаказыПоПериодам
		|ИЗ
		|	ВТ_Периоды КАК ВТ_Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
		|		ПО (ВТ_Заказы.Период МЕЖДУ ВТ_Периоды.ДатаНачала И ВТ_Периоды.ДатаОкончания)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_Периоды.Порядок,
		|	ВТ_Периоды.ТипПериода,
		|	ВТ_Периоды.Наименование,
		|	ВТ_Заказы.Заказ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ЗаказыПоПериодам.Порядок КАК Порядок,
		|	ВТ_ЗаказыПоПериодам.ТипПериода КАК ТипПериода,
		|	ВТ_ЗаказыПоПериодам.Наименование КАК Наименование,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ЗаказыПоПериодам.Заказ) КАК КоличествоАвто,
		|	СУММА(ЕСТЬNULL(КонсерныОбороты.Регистратор.ВремяРемонта, 0)) КАК ВремяРемонта
		|ПОМЕСТИТЬ ВТ_ВремяИКоличество
		|ИЗ
		|	ВТ_ЗаказыПоПериодам КАК ВТ_ЗаказыПоПериодам
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Консерны.Обороты(
		|				,
		|				,
		|				Регистратор,
		|				ВЫБОР
		|					КОГДА &ТочкаПроверкиКачества ЕСТЬ NULL
		|						ТОГДА ИСТИНА
		|					ИНАЧЕ Консерн.ТочкаПроверкиКачества В (&ТочкаПроверкиКачества)
		|				КОНЕЦ) КАК КонсерныОбороты
		|		ПО ВТ_ЗаказыПоПериодам.Заказ = КонсерныОбороты.Заказ
		|			И (КонсерныОбороты.КоличествоРасход > 0)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ЗаказыПоПериодам.Порядок,
		|	ВТ_ЗаказыПоПериодам.ТипПериода,
		|	ВТ_ЗаказыПоПериодам.Наименование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ВремяИКоличество.Порядок КАК Порядок,
		|	ВТ_ВремяИКоличество.ТипПериода КАК ТипПериода,
		|	ВТ_ВремяИКоличество.Наименование КАК НаименованиеПериода,
		|	ВТ_ВремяИКоличество.ВремяРемонта КАК ВремяРемонта,
		|	ВТ_ВремяИКоличество.КоличествоАвто КАК КоличествоАвто,
		|	ВЫБОР
		|		КОГДА ВТ_ВремяИКоличество.КоличествоАвто = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВТ_ВремяИКоличество.ВремяРемонта / ВТ_ВремяИКоличество.КоличествоАвто
		|	КОНЕЦ КАК СреднееВремя
		|ИЗ
		|	ВТ_ВремяИКоличество КАК ВТ_ВремяИКоличество";
	
	Запрос.УстановитьПараметр("ТЗ_Периоды", ТЗ_Периоды);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоГода(ДобавитьМесяц(Период, -12)));
	Запрос.УстановитьПараметр("КонецПериода", КонецГода(Период));
	Запрос.УстановитьПараметр("ТочкиРегистрацииМЕС", ТочкиРегистрацииМЕС);
	Запрос.УстановитьПараметр("Модель", Модель);
	Запрос.УстановитьПараметр("Бренд", Бренд);
	Запрос.УстановитьПараметр("Цвет", Цвет);
	Запрос.УстановитьПараметр("ТочкаПроверкиКачества", ТочкаПроверкиКачества);
	
	ТЗ_Источник = Запрос.Выполнить().Выгрузить();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, ДанныеРасшифровки);
	
	ВнешниеНаборыДанных = Новый Структура;
    ВнешниеНаборыДанных.Вставить("ТЗ_Ремонты", ТЗ_Источник);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
	
	ДокументРезультат.Очистить();
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры

#КонецОбласти
