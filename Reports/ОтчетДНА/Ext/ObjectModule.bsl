#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СмещениеНачалаСмены = (6 * 60 * 60) + (45 * 60);
	
	Схема = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	ПараметрПериод = Настройки.ПараметрыДанных.Элементы.Найти("ПериодОтчета");
	Период = ПараметрПериод.Значение.Дата;
	
	ПараметрНачалоПериода = Настройки.ПараметрыДанных.Элементы.Найти("НачалоПериода");
	ПараметрНачалоПериода.Значение = НачалоДня(Период);
	ПараметрНачалоПериода.Использование = Истина;
	
	ПараметрКонецПериода = Настройки.ПараметрыДанных.Элементы.Найти("КонецПериода");
	ПараметрКонецПериода.Значение = КонецДня(Период);
	ПараметрКонецПериода.Использование = Истина;
	
	ПараметрТочкиРегистрацииМЕС = Настройки.ПараметрыДанных.Элементы.Найти("ТочкиРегистрацииМЕС");
	ТочкиРегистрацииМЕС = ПараметрТочкиРегистрацииМЕС.Значение;
	
	ТочкиРегистрацииOff = Новый Массив;
	ПараметрТочкиРегистрацииOff = Настройки.ПараметрыДанных.Элементы.Найти("ТочкиРегистрацииOff");
	Если ПараметрТочкиРегистрацииOff.Использование Тогда
		ТочкиРегистрацииOff = ПараметрТочкиРегистрацииOff.Значение;
	КонецЕсли;
	
	ТочкиПроверкиДляОстатков = Новый Массив;
	ПараметрТочкиПроверкиДляОстатков = Настройки.ПараметрыДанных.Элементы.Найти("ТочкиПроверкиДляОстатков");
	Если ПараметрТочкиПроверкиДляОстатков.Использование Тогда
		ТочкиПроверкиДляОстатков = ПараметрТочкиПроверкиДляОстатков.Значение;
	КонецЕсли;
	
	ПараметрТочкиПроверкиДляОборотов = Настройки.ПараметрыДанных.Элементы.Найти("ТочкиПроверкиДляОборотов");
	ТочкиПроверкиДляОборотов = ПараметрТочкиПроверкиДляОборотов.Значение;
	
	ТЗ_Периоды = Новый ТаблицаЗначений;
	ТЗ_Периоды.Колонки.Добавить("Порядок", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10)));
	ТЗ_Периоды.Колонки.Добавить("ТипПериода", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)));
	ТЗ_Периоды.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100)));
	ТЗ_Периоды.Колонки.Добавить("ДатаНачала", Новый ОписаниеТипов("Дата"));
	ТЗ_Периоды.Колонки.Добавить("ДатаОкончания", Новый ОписаниеТипов("Дата"));
	
	Для ы = 0 По 1 Цикл
		НоваяСтрока = ТЗ_Периоды.Добавить();
		НоваяСтрока.Порядок = ы;
		НоваяСтрока.ТипПериода = "Y";
		НоваяСтрока.Наименование = Строка(Год(Период) - ы);
		НоваяСтрока.ДатаНачала = НачалоГода(ДобавитьМесяц(Период, -(ы * 12)));
		НоваяСтрока.ДатаОкончания = КонецГода(ДобавитьМесяц(Период, -(ы * 12)));
	КонецЦикла;
	
	Для ы = 0 По 11 Цикл
		НоваяСтрока = ТЗ_Периоды.Добавить();
		НоваяСтрока.Порядок = ы + 2;
		НоваяСтрока.ТипПериода = "M";
		НоваяСтрока.Наименование = Формат(НачалоМесяца(ДобавитьМесяц(НачалоГода(Период), ы)), "ДФ='MMM гг'");
		НоваяСтрока.ДатаНачала = НачалоМесяца(ДобавитьМесяц(НачалоГода(Период), ы));
		НоваяСтрока.ДатаОкончания = КонецМесяца(ДобавитьМесяц(НачалоГода(Период), ы));
	КонецЦикла;
	
	ПерваяНеделяМесяца = НеделяГода(НачалоМесяца(Период));
	Для ы = 0 По 5 Цикл
		Если НачалоНедели(НачалоМесяца(Период) + ы * 7 * 24 * 60 * 60) > Период Тогда
			Прервать;
		КонецЕсли;
		НоваяСтрока = ТЗ_Периоды.Добавить();
		НоваяСтрока.Порядок = ы + 14;
		НоваяСтрока.ТипПериода = "W";
		НоваяСтрока.Наименование = Строка(ПерваяНеделяМесяца + ы);
		НоваяСтрока.ДатаНачала = НачалоНедели(НачалоМесяца(Период) + ы * 7 * 24 * 60 * 60);
		НоваяСтрока.ДатаОкончания = КонецНедели(НачалоМесяца(Период) + ы * 7 *24 * 60 * 60);
	КонецЦикла;
	
	Для ы = 0 По 6 Цикл
		НоваяСтрока = ТЗ_Периоды.Добавить();
		НоваяСтрока.Порядок = ы + 20;
		НоваяСтрока.ТипПериода = "D";
		НоваяСтрока.Наименование = Формат(НачалоДня(НачалоНедели(Период) + ы * 24 * 60 * 60), "ДФ=dd.MM.yy");
		НоваяСтрока.ДатаНачала = НачалоДня(НачалоНедели(Период) + ы * 24 * 60 * 60) + СмещениеНачалаСмены;
		НоваяСтрока.ДатаОкончания = КонецДня(НачалоНедели(Период) + ы * 24 * 60 * 60) + СмещениеНачалаСмены;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Периоды.Порядок КАК Порядок,
		|	Периоды.ТипПериода КАК ТипПериода,
		|	Периоды.Наименование КАК Наименование,
		|	Периоды.ДатаНачала КАК ДатаНачала,
		|	Периоды.ДатаОкончания КАК ДатаОкончания
		|ПОМЕСТИТЬ ВТ_Периоды
		|ИЗ
		|	&ТЗ_Периоды КАК Периоды
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвижениеЗаказовОбороты.Период КАК Период,
		|	ДвижениеЗаказовОбороты.Заказ КАК Заказ,
		|	ДвижениеЗаказовОбороты.КоличествоПриход КАК КоличествоПриход
		|ПОМЕСТИТЬ ВТ_Заказы
		|ИЗ
		|	РегистрНакопления.ДвижениеЗаказов.Обороты(&НачалоПериода, &КонецПериода, Регистратор, ТочкаРегистрации В (&ТочкиРегистрацииМЕС)) КАК ДвижениеЗаказовОбороты
		|ГДЕ
		|	ДвижениеЗаказовОбороты.КоличествоПриход > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Периоды.Порядок КАК Порядок,
		|	ВТ_Периоды.ТипПериода КАК ТипПериода,
		|	ВТ_Периоды.Наименование КАК Наименование,
		|	ВТ_Заказы.Заказ КАК Заказ
		|ПОМЕСТИТЬ ВТ_ЗаказыПоПериодам
		|ИЗ
		|	ВТ_Периоды КАК ВТ_Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заказы КАК ВТ_Заказы
		|		ПО (ВТ_Заказы.Период МЕЖДУ ВТ_Периоды.ДатаНачала И ВТ_Периоды.ДатаОкончания)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДвижениеЗаказовОбороты.Период КАК Период,
		|	ДвижениеЗаказовОбороты.Заказ КАК Заказ
		|ПОМЕСТИТЬ ВТ_ПериодыПрохожденияТочкиOff
		|ИЗ
		|	РегистрНакопления.ДвижениеЗаказов.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Регистратор,
		|			ТочкаРегистрации В (&ТочкиРегистрацииOff)
		|				И Заказ В
		|					(ВЫБРАТЬ
		|						ВТ_ЗаказыПоПериодам.Заказ
		|					ИЗ
		|						ВТ_ЗаказыПоПериодам КАК ВТ_ЗаказыПоПериодам)) КАК ДвижениеЗаказовОбороты
		|ГДЕ
		|	ДвижениеЗаказовОбороты.КоличествоПриход > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонсерныОбороты.Заказ КАК Заказ,
		|	КонсерныОбороты.Консерн КАК Консерн,
		|	КонсерныОбороты.КоличествоПриход КАК КоличествоПриход
		|ПОМЕСТИТЬ ВТ_КонсерныПриходДляОстатков
		|ИЗ
		|	РегистрНакопления.Консерны.Обороты(
		|			,
		|			,
		|			,
		|			Заказ В
		|					(ВЫБРАТЬ
		|						ВТ_ЗаказыПоПериодам.Заказ
		|					ИЗ
		|						ВТ_ЗаказыПоПериодам КАК ВТ_ЗаказыПоПериодам)
		|				И Консерн.ТочкаПроверкиКачества В (&ТочкиПроверкиДляОстатков)) КАК КонсерныОбороты
		|ГДЕ
		|	КонсерныОбороты.КоличествоПриход > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонсерныОбороты.Заказ КАК Заказ,
		|	КонсерныОбороты.Консерн КАК Консерн,
		|	КонсерныОбороты.КоличествоРасход КАК КоличествоРасход
		|ПОМЕСТИТЬ ВТ_КонсерныРасходДляОстатков
		|ИЗ
		|	РегистрНакопления.Консерны.Обороты(
		|			,
		|			,
		|			Регистратор,
		|			Заказ В
		|					(ВЫБРАТЬ
		|						ВТ_ЗаказыПоПериодам.Заказ
		|					ИЗ
		|						ВТ_ЗаказыПоПериодам КАК ВТ_ЗаказыПоПериодам)
		|				И Консерн.ТочкаПроверкиКачества В (&ТочкиПроверкиДляОстатков)) КАК КонсерныОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПериодыПрохожденияТочкиOff КАК ВТ_ПериодыПрохожденияТочкиOff
		|		ПО КонсерныОбороты.Заказ = ВТ_ПериодыПрохожденияТочкиOff.Заказ
		|ГДЕ
		|	КонсерныОбороты.КоличествоРасход > 0
		|	И КонсерныОбороты.Период < ЕСТЬNULL(ВТ_ПериодыПрохожденияТочкиOff.Период, ДАТАВРЕМЯ(3999, 12, 31))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ЗаказыПоПериодам.Порядок КАК Порядок,
		|	ВТ_ЗаказыПоПериодам.ТипПериода КАК ТипПериода,
		|	ВТ_ЗаказыПоПериодам.Наименование КАК Наименование,
		|	ВТ_ЗаказыПоПериодам.Заказ КАК Заказ,
		|	ЕСТЬNULL(ВТ_КонсерныПриходДляОстатков.КоличествоПриход, 0) - ЕСТЬNULL(ВТ_КонсерныРасходДляОстатков.КоличествоРасход, 0) КАК КоличествоКонсернов
		|ПОМЕСТИТЬ ВТ_ЗаказыИКонсерны
		|ИЗ
		|	ВТ_ЗаказыПоПериодам КАК ВТ_ЗаказыПоПериодам
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КонсерныПриходДляОстатков КАК ВТ_КонсерныПриходДляОстатков
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КонсерныРасходДляОстатков КАК ВТ_КонсерныРасходДляОстатков
		|			ПО ВТ_КонсерныПриходДляОстатков.Заказ = ВТ_КонсерныРасходДляОстатков.Заказ
		|				И ВТ_КонсерныПриходДляОстатков.Консерн = ВТ_КонсерныРасходДляОстатков.Консерн
		|		ПО ВТ_ЗаказыПоПериодам.Заказ = ВТ_КонсерныПриходДляОстатков.Заказ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ЗаказыПоПериодам.Порядок,
		|	ВТ_ЗаказыПоПериодам.ТипПериода,
		|	ВТ_ЗаказыПоПериодам.Наименование,
		|	ВТ_ЗаказыПоПериодам.Заказ,
		|	ЕСТЬNULL(КонсерныОбороты.КоличествоПриход, 0)
		|ИЗ
		|	ВТ_ЗаказыПоПериодам КАК ВТ_ЗаказыПоПериодам
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Консерны.Обороты(, , , Консерн.ТочкаПроверкиКачества В (&ТочкиПроверкиДляОборотов)) КАК КонсерныОбороты
		|		ПО ВТ_ЗаказыПоПериодам.Заказ = КонсерныОбороты.Заказ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ЗаказыИКонсерны.Порядок КАК Порядок,
		|	ВТ_ЗаказыИКонсерны.ТипПериода КАК ТипПериода,
		|	ВТ_ЗаказыИКонсерны.Наименование КАК Наименование,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ЗаказыИКонсерны.Заказ) КАК КоличествоЗаказов,
		|	СУММА(ВТ_ЗаказыИКонсерны.КоличествоКонсернов) КАК КоличествоКонсернов
		|ПОМЕСТИТЬ ВТ_Группировка
		|ИЗ
		|	ВТ_ЗаказыИКонсерны КАК ВТ_ЗаказыИКонсерны
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ЗаказыИКонсерны.Порядок,
		|	ВТ_ЗаказыИКонсерны.ТипПериода,
		|	ВТ_ЗаказыИКонсерны.Наименование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Группировка.Порядок КАК Порядок,
		|	ВТ_Группировка.ТипПериода КАК ТипПериода,
		|	ВТ_Группировка.Наименование КАК НаименованиеПериода,
		|	""ДНА"" КАК НаименованиеПараметра,
		|	ВЫБОР
		|		КОГДА ВТ_Группировка.КоличествоЗаказов = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВТ_Группировка.КоличествоКонсернов / ВТ_Группировка.КоличествоЗаказов
		|	КОНЕЦ КАК Количество
		|ИЗ
		|	ВТ_Группировка КАК ВТ_Группировка";
	
	Запрос.УстановитьПараметр("ТЗ_Периоды", ТЗ_Периоды);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоГода(ДобавитьМесяц(Период, -12)));
	Запрос.УстановитьПараметр("КонецПериода", КонецГода(Период));
	Запрос.УстановитьПараметр("ТочкиРегистрацииМЕС", ТочкиРегистрацииМЕС);
	Запрос.УстановитьПараметр("ТочкиРегистрацииOff", ТочкиРегистрацииOff);
	Запрос.УстановитьПараметр("ТочкиПроверкиДляОстатков", ТочкиПроверкиДляОстатков);
	Запрос.УстановитьПараметр("ТочкиПроверкиДляОборотов", ТочкиПроверкиДляОборотов);
	ТЗ_Источник = Запрос.Выполнить().Выгрузить();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, ДанныеРасшифровки);
	
	ВнешниеНаборыДанных = Новый Структура;
    ВнешниеНаборыДанных.Вставить("ТЗ_ДНА", ТЗ_Источник);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
	
	ДокументРезультат.Очистить();
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры

#КонецОбласти
