////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

Процедура СформироватьОтчет(ТабДокумент,ВариантОтчета,ДатаОтчета, ТекстОшибки ="", ПараметрыВывода = Неопределено) Экспорт		
	ТекстОшибки = "";
	ТабДокумент.Очистить();
	Если НЕ ЗначениеЗаполнено(ДатаОтчета)Тогда
		ДатаОтчета = ТекущаяДата();
	КонецЕсли; 
	ТабДокумент = Новый ТабличныйДокумент;
	// инициализация  переменных
	КоличествоДефектовПопадающихВТОП = 10;
	КоличествоДней = 10;//Было 11
	КоличествоНедель = 6;
	КоличествоМесяцев = 6;
	
	Макет = ПолучитьМакет("Макет");
	ТабДокумент = Новый ТабличныйДокумент;
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ТабДокумент.Вывести(ОбластьМакета);
	
	ТаблицаПериодов = ПолучитьПериоды(ДатаОтчета,КоличествоМесяцев,КоличествоНедель,КоличествоДней);
	
	ТаблицаДанных = ПолучитьТаблицуДанных(ТаблицаПериодов,ВариантОтчета,ДатаОтчета);
	СформироватьДиаграмму(ТабДокумент,Макет,ТаблицаПериодов,ТаблицаДанных,ВариантОтчета);
	
	СформироватьСводнуюТаблицу(ТабДокумент,Макет,ТаблицаПериодов,ТаблицаДанных,ВариантОтчета);
	
	ДетальныеДанные = ПолучитьДетальныеДанныеПоДефектам(ТаблицаПериодов,ВариантОтчета);
	СформироватьТОП10(ТабДокумент,Макет,ДетальныеДанные,КоличествоДефектовПопадающихВТОП,ТаблицаПериодов.Количество());
	СформироватьТОП10(ТабДокумент,Макет,ДетальныеДанные,КоличествоДефектовПопадающихВТОП,ТаблицаПериодов.Количество()-КоличествоДней);
	    	
КонецПроцедуры

Функция ПолучитьОписаниеПроизводственныхОтчетов() Экспорт
	 
	 СтруктураНастроек = Справочники.НастройкаОтчетов_MesReports.ПолучитьОписаниеПроизводственныхОтчетовПоУмолчанию();
	 
	 СтруктураНастроек.МассивТиповВариантовОтчета.Добавить(Тип("СправочникСсылка.ПоказателиУровняДефектности"));
	 	 
	 Возврат СтруктураНастроек;
	 
 КонецФункции
//
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ПолучитьПериоды(ДатаОтчета,КоличествоМесяцев,КоличествоНедель,КоличествоДней)
	перем День;
	
	День = 86400;
	
	Периоды = новый ТаблицаЗначений;
	Периоды.Колонки.Добавить("НомерПериода",Новый ОписаниеТипов("Число"));
	Периоды.Колонки.Добавить("ГруппаКолонок",Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(10)));
	Периоды.Колонки.Добавить("ДатаНачала",Новый ОписаниеТипов("Дата"));
	Периоды.Колонки.Добавить("ДатаОкончания",Новый ОписаниеТипов("Дата"));
	Периоды.Колонки.Добавить("ЧастьДаты1",Новый ОписаниеТипов("Строка"));
	Периоды.Колонки.Добавить("ЧастьДаты2",Новый ОписаниеТипов("Строка"));
	// а здесь позже будет таблица дефектов, чтобы определить перечень топ дефектов
	Периоды.Колонки.Добавить("Дефекты");
	Периоды.Колонки.Добавить("КоличествоДефектов",Новый ОписаниеТипов("Число"));
	//КонДень = КонецДня(ДатаОтчета-86400);
	
	Год = МодельныйГод(ДатаОтчета);  //Миша
	// заполним периоды отчета
	// год 
	Период = Периоды.Добавить();
	Период.ГруппаКолонок = "Год";
	Период.ДатаНачала = Дата(Год-1,8,1,0,0,0);  //НачалоГода(ДатаОтчета);
	Период.ДатаОкончания = Дата(Год,7,31,23,59,59);//КонецГода(ДатаОтчета);
	Период.ЧастьДаты1 = "";
	Период.ЧастьДаты2 = Строка(Формат(Год,"ЧГ="));
	//месяцы	
	Для ТекНомерМесяца=1 По КоличествоМесяцев Цикл
		
		ДатаТекМесяца = ДобавитьМесяц(ДатаОтчета,-1*КоличествоМесяцев+ТекНомерМесяца);
		Период = Периоды.Добавить();
		Период.ГруппаКолонок = "Месяцы";
		Период.ДатаНачала = НачалоМесяца(ДатаТекМесяца);
		Период.ДатаОкончания = КонецМесяца(ДатаТекМесяца);
		Период.ЧастьДаты1 = "";
		Период.ЧастьДаты2 = Формат(ДатаТекМесяца, "Л=en_GB; ДФ=MMM");
	КонецЦикла;
	
	
	//недели	
	Для ТекНомерНедели=1 По КоличествоНедель Цикл
		
		//ДатаОтсчета для недель должна быть конец недели(либо текущей либо прошлой)
		Если НЕ КонецНедели(ДатаОтчета) = КонецДня(ДатаОтчета) тогда
			ДатаКонцаПредыдущейНедели = НачалоНедели(ДатаОтчета)-День;
			ДатаТекНедели = НачалоДня(НачалоНедели(ДатаКонцаПредыдущейНедели)-День-День*7*(КоличествоНедель-ТекНомерНедели));		
		иначе
			ДатаТекНедели = НачалоДня(НачалоНедели(ДатаОтчета)-День-День*7*(КоличествоНедель-ТекНомерНедели));	
		КонецЕсли;
		
		//ДатаТекНедели = НачалоДня(НачалоНедели(ДатаОтчета)-День-День*7*(КоличествоНедель-ТекНомерНедели));
		//Убираем неделю если она кончается позже даты окончания
		//Если КонецДня(ДатаТекНедели+6*День)>ДатаОтчета тогда
		//	Продолжить;
		//КонецЕсли;
		//******************************************************
		Период = Периоды.Добавить();
		Период.ГруппаКолонок = "Недели";
		Период.ДатаНачала = ДатаТекНедели;
		//Период.ДатаОкончания = КонецДня(ДатаТекНедели+6*День);
		Период.ДатаОкончания = ?(КонецДня(ДатаТекНедели+6*День)>ДатаОтчета,ДатаОтчета,КонецДня(ДатаТекНедели+6*День));
		//Период.ЧастьДаты1 = Формат(ДатаТекНедели, "ДФ=dd") ;
		Период.ЧастьДаты1 = Формат(?(КонецДня(ДатаТекНедели+6*День)>ДатаОтчета,ДатаОтчета,КонецДня(ДатаТекНедели+6*День)), "ДФ=dd");
		//Период.ЧастьДаты2 = Формат(ДатаТекНедели, "Л=en_GB; ДФ=MMM");
		Период.ЧастьДаты2 = Формат(Период.ДатаОкончания, "Л=en_GB; ДФ=MMM");
	КонецЦикла;
	
	//даты	
	// сначала период "20 дней", 
	Период = Периоды.Добавить();
	Период.ГруппаКолонок = "Дни";
	Период.ДатаНачала = НачалоДня(ДатаОтчета-20*День);
	Период.ДатаОкончания = КонецДня(ДатаОтчета-День);
	Период.ЧастьДаты1 = "20" ;
	Период.ЧастьДаты2 = "days";
	
	//теперь - отдельные дни
	Для ТекНомерДня=1 По КоличествоДней Цикл
		
		ДатаТекДня = НачалоДня(НачалоДня(ДатаОтчета)-День*1+(День*(ТекНомерДня-КоличествоДней)));
		Период = Периоды.Добавить();
		Период.ГруппаКолонок = "Дни";
		Период.ДатаНачала = ДатаТекДня;
		Период.ДатаОкончания = КонецДня(ДатаТекДня);
		Период.ЧастьДаты1 = Формат(ДатаТекДня, "ДФ=dd") ;
		Период.ЧастьДаты2 = Формат(ДатаТекДня, "Л=en_GB; ДФ=MMM");
	КонецЦикла;
	
	Счетчик = 1;
	Для каждого период Из Периоды Цикл
		
		период.НомерПериода = Счетчик;
		Счетчик =Счетчик+ 1;
		
	КонецЦикла; 	
	Возврат Периоды;
	
КонецФункции // ИнициализацияПериодов()

Функция МодельныйГод(ДатаОтчета)
	
	ТекущийМесяц = Месяц(ДатаОтчета);
	ТекущийГод = Год(ДатаОтчета);
	
	Если ТекущийМесяц > 8 Тогда
		ТекущийГод = ТекущийГод +1;
	КонецЕсли;	
	
	возврат ТекущийГод
КонецФункции	


Функция ПолучитьТаблицуДанных(ТаблицаПериодов,ВариантОтчета,ДатаОтчета)
	Если ВариантОтчета.ТипПоказателя = 0 Тогда
	   Если ВариантОтчета.ВидПоказателя = Перечисления.ВидыПоказателейДефектности.С1000 Тогда
	       Данные = ПолучитьЗначениеПоказателяС1000(ТаблицаПериодов,ВариантОтчета,ДатаОтчета);
	   ИначеЕсли ВариантОтчета.ВидПоказателя = Перечисления.ВидыПоказателейДефектности.FR Тогда
	       Данные = ПолучитьЗначениеПоказателяFR(ТаблицаПериодов,ВариантОтчета,ДатаОтчета);
	   Иначе
	       Данные = ПолучитьЗначениеПоказателяFTT(ТаблицаПериодов,ВариантОтчета,ДатаОтчета);
	   КонецЕсли;
   Иначе
	   СписокПоказателей = новый СписокЗначений;
		Для каждого СоставнойПоказатель Из ВариантОтчета.Показатели Цикл
			Если СоставнойПоказатель.Показатель.ВидПоказателя = Перечисления.ВидыПоказателейДефектности.С1000 Тогда
				СписокПоказателей.Добавить(ПолучитьЗначениеПоказателяС1000(ТаблицаПериодов,СоставнойПоказатель.Показатель,ДатаОтчета));
			ИначеЕсли СоставнойПоказатель.Показатель.ВидПоказателя = Перечисления.ВидыПоказателейДефектности.FR Тогда
				СписокПоказателей.Добавить(ПолучитьЗначениеПоказателяFR(ТаблицаПериодов,СоставнойПоказатель.Показатель,ДатаОтчета, Истина));
			Иначе
				СписокПоказателей.Добавить(ПолучитьЗначениеПоказателяFTT(ТаблицаПериодов,СоставнойПоказатель.Показатель,ДатаОтчета, Истина));
			КонецЕсли;
		КонецЦикла;
		Данные = ПеремножитьПоказатели(СписокПоказателей, ВариантОтчета);
	КонецЕсли; 
	
	Возврат Данные;
КонецФункции	

Функция ПолучитьЗначениеПоказателяС1000(ТаблицаПериодов,ВариантОтчета,ДатаОтчета)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	
		"ВЫБРАТЬ
		|	ТЗПериоды.НомерПериода,
		|	ТЗПериоды.ДатаНачала,
		|	ТЗПериоды.ДатаОкончания,
		|	ТЗПериоды.ГруппаКолонок
		|ПОМЕСТИТЬ Периоды
		|ИЗ
		|	&ТЗПериоды КАК ТЗПериоды
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Периоды.НомерПериода,
		|	ДвижениеЗаказов.Заказ КАК Заказ
		|ПОМЕСТИТЬ ВыпущенныеМашины
		|ИЗ
		|	Периоды КАК Периоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДвижениеЗаказов КАК ДвижениеЗаказов
		|		ПО (ВЫБОР
		|				КОГДА ДвижениеЗаказов.ДатаСмены = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|					ТОГДА ДвижениеЗаказов.Период <= ВЫБОР
		|							КОГДА Периоды.ДатаОкончания > &ДатаОкончания
		|								ТОГДА &ДатаОкончания
		|							ИНАЧЕ Периоды.ДатаОкончания
		|						КОНЕЦ
		|				ИНАЧЕ ДвижениеЗаказов.ДатаСмены <= ВЫБОР
		|						КОГДА Периоды.ДатаОкончания > &ДатаОкончания
		|							ТОГДА &ДатаОкончания
		|						ИНАЧЕ Периоды.ДатаОкончания
		|					КОНЕЦ
		|			КОНЕЦ)
		|			И (ВЫБОР
		|				КОГДА ДвижениеЗаказов.ДатаСмены = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|					ТОГДА ДвижениеЗаказов.Период >= Периоды.ДатаНачала
		|				ИНАЧЕ ДвижениеЗаказов.ДатаСмены >= Периоды.ДатаНачала
		|			КОНЕЦ)
		|ГДЕ
		|	ДвижениеЗаказов.ТочкаРегистрации В(&ТочкиРегистрации)
		|	И ДвижениеЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВыпущенныеМашины.НомерПериода,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВыпущенныеМашины.Заказ) КАК ПроверенныхМашин
		|ПОМЕСТИТЬ КоличествоВыпущенныхМашин
		|ИЗ
		|	ВыпущенныеМашины КАК ВыпущенныеМашины
		|
		|СГРУППИРОВАТЬ ПО
		|	ВыпущенныеМашины.НомерПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Консерны.Заказ,
		|	СУММА(ВЫБОР
		|			КОГДА Консерны.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА Консерны.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Количество
		|ПОМЕСТИТЬ СписокДефектов
		|ИЗ
		|	РегистрНакопления.Консерны КАК Консерны
		|ГДЕ
		|	Консерны.ТочкаПроверкиКачества В(&ТочкиПроверкиКачества)
		|	И Консерны.Заказ В
		|			(ВЫБРАТЬ
		|				ВыпущенныеМашины.Заказ
		|			ИЗ
		|				ВыпущенныеМашины КАК ВыпущенныеМашины)
		|
		|СГРУППИРОВАТЬ ПО
		|	Консерны.Заказ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокДефектов.Заказ,
		|	СУММА(ЕСТЬNULL(СписокДефектов.Количество, 0)) КАК КоличествоДефектов
		|ПОМЕСТИТЬ ОбщаяТаблицаДефектов
		|ИЗ
		|	СписокДефектов КАК СписокДефектов
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокДефектов.Заказ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВыпущенныеМашины.НомерПериода,
		|	СУММА(ЕСТЬNULL(ОбщаяТаблицаДефектов.КоличествоДефектов, 0)) КАК КоличествоДефектов
		|ПОМЕСТИТЬ ПоказателиДефектов
		|ИЗ
		|	ВыпущенныеМашины КАК ВыпущенныеМашины
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОбщаяТаблицаДефектов КАК ОбщаяТаблицаДефектов
		|		ПО ВыпущенныеМашины.Заказ = ОбщаяТаблицаДефектов.Заказ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВыпущенныеМашины.НомерПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Периоды.НомерПериода КАК НомерПериода,
		|	Периоды.ДатаНачала,
		|	Периоды.ДатаОкончания,
		|	КоличествоВыпущенныхМашин.ПроверенныхМашин,
		|	ПоказателиДефектов.КоличествоДефектов
		|ПОМЕСТИТЬ ПромежуточныйСвод
		|ИЗ
		|	Периоды КАК Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоВыпущенныхМашин КАК КоличествоВыпущенныхМашин
		|		ПО Периоды.НомерПериода = КоличествоВыпущенныхМашин.НомерПериода
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПоказателиДефектов КАК ПоказателиДефектов
		|		ПО Периоды.НомерПериода = ПоказателиДефектов.НомерПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПромежуточныйСвод.НомерПериода КАК НомерПериода,
		|	ЕСТЬNULL(ПромежуточныйСвод.КоличествоДефектов * (1000 / ПромежуточныйСвод.ПроверенныхМашин), 0) КАК ЗначениеПоказателя
		|ИЗ
		|	ПромежуточныйСвод КАК ПромежуточныйСвод
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерПериода";

	
	Запрос.УстановитьПараметр("ТЗПериоды", ТаблицаПериодов);
	Запрос.УстановитьПараметр("ТочкиРегистрации", ВариантОтчета.ТочкиРегистрации.Выгрузить(,"ТочкаРегистрации"));
	Запрос.УстановитьПараметр("ТочкиПроверкиКачества", ВариантОтчета.ТочкиПроверкиКачества.Выгрузить(,"ТочкаПроверкиКачества"));
	Запрос.УстановитьПараметр("ДатаНачала", ТаблицаПериодов[0].ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаОтчета-86400));
	                                                
	Результат = Запрос.Выполнить();
	ДанныеЗапроса = Результат.Выгрузить();

	Возврат  ДанныеЗапроса
КонецФункции	

Функция ПолучитьЗначениеПоказателяFR(ТаблицаПериодов,ВариантОтчета, ДатаОтчета, Коэффициент = ЛОЖЬ)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	
		"ВЫБРАТЬ
		|	ТЗПериоды.НомерПериода,
		|	ТЗПериоды.ДатаНачала,
		|	ТЗПериоды.ДатаОкончания,
		|	ТЗПериоды.ГруппаКолонок
		|ПОМЕСТИТЬ Периоды
		|ИЗ
		|	&ТЗПериоды КАК ТЗПериоды
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Периоды.НомерПериода,
		|	ДвижениеЗаказов.Заказ КАК Заказ
		|ПОМЕСТИТЬ ВыпущенныеМашины
		|ИЗ
		|	Периоды КАК Периоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДвижениеЗаказов КАК ДвижениеЗаказов
		|		ПО (ВЫБОР
		|				КОГДА ДвижениеЗаказов.ДатаСмены = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|					ТОГДА ДвижениеЗаказов.Период <= ВЫБОР
		|							КОГДА Периоды.ДатаОкончания > &ДатаОкончания
		|								ТОГДА &ДатаОкончания
		|							ИНАЧЕ Периоды.ДатаОкончания
		|						КОНЕЦ
		|				ИНАЧЕ ДвижениеЗаказов.ДатаСмены <= ВЫБОР
		|						КОГДА Периоды.ДатаОкончания > &ДатаОкончания
		|							ТОГДА &ДатаОкончания
		|						ИНАЧЕ Периоды.ДатаОкончания
		|					КОНЕЦ
		|			КОНЕЦ)
		|			И (ВЫБОР
		|				КОГДА ДвижениеЗаказов.ДатаСмены = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|					ТОГДА ДвижениеЗаказов.Период >= Периоды.ДатаНачала
		|				ИНАЧЕ ДвижениеЗаказов.ДатаСмены >= Периоды.ДатаНачала
		|			КОНЕЦ)
		|ГДЕ
		|	ДвижениеЗаказов.ТочкаРегистрации В(&ТочкиРегистрации)
		|	И ДвижениеЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонсерныОбороты.Заказ
		|ПОМЕСТИТЬ МашиныСДефектами
		|ИЗ
		|	РегистрНакопления.Консерны.Обороты(
		|			,
		|			,
		|			,
		|			Консерн.ТочкаПроверкиКачества В (&ТочкиПроверкиКачества)
		|				И Заказ В
		|					(ВЫБРАТЬ
		|						ВыпущенныеМашины.Заказ
		|					ИЗ
		|						ВыпущенныеМашины КАК ВыпущенныеМашины)) КАК КонсерныОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВыпущенныеМашины.НомерПериода,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВыпущенныеМашины.Заказ) КАК МашинБезДефектов
		|ПОМЕСТИТЬ МашиныБезДефектов
		|ИЗ
		|	ВыпущенныеМашины КАК ВыпущенныеМашины
		|ГДЕ
		|	НЕ ВыпущенныеМашины.Заказ В
		|				(ВЫБРАТЬ
		|					МашиныСДефектами.Заказ
		|				ИЗ
		|					МашиныСДефектами КАК МашиныСДефектами)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВыпущенныеМашины.НомерПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВыпущенныеМашины.НомерПериода,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВыпущенныеМашины.Заказ) КАК ПроверенныхМашин
		|ПОМЕСТИТЬ КоличествоВыпущенныхМашин
		|ИЗ
		|	ВыпущенныеМашины КАК ВыпущенныеМашины
		|
		|СГРУППИРОВАТЬ ПО
		|	ВыпущенныеМашины.НомерПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Консерны.Заказ,
		|	СУММА(ВЫБОР
		|			КОГДА Консерны.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|				ТОГДА Консерны.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Количество
		|ПОМЕСТИТЬ СписокДефектов
		|ИЗ
		|	РегистрНакопления.Консерны КАК Консерны
		|ГДЕ
		|	Консерны.ТочкаПроверкиКачества В(&ТочкиПроверкиКачества)
		|	И Консерны.Заказ В
		|			(ВЫБРАТЬ
		|				ВыпущенныеМашины.Заказ
		|			ИЗ
		|				ВыпущенныеМашины КАК ВыпущенныеМашины)
		|
		|СГРУППИРОВАТЬ ПО
		|	Консерны.Заказ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Периоды.НомерПериода КАК НомерПериода,
		|	Периоды.ДатаНачала,
		|	Периоды.ДатаОкончания,
		|	КоличествоВыпущенныхМашин.ПроверенныхМашин,
		|	МашиныБезДефектов.МашинБезДефектов
		|ПОМЕСТИТЬ ПромежуточныйСвод
		|ИЗ
		|	Периоды КАК Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоВыпущенныхМашин КАК КоличествоВыпущенныхМашин
		|		ПО Периоды.НомерПериода = КоличествоВыпущенныхМашин.НомерПериода
		|		ЛЕВОЕ СОЕДИНЕНИЕ МашиныБезДефектов КАК МашиныБезДефектов
		|		ПО Периоды.НомерПериода = МашиныБезДефектов.НомерПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПромежуточныйСвод.НомерПериода КАК НомерПериода,
		|	ЕСТЬNULL(ПромежуточныйСвод.МашинБезДефектов / (ПромежуточныйСвод.ПроверенныхМашин / "+?(Коэффициент,"1","100")+"), 0) КАК ЗначениеПоказателя
		|ИЗ
		|	ПромежуточныйСвод КАК ПромежуточныйСвод
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерПериода";

	
	Запрос.УстановитьПараметр("ТЗПериоды", ТаблицаПериодов);
	Запрос.УстановитьПараметр("ТочкиРегистрации", ВариантОтчета.ТочкиРегистрации.Выгрузить(,"ТочкаРегистрации"));
	Запрос.УстановитьПараметр("ТочкиПроверкиКачества", ВариантОтчета.ТочкиПроверкиКачества.Выгрузить(,"ТочкаПроверкиКачества"));
	Запрос.УстановитьПараметр("ДатаНачала", ТаблицаПериодов[0].ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаОтчета-86400));
	                                                
	Результат = Запрос.Выполнить();
	ДанныеЗапроса = Результат.Выгрузить();

	Возврат  ДанныеЗапроса
КонецФункции	

Функция ПолучитьЗначениеПоказателяFTT(ТаблицаПериодов,ВариантОтчета, ДатаОтчета, Коэффициент = ЛОЖЬ)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	
		"ВЫБРАТЬ
		|	ТЗПериоды.НомерПериода,
		|	ТЗПериоды.ДатаНачала,
		|	ТЗПериоды.ДатаОкончания,
		|	ТЗПериоды.ГруппаКолонок
		|ПОМЕСТИТЬ Периоды
		|ИЗ
		|	&ТЗПериоды КАК ТЗПериоды
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Периоды.НомерПериода,
		|	ДвижениеЗаказов.Заказ КАК Заказ
		|ПОМЕСТИТЬ ВыпущенныеМашины
		|ИЗ
		|	Периоды КАК Периоды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДвижениеЗаказов КАК ДвижениеЗаказов
		|		ПО (ВЫБОР
		|				КОГДА ДвижениеЗаказов.ДатаСмены = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|					ТОГДА ДвижениеЗаказов.Период <= ВЫБОР
		|							КОГДА Периоды.ДатаОкончания > &ДатаОкончания
		|								ТОГДА &ДатаОкончания
		|							ИНАЧЕ Периоды.ДатаОкончания
		|						КОНЕЦ
		|				ИНАЧЕ ДвижениеЗаказов.ДатаСмены <= ВЫБОР
		|						КОГДА Периоды.ДатаОкончания > &ДатаОкончания
		|							ТОГДА &ДатаОкончания
		|						ИНАЧЕ Периоды.ДатаОкончания
		|					КОНЕЦ
		|			КОНЕЦ)
		|			И (ВЫБОР
		|				КОГДА ДвижениеЗаказов.ДатаСмены = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|					ТОГДА ДвижениеЗаказов.Период >= Периоды.ДатаНачала
		|				ИНАЧЕ ДвижениеЗаказов.ДатаСмены >= Периоды.ДатаНачала
		|			КОНЕЦ)
		|ГДЕ
		|	ДвижениеЗаказов.ТочкаРегистрации В(&ТочкиРегистрации)
		|	И ДвижениеЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонсерныОбороты.Заказ
		|ПОМЕСТИТЬ МашиныСДефектами
		|ИЗ
		|	РегистрНакопления.Консерны.Обороты(
		|			,
		|			,
		|			,
		|			Консерн.ТочкаПроверкиКачества В (&ТочкиПроверкиКачества)
		|				И Заказ В
		|					(ВЫБРАТЬ
		|						ВыпущенныеМашины.Заказ
		|					ИЗ
		|						ВыпущенныеМашины КАК ВыпущенныеМашины)) КАК КонсерныОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВыпущенныеМашины.НомерПериода,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВыпущенныеМашины.Заказ) КАК МашинБезДефектов
		|ПОМЕСТИТЬ МашиныБезДефектов
		|ИЗ
		|	ВыпущенныеМашины КАК ВыпущенныеМашины
		|ГДЕ
		|	НЕ ВыпущенныеМашины.Заказ В
		|				(ВЫБРАТЬ
		|					МашиныСДефектами.Заказ
		|				ИЗ
		|					МашиныСДефектами КАК МашиныСДефектами)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВыпущенныеМашины.НомерПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВыпущенныеМашины.НомерПериода,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВыпущенныеМашины.Заказ) КАК ПроверенныхМашин
		|ПОМЕСТИТЬ КоличествоВыпущенныхМашин
		|ИЗ
		|	ВыпущенныеМашины КАК ВыпущенныеМашины
		|
		|СГРУППИРОВАТЬ ПО
		|	ВыпущенныеМашины.НомерПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Консерны.Заказ,
		|	ВЫБОР
		|		КОГДА Консерны.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			ТОГДА Консерны.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Устранено
		|ПОМЕСТИТЬ СписокДефектов
		|ИЗ
		|	РегистрНакопления.Консерны КАК Консерны
		|ГДЕ
		|	Консерны.ТочкаПроверкиКачества В(&ТочкиПроверкиКачества)
		|	И Консерны.Заказ В
		|			(ВЫБРАТЬ
		|				ВыпущенныеМашины.Заказ
		|			ИЗ
		|				ВыпущенныеМашины КАК ВыпущенныеМашины)
		|
		|СГРУППИРОВАТЬ ПО
		|	Консерны.Заказ,
		|	ВЫБОР
		|		КОГДА Консерны.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			ТОГДА Консерны.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокДефектов.Заказ,
		|	СУММА(ЕСТЬNULL(СписокДефектов.Устранено, 0)) КАК УстраненныеДефекты
		|ПОМЕСТИТЬ ОбщаяТаблицаДефектов
		|ИЗ
		|	СписокДефектов КАК СписокДефектов
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокДефектов.Заказ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВыпущенныеМашины.НомерПериода,
		|	СУММА(ЕСТЬNULL(ОбщаяТаблицаДефектов.УстраненныеДефекты, 0)) КАК УстраненныеДефекты
		|ПОМЕСТИТЬ ПоказателиДефектов
		|ИЗ
		|	ВыпущенныеМашины КАК ВыпущенныеМашины
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОбщаяТаблицаДефектов КАК ОбщаяТаблицаДефектов
		|		ПО ВыпущенныеМашины.Заказ = ОбщаяТаблицаДефектов.Заказ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВыпущенныеМашины.НомерПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Периоды.НомерПериода КАК НомерПериода,
		|	Периоды.ДатаНачала,
		|	Периоды.ДатаОкончания,
		|	КоличествоВыпущенныхМашин.ПроверенныхМашин,
		|	МашиныБезДефектов.МашинБезДефектов,
		|	ПоказателиДефектов.УстраненныеДефекты
		|ПОМЕСТИТЬ ПромежуточныйСвод
		|ИЗ
		|	Периоды КАК Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ КоличествоВыпущенныхМашин КАК КоличествоВыпущенныхМашин
		|		ПО Периоды.НомерПериода = КоличествоВыпущенныхМашин.НомерПериода
		|		ЛЕВОЕ СОЕДИНЕНИЕ МашиныБезДефектов КАК МашиныБезДефектов
		|		ПО Периоды.НомерПериода = МашиныБезДефектов.НомерПериода
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПоказателиДефектов КАК ПоказателиДефектов
		|		ПО Периоды.НомерПериода = ПоказателиДефектов.НомерПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПромежуточныйСвод.НомерПериода КАК НомерПериода,
		|	ЕСТЬNULL((ПромежуточныйСвод.МашинБезДефектов + ПромежуточныйСвод.УстраненныеДефекты) / ПромежуточныйСвод.ПроверенныхМашин * "+?(Коэффициент,"1","100")+", 0) КАК ЗначениеПоказателя
		|ИЗ
		|	ПромежуточныйСвод КАК ПромежуточныйСвод
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерПериода";

	
	Запрос.УстановитьПараметр("ТЗПериоды", ТаблицаПериодов);
	Запрос.УстановитьПараметр("ТочкиРегистрации", ВариантОтчета.ТочкиРегистрации.Выгрузить(,"ТочкаРегистрации"));
	Запрос.УстановитьПараметр("ТочкиПроверкиКачества", ВариантОтчета.ТочкиПроверкиКачества.Выгрузить(,"ТочкаПроверкиКачества"));
	Запрос.УстановитьПараметр("ДатаНачала", ТаблицаПериодов[0].ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаОтчета-86400));
	                                                
	Результат = Запрос.Выполнить();
	ДанныеЗапроса = Результат.Выгрузить();

	Возврат  ДанныеЗапроса
КонецФункции	

Функция ПеремножитьПоказатели(СписокПоказателей, ВариантОтчета)

	Запрос = Новый Запрос;
	Счетчик = 1;
	Для каждого Показатель Из СписокПоказателей Цикл
		Запрос.Текст = Запрос.Текст +
			"ВЫБРАТЬ
			|	ТЗПоказатели.НомерПериода,
			|	ТЗПоказатели.ЗначениеПоказателя КАК ЗначениеПоказателя"+Счетчик+"
			|ПОМЕСТИТЬ Показатель"+Счетчик+"
			|ИЗ
			|	&ТЗПоказатели"+Счетчик+" КАК ТЗПоказатели
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|";
		Счетчик = Счетчик + 1;
	КонецЦикла;
	
	Запрос.Текст = Запрос.Текст +
		"ВЫБРАТЬ
		|	Показатель1.НомерПериода,
		|	Показатель1.ЗначениеПоказателя1";
		
	Счетчик = 1;
	Для каждого Показатель Из СписокПоказателей Цикл
		Если Счетчик = 1 Тогда
			Счетчик = Счетчик + 1;
		    Продолжить;
		КонецЕсли;
		Запрос.Текст = Запрос.Текст +
			" * Показатель"+Счетчик+".ЗначениеПоказателя"+Счетчик;
		Счетчик = Счетчик + 1;
	КонецЦикла;
	
	Запрос.Текст = Запрос.Текст +
		" КАК ЗначениеПоказателя
		|ИЗ 
		|	Показатель1 КАК Показатель1
		|";
		
	Счетчик = 1;
	Для каждого Показатель Из СписокПоказателей Цикл
		Если Счетчик = 1 Тогда
			Счетчик = Счетчик + 1;
		    Продолжить;
		КонецЕсли;
		Запрос.Текст = Запрос.Текст +
			" ВНУТРЕННЕЕ СОЕДИНЕНИЕ Показатель"+Счетчик+" КАК Показатель"+Счетчик+"
			|	ПО Показатель1.НомерПериода = Показатель"+Счетчик+".НомерПериода
			|";
		Счетчик = Счетчик + 1;
	КонецЦикла;
	
	Счетчик = 1;
	Для каждого Показатель Из СписокПоказателей Цикл
		Запрос.УстановитьПараметр("ТЗПоказатели"+Счетчик, Показатель.Значение);
		Счетчик = Счетчик + 1;
	КонецЦикла;
	                                                
	Результат = Запрос.Выполнить();
	ДанныеЗапроса = Результат.Выгрузить();

	Возврат  ДанныеЗапроса
КонецФункции	


Процедура СформироватьДиаграмму(ТабДокумент,Макет,ТаблицаПериодов,ТаблицаДанных,ВариантОтчета)
	ОбластьДиагарммы = Макет.ПолучитьОбласть("Диаграмма");
	
	Рисунок = ОбластьДиагарммы.Рисунки.D1;
 	ДиаграммаОбъект = Рисунок.Объект;
	
	ДиаграммаОбъект.Очистить();
	
	ДиаграммаОбъект.МаксимумСерийКоличество	= 1;	
	
	Серия = ДиаграммаОбъект.УстановитьСерию(ВариантОтчета.Наименование);
	Серия.Текст = ВариантОтчета.Наименование;
	
	Для Каждого Строка Из ТаблицаДанных Цикл
		ТекПериод = ТаблицаПериодов.Найти(Строка.НомерПериода,"НомерПериода");
		Если НЕ (ТекПериод = Неопределено) Тогда
			
			Точка = ДиаграммаОбъект.УстановитьТочку(ТекПериод.ЧастьДаты2 + " "+ТекПериод.ЧастьДаты1);
            Точка.Значение = Строка.ЗначениеПоказателя;
            Точка.Текст = ТекПериод.ЧастьДаты2 + " "+ТекПериод.ЧастьДаты1;
			
			ДиаграммаОбъект.УстановитьЗначение(Точка,Серия, Строка.ЗначениеПоказателя);

		КонецЕсли;
	КонецЦикла;
	
	ДиаграммаОбъект.Обновление = Истина;
	
	ТабДокумент.Вывести(ОбластьДиагарммы);
	
КонецПроцедуры	

Процедура СформироватьСводнуюТаблицу(ТабДокумент,Макет,ТаблицаПериодов,ДанныеЗапроса,ВариантОтчета)
	
	// начнем вывод таблицы
	// шапка таблицы
	Шапка = Макет.ПолучитьОбласть("Строка_ЗаголовокСвод");
	ТабДокумент.Вывести(Шапка);
	
	// строки
	Строка_Заголовки = Макет.ПолучитьОбласть("Строка_Свод|Колонка_Заголовок");
	Строка_Заголовки.Параметры.НаименованиеПоказателя = ВариантОтчета.Наименование;
	ТабДокумент.Вывести(Строка_Заголовки);
	
	// собственно вывод данных. Перебираем все периоды и выводим из запроса данные по этим периодам
	Для каждого Период Из ТаблицаПериодов Цикл
		
		Строка_Данные = Макет.ПолучитьОбласть("Строка_Свод|Колонка");
		
		// найдем данные за текущий период
		ДанныеЗаТекПериод = ДанныеЗапроса.Найти(Период.НомерПериода,"НомерПериода");
		Если НЕ (ДанныеЗаТекПериод = Неопределено) Тогда
			
			Строка_Данные.Параметры.Заполнить(ДанныеЗаТекПериод);
			
		КонецЕсли; 
		ТабДокумент.Присоединить(Строка_Данные);
	КонецЦикла; 
	
	//пустая строка-разделитель
	Строка_Разделитель = Макет.ПолучитьОбласть("Строка_ПодвалСвод");
	ТабДокумент.Вывести(Строка_Разделитель);
	
КонецПроцедуры

Функция ПолучитьДетальныеДанныеПоДефектам(ТаблицаПериодов,ВариантОтчета)
	
	Если ВариантОтчета.ТипПоказателя = 0 Тогда
		ТочкиРегистрацииВЗапрос = ВариантОтчета.ТочкиРегистрации.Выгрузить(,"ТочкаРегистрации");
		ТочкиПроверкиКачестваВЗапрос = ВариантОтчета.ТочкиПроверкиКачества.Выгрузить(,"ТочкаПроверкиКачества");
	Иначе
		ТочкиРегистрацииВЗапрос = новый СписокЗначений;
		ТочкиПроверкиКачестваВЗапрос = новый СписокЗначений;
		Для каждого СоставнойПоказатель Из ВариантОтчета.Показатели Цикл
			Для каждого Точка Из СоставнойПоказатель.Показатель.ТочкиРегистрации Цикл
				ТочкиРегистрацииВЗапрос.Добавить(Точка.ТочкаРегистрации);
			КонецЦикла;
			Для каждого ТочкаПК Из СоставнойПоказатель.Показатель.ТочкиПроверкиКачества Цикл
				ТочкиПроверкиКачестваВЗапрос.Добавить(ТочкаПК.ТочкаПроверкиКачества);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЗПериоды.НомерПериода,
	|	ТЗПериоды.ДатаНачала,
	|	ТЗПериоды.ДатаОкончания,
	|	ТЗПериоды.ГруппаКолонок
	|ПОМЕСТИТЬ Периоды
	|ИЗ
	|	&ТЗПериоды КАК ТЗПериоды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.НомерПериода,
	|	ДвижениеЗаказов.Заказ
	|ПОМЕСТИТЬ МашиныПрошедшиеТочкуРегистрации
	|ИЗ
	|	Периоды КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ДвижениеЗаказов КАК ДвижениеЗаказов
	|		ПО (ДвижениеЗаказов.Период >= Периоды.ДатаНачала)
	|			И (ДвижениеЗаказов.Период <= Периоды.ДатаОкончания)
	|ГДЕ
	|	ДвижениеЗаказов.ТочкаРегистрации В(&ТочкиРегистрации)
	|	И ДвижениеЗаказов.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Периоды.НомерПериода КАК НомерПериода,
	|	Консерны.Дефект.Наименование + "" - "" + Консерны.ИнспектируемыйЭлемент.Наименование КАК Дефект,
	|	Консерны.Заказ КАК КоличествоДефектов
	|ПОМЕСТИТЬ Дефекты
	|ИЗ
	|	РегистрНакопления.Консерны КАК Консерны
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Периоды КАК Периоды
	|		ПО Консерны.Период >= Периоды.ДатаНачала
	|			И Консерны.Период <= Периоды.ДатаОкончания
	|ГДЕ
	|	Консерны.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И Консерны.ТочкаПроверкиКачества В(&ТочкиПроверкиКачества)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Дефекты.НомерПериода КАК НомерПериода,
	|	Дефекты.Дефект КАК Дефект,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Дефекты.КоличествоДефектов) КАК КоличествоДефектов
	|ИЗ
	|	Дефекты КАК Дефекты
	|
	|СГРУППИРОВАТЬ ПО
	|	Дефекты.НомерПериода,
	|	Дефекты.Дефект
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерПериода,
	|	Дефект
	|ИТОГИ
	|	СУММА(КоличествоДефектов)
	|ПО
	|	НомерПериода,
	|	Дефект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Дефекты.Дефект КАК Дефект,
	|	Дефекты.НомерПериода КАК НомерПериода,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Дефекты.КоличествоДефектов) КАК КоличествоДефектов
	|ИЗ
	|	Дефекты КАК Дефекты
	|
	|СГРУППИРОВАТЬ ПО
	|	Дефекты.НомерПериода,
	|	Дефекты.Дефект
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дефект
	|ИТОГИ
	|	СУММА(КоличествоДефектов)
	|ПО
	|	Дефект,
	|	НомерПериода";
	
	Запрос.УстановитьПараметр("ТЗПериоды", ТаблицаПериодов);
	Запрос.УстановитьПараметр("ТочкиРегистрации", ТочкиРегистрацииВЗапрос);
	Запрос.УстановитьПараметр("ТочкиПроверкиКачества", ТочкиПроверкиКачестваВЗапрос);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	// МассивРезультатов[3] - выборка Период-Дефект (для определения ТОП дефектов)
	// МассивРезультатов[4] - выборка Дефект-Период (для вывода в отчет дефектов по периодам)
	
	///////////////////////////////////////////////////////////////////////////////////////////	
	// запомним данные о дефектах по каждому периоду отдельно, так легче построить топ дефектов
	///////////////////////////////////////////////////////////////////////////////////////////	
	Результат = МассивРезультатов[3];
	ВыборкаПериоды = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"НомерПериода");
	
	Пока ВыборкаПериоды.Следующий() Цикл
		ТаблицаЗаполнена = Ложь;
		
		СтрокаПериод = ТаблицаПериодов.Найти(ВыборкаПериоды.НомерПериода,"НомерПериода");		
		строкаПериод.КоличествоДефектов = ВыборкаПериоды.КоличествоДефектов;
		
		ВыборкаДефекты = ВыборкаПериоды.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Дефект");
		
		ТаблицаДефектов = новый ТаблицаЗначений;
		ТаблицаДефектов.Колонки.Добавить("Дефект");
		ТаблицаДефектов.Колонки.Добавить("ИнспектируемыйЭлемент");
		ТаблицаДефектов.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число"));
		
		Пока ВыборкаДефекты.Следующий() Цикл
			
			СтрокаДефект = ТаблицаДефектов.Добавить();
			строкаДефект.Дефект = ВыборкаДефекты.Дефект;
			строкаДефект.Количество = ВыборкаДефекты.КоличествоДефектов;
			СтрокаДефект.ИнспектируемыйЭлемент = "";
			ТаблицаЗаполнена = Истина;

		КонецЦикла; 
		
		Если НЕ ТаблицаЗаполнена Тогда
			СтрокаПериод0 = ТаблицаПериодов.Найти(1,"НомерПериода");
			ТаблицаДефектов = СтрокаПериод0.Дефекты.Скопировать();
			ТаблицаДефектов.ЗаполнитьЗначения(0,"Количество");
		КонецЕсли;	
		СтрокаПериод.Дефекты = ТаблицаДефектов;
	КонецЦикла;
	
    //Если последний столбец пуст заполним её дефектами с 0 значениями
	СтрокаПериод1 = ТаблицаПериодов.Найти(1,"НомерПериода");
	Если СтрокаПериод1.Дефекты <> Неопределено Тогда
		ТаблицаДефектов = СтрокаПериод1.Дефекты.Скопировать();
		ТаблицаДефектов.ЗаполнитьЗначения(0,"Количество");
		
		Для Каждого СтрокаПериода Из ТаблицаПериодов Цикл
			Если СтрокаПериода.Дефекты = Неопределено Тогда
				СтрокаПериода.Дефекты = ТаблицаДефектов;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	//*****************************************************************
	
	///////////////////////////////////////////////////////////////////////////////////////////	
	// запомним данные о дефектах в разрезе периодов, это для собственно вывода данных в таблицу отчета 
	///////////////////////////////////////////////////////////////////////////////////////////	
 	Результат = МассивРезультатов[4];
	
	
	ДефектыПоПериодам = новый ТаблицаЗначений;
	ДефектыПоПериодам.Колонки.Добавить("Дефект");
	ДефектыПоПериодам.Колонки.Добавить("Периоды");
	
	
	ВыборкаДефекты = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Дефект");
	
	Пока ВыборкаДефекты.Следующий() Цикл
		строкаДефект = ДефектыПоПериодам.Добавить();
		строкаДефект.Дефект = ВыборкаДефекты.Дефект;
		
		ВыборкаПериоды = ВыборкаДефекты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"НомерПериода");
		
		времТаблицаПериодов = новый ТаблицаЗначений;
		времТаблицаПериодов.Колонки.Добавить("НомерПериода");
		времТаблицаПериодов.Колонки.Добавить("Количество",Новый ОписаниеТипов("Число"));
		
		Пока ВыборкаПериоды.Следующий() Цикл
			
			СтрокаПериод = времТаблицаПериодов.Добавить();
			СтрокаПериод.НомерПериода = ВыборкаПериоды.НомерПериода;
			СтрокаПериод.Количество = ВыборкаПериоды.КоличествоДефектов;
		КонецЦикла; 
		СтрокаДефект.Периоды = времТаблицаПериодов;
	КонецЦикла;
	
	
	Возврат новый Структура("ТаблицаПериодов,ДефектыПоПериодам",ТаблицаПериодов,ДефектыПоПериодам);
	
КонецФункции // ПолучитьДетальныеДанныеПоДефектам()

Процедура СформироватьТОП10(ТабДокумент,Макет,Данные,КоличествоДефектовПопадающихВТОП,НомерПериодаДляРасчетаПаретто)
	
	ТаблицаПериодов = Данные.ТаблицаПериодов;
	ДефектыПоПериодам = Данные.ДефектыПоПериодам;
	
	// определим период, по которому будем считать топ отчета
	// особенность в том, что период, указанный в параметрах этой процедуры, может не содержать данных
	// тогда топ будет строиться по предыдущему периоду
	// но при этом предыдущий период должен находиться в той же группе периодов, что и период, 
	// указанный в параметрах процедуры
	НомерТОППериода = НомерПериодаДляРасчетаПаретто;
	ГруппаКолонок = ТаблицаПериодов.Найти(НомерПериодаДляРасчетаПаретто,"НомерПериода").ГруппаКолонок;

	ТопДефектов = ТаблицаПериодов.Найти(НомерПериодаДляРасчетаПаретто,"НомерПериода").Дефекты;
	
	Если ТопДефектов <> Неопределено Тогда
		Если ТопДефектов.Итог("Количество") <> 0 Тогда
			ТопДефектов.Сортировать("Количество Убыв");
		КонецЕсли;
	Иначе
		Возврат
	КонецЕсли;
	// начнем вывод таблицы
	// шапка таблицы
	Шапка = Макет.ПолучитьОбласть("Строка_ЗаголовокТаблица");
	ТабДокумент.Вывести(Шапка);
	
	Шапка = Макет.ПолучитьОбласть("Строка_Дата|Колонка_Заголовок");
	ТабДокумент.Вывести(Шапка);
	// теперь выведем заголовки периодов
	Для каждого Период Из ТаблицаПериодов Цикл
		Если Период.НомерПериода = НомерТОППериода Тогда
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка_Дата|Колонка_Желтая");
		Иначе	
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка_Дата|Колонка");
		КонецЕсли; 
		ОбластьСтрока.Параметры.Заполнить(Период);
		ТабДокумент.Присоединить(ОбластьСтрока);
	КонецЦикла; 
	
	
	// для расчета процента Паретто
	КоличествоДефектовВТОП = 0;
	

	//непосредственно вывод строк отчета
	СчетчикДефектов = 0;
	Для каждого ДефектИзТОП Из ТопДефектов Цикл
		СчетчикДефектов = СчетчикДефектов+1;
		ТекДефект = ДефектИзТОП.Дефект;
		
		Если СчетчикДефектов > КоличествоДефектовПопадающихВТОП Тогда
			Прервать;
		КонецЕсли; 
		
		КоличествоДефектовВТОП = КоличествоДефектовВТОП+ДефектИзТОП.Количество;
		
		// вывод первой колонки - наименование дефекта
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка_Дефект|Колонка_Заголовок");
		ОбластьСтрока.Параметры.Дефект = ""+ДефектИзТОП.Дефект + ДефектИзТОП.ИнспектируемыйЭлемент;  
		ТабДокумент.Вывести(ОбластьСтрока);
		
		// вывод количества дефектов в разрезе периодов
		ПериодыТекДефекта = ДефектыПоПериодам.Найти(ТекДефект,"Дефект").Периоды;
		
		
		Для каждого Период Из ТаблицаПериодов Цикл
			// перебираем все периода и ищем в периодах тек. дефекта такой же
			ПериодТекДефекта = ПериодыТекДефекта.Найти(Период.НомерПериода,"НомерПериода");
			Если ПериодТекДефекта = Неопределено Тогда
				Количество = 0;
			Иначе	
				Количество = ПериодТекДефекта.Количество;
			КонецЕсли; 
			
			Если Период.НомерПериода = НомерТОППериода Тогда
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка_Дефект|Колонка_Желтая");
			Иначе	
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка_Дефект|Колонка");
			КонецЕсли; 
			ОбластьСтрока.Параметры.Значение = Количество;
			ТабДокумент.Присоединить(ОбластьСтрока);
			
		КонецЦикла; 
		
	КонецЦикла; 
	
	// Расчет процента соотношения Паретто
	Итог = ТопДефектов.Итог("Количество");
	Если Итог <> 0 Тогда
		ПроцентПаретто = Окр(КоличествоДефектовВТОП*100/Итог,3);
	Иначе
		ПроцентПаретто = 0;
	КонецЕсли;

	//ТопДефектов.Итог("Количество");
	// вывод процента соотношения Паретто
	
	
	Область = Макет.ПолучитьОбласть("Строка_ПодвалСвод|Колонка_Заголовок");
	ТабДокумент.Вывести(Область);
		
	Для каждого Период Из ТаблицаПериодов Цикл
		
		Если Период.НомерПериода = НомерТОППериода-1 Тогда
			// строка с заголовком паретто
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка_ЗаголовокПаретто|Колонка");
		ИначеЕсли Период.НомерПериода = НомерТОППериода Тогда
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка_ПроцентПаретто|Колонка");
			ОбластьСтрока.Параметры.ПроцентПаретто = ПроцентПаретто;
		ИначеЕсли Период.НомерПериода = НомерТОППериода+1 Тогда
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка_СимволПроцента|Колонка");
		Иначе	
			ОбластьСтрока = Макет.ПолучитьОбласть("Строка_ПодвалСвод|Колонка");
		КонецЕсли; 
		ТабДокумент.Присоединить(ОбластьСтрока);
		
	КонецЦикла; 
	
	//пустая строка-разделитель
	Строка_Разделитель = Макет.ПолучитьОбласть("Строка_Разделитель");
	ТабДокумент.Вывести(Строка_Разделитель);
	
КонецПроцедуры
